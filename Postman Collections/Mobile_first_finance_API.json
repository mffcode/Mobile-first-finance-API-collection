{
	"info": {
		"_postman_id": "18a09024-73fe-4c80-b4f2-ffe0455f891d",
		"name": "Mobile first finance API",
		"description": "Mobile First Finance [www.mobilefirstfinance.com](http://www.mobilefirstfinance.com/) is a digital banking technology that empowers an organisation with a flexible and customisable mobility suite, that will transform any inefficient paper-based front office workforce.\n\n**Benefits of Mobile First Finance**\n\n- Build superior banking customer experience along with our fleet of in-house engineers.\n- Build your applications using our API stack\n    \n\n**Contact**\n\n- Developer queries & GIT access - [helpdesk@odedtech.com](mailto:helpdesk@odedtech.com)\n- Schedule a meeting - [https://www.mobilefirstfinance.com/book_an_appointment.html](https://www.mobilefirstfinance.com/book_an_appointment.html)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Defining environment variables",
			"item": [],
			"id": "a1c10a0a-fff1-4395-9055-0e303efa564c",
			"description": "1. Select **Environments** in the sidebar and click on **New**.\n    \n\n<img src=\"https://content.pstmn.io/79bdd19b-3886-4486-89ca-fbb89cada5e5/aW1hZ2UucG5n\" width=\"1360\" height=\"706\">\n\n2\\. Choose the **Environment** option\n\n<img src=\"https://content.pstmn.io/0ff76d85-9c0c-4f6e-90df-062e022c4240/aW1hZ2UucG5n\" width=\"1360\" height=\"706\">\n\n3\\. Provide environment name, variable name, initial value & current value and click on **Save**.\n\n<img src=\"https://content.pstmn.io/b98ad7db-cbf6-471d-9132-a012138c9519/ZGVmaW5lVVJMMi5wbmc=\">\n\n4\\. To enable or access the environment that was developed, click on the **No Environment** which is on the right top corner and choose the developed environment variable. Check out the below picture for the reference.\n\n<img src=\"https://content.pstmn.io/f2565387-d2af-4c9f-9af1-565cbb0467fd/Y2hvb3NlIHRoZSBldi5wbmc=\">"
		},
		{
			"name": "Back office",
			"item": [
				{
					"name": "Authorization",
					"item": [
						{
							"name": "login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d42f6f77-592a-4b04-8db0-b4667397db98",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var jsonValue = jsonData.body;\r",
											"pm.globals.set(\"useraccessToken\", jsonValue.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6776c999-0f7e-493c-abc6-634f72c8a900",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"rootUser\": \"enter sandbox rootuser\",\r\n    \"userName\": \"enter sandbox username\",\r\n    \"password\": \"enter sandbox password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{backofficeURL}}/LoginService/login",
								"description": "- Using this service, we can login into the application by providing credentials.\n- The payload must be sent in JSON format.\n    \n\n**Defining the user access token as global variable**\n\n- We will receive an access token in the response once we connect in to the service. In order to use the access token for other service activities, we must extract it from the response and save it in a global variable.\n- **To make the access token a global variable, follow the instructions below.**\n- Set the request as **POST** and set the login service. Provide the user credentials in the payload.\n- Select the **Tests** tab, then enter the test script shown below. Include in the test script the necessary variable name for the access token. For example I provided the varaible name for access token as **useraccessToken.**\n    \n\nvar jsonData = JSON.parse(responseBody);\n\nvar jsonValue = jsonData.body;\n\npm.globals.set(\"useraccessToken\", jsonValue.access_token);\n\n<img src=\"https://content.pstmn.io/920693c5-74e3-4312-9121-3a7135360311/aW1hZ2UucG5n\" width=\"1452\" height=\"895\">\n\n- Click the **Send** button now. We can use the defined access token variable in other services going forward.\n    \n\n- **Note** : Use the designated global variable for **access token** in the end of the every service call."
							},
							"response": []
						}
					],
					"id": "17f01589-3053-41de-97c7-0dc82b273e62",
					"description": "The login service and its payload are located in this folder. It explains how we can access the application.\n\nSet the environment before including the login service and payload."
				},
				{
					"name": "Settings",
					"item": [
						{
							"name": "Branch hierarchy",
							"item": [
								{
									"name": "Create branch",
									"id": "8ea33cd3-dcae-4304-b583-d28a2982828b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"branchName\": \"enter unique branch name\",\r\n  \"branchCode\": \"enter unique branch code\",\r\n  \"parentId\": 1\r\n}\r\n\r\n// Mention the parentID as '1'",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/BranchService/Branches?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"BranchService",
												"Branches"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- This service will create a root branch. Mandatory fields which are required is branch name, branch code and parent id.\n- Based on the parent id, you can add a new branch under the existing one, creating a branch hierarchy that resembles a tree."
									},
									"response": []
								},
								{
									"name": "Get all the existing branches",
									"id": "da1d7f38-6466-43ff-896c-d5d7ae955d14",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/BranchService/branches/treeLevel?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"BranchService",
												"branches",
												"treeLevel"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can fetch all the existing branches from the application."
									},
									"response": []
								}
							],
							"id": "ee788e15-b1ac-41c6-9058-190d7917d7fd",
							"description": "In an enterprise setup, an organisation would have specific branches from where operations are carried out. Such branches would then demand access to a specific set of users to access information about the branch and the clientele/customer info within this specific branch.\n\nBranch services enable to link and provide access to such information waterfall within the users of a specific branch."
						},
						{
							"name": "Users",
							"item": [
								{
									"name": "Create user form",
									"id": "aa47f386-3922-4d50-bd72-46c608c52afc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"User form\",\n      \"Label\": \"Form Label\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Identifier\"\n    }\n  ],\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"First name\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Last name\"\n    }\n  ]\n}\n// Since the form name is unique, kindly rename the userform label before every creation.",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/UserService/users/forms?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"users",
												"forms"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a new user form.\n- Check out the user form example json in the body below.\n- The first label in the header section needs to be defined as **Form Label**, and the value can be any name of the user form you want it to be.\n- The **Form Label** should ideally be in the **Form Header**, and the remaining fields can be in the **Form Body**."
									},
									"response": []
								},
								{
									"name": "Get all user  form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fecf0b49-b39a-4c19-a617-6799dbce94e0",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.users)",
													"var users=jsonData.users",
													"console.log(\"userFormTemplateID...\" + users[0].userFormTemplateID)",
													"pm.environment.set(\"userFormTemplateID\", users[0].userFormTemplateID);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4bfa2529-3aa8-4460-b75e-142941fccd76",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/UserService/users/forms?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"users",
												"forms"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can view all of the application's existing and newly created user forms.\n    \n\n- In the response, you will find all the available user forms and for every user form there will be **userFormTemplateID**, which is required to update an existing use form.\n    \n\n- Run this service just once, since it has a test script defined to fetch a specific **userFormTemplateID** and turn the **userFormTemplateID** into a global variable so that other necessary services can utilize it."
									},
									"response": []
								},
								{
									"name": "Get user form by user form template id",
									"id": "ca74f0d1-65bc-4b8b-939c-645d8eab7462",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/UserService/users/forms/{{userFormTemplateID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"users",
												"forms",
												"{{userFormTemplateID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch a user form by using the user form template id.\n- Since the **userFormTemplateID** will be automatically applied in the service, running this service will result in a specific user form."
									},
									"response": []
								},
								{
									"name": "Update user form",
									"id": "3d7229e8-067a-4882-bb83-c1e306a25421",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"User registration\",\n      \"Label\": \"Form Label\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Identifier\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"User Password\"\n    }\n  ],\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"First Name\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Last Name\"\n    },\n    {\n      \"Type\": \"List\",\n      \"Value\": [\n        \"Male\",\n        \"Female\"\n      ],\n      \"Label\": \"Gender\"\n    },\n    {\n      \"Type\": \"Email\",\n      \"Value\": \"\",\n      \"Label\": \"Email\"\n    },\n    {\n      \"Type\": \"Phone\",\n      \"Value\": \"\",\n      \"Label\": \"Mobile Number\"\n    },\n    {\n      \"Type\": \"List\",\n      \"Value\": [\n        \"Dashboard\",\n        \" List of clients\",\n        \" Journal entries\",\n        \" Payroll\"\n      ],\n      \"Label\": \"Default start page\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/UserService/users/forms/{{userFormTemplateID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"users",
												"forms",
												"{{userFormTemplateID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can update an existing user form.\n- Mention the user form in the payload and make the necessary changes.\n- Since the **userFormTemplateID** will be automatically applied in the service, running this service will result in updating a specific user form.\n- **Note** : The payload listed below belongs to the **userFormTemplateID**, which is fetched automatically by the service. To view that specific user form details, use the service **Get user form by user form template id.**"
									},
									"response": []
								},
								{
									"name": "Create user",
									"id": "a377a298-81a5-43c0-9cb4-033089c87e6f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"FormID\": \"1028671\",\n  \"User Password\": \"1234\",\n  \"Identifier\": \"Calvin\",\n  \"First Name\": \"Calvin\",\n  \"Last Name\": \"Marko\",\n  \"Gender\": \"Male\",\n  \"Email\": \"calvin@gmail.com\",\n  \"Mobile Number\": \"6002145239\",\n  \"Default start page\": \"Dashboard\"\n}\n\n// Since the Identifier, Email ID and Mobile Number are unique, kindly rename them before every creation.\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/UserService/users?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"users"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a new user.\n- Check out the user example json in the body below.\n- From the **Get all user form** response, select any user form and set the payload according to the form. For every user form there will be a **userFormTemplateID** and that will be act as **FormID.**\n- **Note: FormID** is mandatory to create user."
									},
									"response": []
								},
								{
									"name": "Get  all the Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e446de15-9e99-460c-b731-5d48e227483d",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.users)",
													"var users=jsonData.users",
													"console.log(\"Get a user id...\"+users[985].userID)",
													"pm.environment.set(\"userID\", users[985].userID);"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8c7f3afc-fcda-49b1-aa1d-274029dda37b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/UserService/users?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"users"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can get all the existing users.\n- In the response, you will find the **userID**, which is required when updating an existing user details.\n- Run this service just once, since it has a test script defined to fetch a specific **userID** and turn the **userID** into a global variable so that other necessary services can utilize it."
									},
									"response": []
								},
								{
									"name": "Get a user by user id",
									"id": "bec52a64-ab90-464c-b368-3bd658c97de6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/UserService/users/{{userID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"users",
												"{{userID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get a specific user by its user id.\n- Since the **userID** will be automatically applied in the service, running this service will result in a specific user."
									},
									"response": []
								},
								{
									"name": "Update user",
									"id": "1fd2b990-2205-42d1-befa-9ac5dfbeb952",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"FormID\": \"912528\",\n  \"Identifier\": \"Theodore\",\n  \"First Name\": \"Theo\",\n  \"Last Name\": \"dore\",\n  \"Gender\": \"Male\",\n  \"Email\": \"theo@gmail.com\",\n  \"Mobile Number\": 9857454475,\n  \"Default start page\": \"Dashboard\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/UserService/users/{{userID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"users",
												"{{userID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can update the user details of a specific user.\n- Since the **userID** will be automatically applied in the service, running this service will result in updating a specific user details.\n- Mention the user body in the payload and make the necessary changes.\n- **Note** : The payload listed below belongs to the **userID**, which is fetched automatically by the service. To view that specific user's details, use the service **Get a user by user id**."
									},
									"response": []
								}
							],
							"id": "a72c0e40-dbfe-4ef8-b6d7-4b28c72ec058",
							"description": "- User demographic information such as name, address, email ID etc... are possible to create based on a given use case. Eg : Manager, Administrator, Customer, and auditor are a few user types in an organisation which may have specific information for the organisation's record.\n- User service contains services to create new users and define their corresponding user access rights"
						},
						{
							"name": "User actions",
							"item": [
								{
									"name": "Get all the user actions",
									"id": "e08d9766-d1de-4596-b20d-e2666e110327",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/UserService/actions?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"actions"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch the list of user actions available.\n- Every action will have an action id, which we must specify when defining a user role."
									},
									"response": []
								}
							],
							"id": "14031378-615e-421f-ad03-e848a50873b0",
							"description": "- User actions are the list of permissions that used to make a user role."
						},
						{
							"name": "User menus",
							"item": [
								{
									"name": "Get all the user menus",
									"id": "ec4b7751-f53f-4e95-97d5-54769ea94064",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/UserService/menu?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"menu"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch the list of user menus available.\n- Every menu will have an menu id, which we must specify when defining a user role."
									},
									"response": []
								}
							],
							"id": "508ec0d2-1960-48fd-b2e6-d2de33f97736",
							"description": "- User menus are the list of menus that used to make a user role."
						},
						{
							"name": "User roles",
							"item": [
								{
									"name": "Create user role",
									"id": "01afce4c-70f5-4a35-a43e-7403c135f846",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"roleName\": \"Bank Teller\",\n  \"userActionID\": [\n    1\n  ],\n  \"menuItemsID\": [\n    1\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/UserService/users/role?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"users",
												"role"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a user role with a set of user actions and user menus attached to it.\n- Check out the user role example json in the body below.\n- The role name can be anything you want.\n- Use the service **Get all the user actions** and pick any action id to set the **userActionID.**\n- Use the service **Get all the user menus** and pick any action id to set the **menuItemsID.**"
									},
									"response": []
								},
								{
									"name": "Get user roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50591836-355d-4da1-ad3f-4a172b78a3fa",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.users)",
													"var users=jsonData.users",
													"console.log(\"users...\" + users[0].roleID)",
													"pm.environment.set(\"roleID\", users[0].roleID);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "673139fb-6733-431c-a100-bb902caa4134",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/UserService/roles?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"roles"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can view all the existing user roles available.\n- Run this service just once, since it has a test script defined to fetch a specific **roleID** and turn the **roleID** into a global variable so that other necessary services can utilize it."
									},
									"response": []
								},
								{
									"name": "Get user role by role id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "15273a7b-874e-45be-a762-4885db442c9d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "1edd6066-fa09-4c16-afce-9f9c50372f54",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/UserService/roles/{{roleID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"UserService",
												"roles",
												"{{roleID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can view a user role by it's role id.\n- Since the **roleID** will be automatically applied in the service, running this service will result in a specific user role."
									},
									"response": []
								}
							],
							"id": "33edc31e-0bea-461e-87b7-70bb2b276dfa",
							"description": "- User roles are the set of actions that an user is expected to perform."
						},
						{
							"name": "Workflow template",
							"item": [
								{
									"name": "Create workflow template",
									"id": "3b020191-58ca-4734-a4e6-6ee9f709cc4e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Nominee Name\"\n    },\n    {\n      \"Type\": \"Date\",\n      \"Value\": \"\",\n      \"Label\": \"Nominee DOB\"\n    },\n    {\n      \"Type\": \"Number\",\n      \"Value\": \"\",\n      \"Label\": \"Nominee Aadhaar \"\n    }\n  ],\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Nominee Address\"\n    },\n    {\n      \"Type\": \"Phone\",\n      \"Value\": \"\",\n      \"Label\": \"Nominee Phone number \"\n    }\n  ],\n  \"Label\": \"Nominee Details\",\n  \"Description\": \" Person who can receive the account's proceeds in the event of an unexpected emergency\"\n}\n\n// Since the workflow template name is unique, kindly rename it before every creation.\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflowTemplates?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflowTemplates"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a new workflow template.\n- Check the below json body for the example workflow template.\n- We can include the label names as per our choice and set the data types to them."
									},
									"response": []
								},
								{
									"name": "Get all workflow templates",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7cf9def0-66be-4074-b8e1-13a17d6426af",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.workflow)",
													"var workflow=jsonData.workflow",
													"console.log(\"workflow...\"+workflow[0].templateID)",
													"pm.environment.set(\"workflowTemplateID\", workflow[0].templateID);"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d669898d-fb0d-45ad-b812-10ffbc81b0f5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflowTemplates?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflowTemplates"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get all the existing workflow templates.\n- Run this service just once, since it has a test script defined to fetch a specific **workflowTemplateID** and turn the **workflowTemplateID** into a global variable so that other necessary services can utilize it."
									},
									"response": []
								},
								{
									"name": "Get workflow template by id",
									"id": "8398ed8e-b56f-46db-9b43-2cc19b33ff08",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflowTemplates/{{workflowTemplateID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflowTemplates",
												"{{workflowTemplateID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get workflow template by its workflow template id.\n- Since the **workflowTemplateID** will be automatically applied in the service, running this service will result in a specific workflow template."
									},
									"response": []
								},
								{
									"name": "Update workflow template",
									"id": "73ef0e7e-fe8f-4626-957c-c1e31523881a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Form Header\": [],\n  \"Label\": \"Credit Score\",\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"My Bank\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Pay Status\"\n    },\n    {\n      \"Type\": \"Number\",\n      \"Value\": \"\",\n      \"Label\": \"Credit Number\"\n    }\n  ],\n  \"Description\": \"A prediction of your credit behavior, such as how likely you are to pay a loan back on time, based on information from your credit reports\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflowTemplates/{{workflowTemplateID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflowTemplates",
												"{{workflowTemplateID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can update an existing workflow template based on workflow template id.\n- Since the **workflowTemplateID** will be automatically applied in the service, running this service will result in updating a specific workflow template.\n- Edit the workflow template details with the essential information that needs to be altered and add it to the payload.\n- **Note** : The payload listed below belongs to the **workflowTemplateID**, which is fetched automatically by the service. To view that specific workflow template details, use the service **Get workflow template by id**."
									},
									"response": []
								}
							],
							"id": "be9fb86e-9876-4222-a0ae-294da74ccbf1"
						},
						{
							"name": "Configure workflow template",
							"item": [
								{
									"name": "Update auto verify flag",
									"id": "dbbdd4f1-20f3-4701-bd5d-21ba1ef50f8f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/autoVerify/template?access_token={{useraccessToken}}&templateId={{workflowTemplateID}}&flag=true",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"autoVerify",
												"template"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												},
												{
													"key": "templateId",
													"value": "{{workflowTemplateID}}"
												},
												{
													"key": "flag",
													"value": "true"
												}
											]
										},
										"description": "- This service is used to set the **auto verify flag** for a specific workflow template to **true** or **false**.\n- By setting the flag to true or false, you can enable or disable auto-verification for a specific workflow template.\n- **Note** : Since the **workflowTemplateID** will be applied automatically in the service, running this will update the auto-verify flag for the workflow template we created.\n- Mention the flag as either **true** or **false** at the end of the service call."
									},
									"response": []
								},
								{
									"name": "Update workflow template flag",
									"id": "e5a719e3-49e0-4ed0-8708-0a9c06b36ffc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"templateFlag\": true\r\n}\r\n\r\n// Mention the \"templateFlag\" either as \"true\" or \"false.\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/updateworkflowTemplateflag/{{workflowTemplateID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"updateworkflowTemplateflag",
												"{{workflowTemplateID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- This service is used to set the flag for a specific workflow template to true or false. This service allows us to enable or disable external access for a specific workflow template.\n- By setting the flag to true or false, you can enable or disable workflow template external access.\n- **Note** : Since the workflow template id will be applied automatically in the service, running this will update the flag for the workflow template we created."
									},
									"response": []
								}
							],
							"id": "a1c75df5-d7a2-4377-8fd8-dd5f4eafeb5b",
							"description": "- Consist of services that are used to configure workflow template features like auto verify flag and workflow template flag."
						},
						{
							"name": "Workflows",
							"item": [
								{
									"name": "Create workflows",
									"id": "e1032212-efcc-4d59-ab48-c45ecbc418ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workFlowName\": \"Machinery loan\",\n  \"templateID\": [\n    9,\n    16,\n    907193,\n    93\n  ]\n}\n\n// Mention a single or multiple workflow template id's inside the \"templateID\"\n// Since the workflow name is unique, kindly rename it before every creation.\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflows?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflows"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a new workflow.\n- In order to create a workflow, it requires a workflow template ID. Use the service **Get all workflow templates** to fetch the workflow template id.\n- Set a single or multiple workflow template id's in the payload based on the preference.\n- Provide a workflow name and click on **Send**."
									},
									"response": []
								},
								{
									"name": "Get all workflows",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5d06d595-08d8-4a6a-ad7a-e6f57ba01b08",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.workflow)",
													"var workflow=jsonData.workflow",
													"console.log(\"workFlowID...\"+workflow[0].workFlowID)",
													"console.log(\"workFlowName...\"+workflow[0].workFlowName)",
													"pm.environment.set(\"workFlowID\", workflow[0].workFlowID);"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d0b719d2-aa36-4c8a-8de5-d4ba7ef6c365",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflows?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflows"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get all the workflows.\n- Run this service just once, since it has a test script defined to fetch a specific **workflowID** and turn the **workflowID** into a global variable so that other necessary services can utilize it."
									},
									"response": []
								},
								{
									"name": "Get a workflow by workflow id",
									"id": "1f16b2ad-063d-4cbc-bd2f-9a942760843b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflows/{{workFlowID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflows",
												"{{workFlowID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can get a specific workflow based on it's workflow id.\n- Since the **workflowID** will be automatically applied in the service, running this service will result in a specific workflow."
									},
									"response": []
								},
								{
									"name": "Get  workflows count",
									"id": "9b248aef-1f9f-4c93-9e0e-dfed84f47aa0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflows/count?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflows",
												"count"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get the total count of workflows."
									},
									"response": []
								},
								{
									"name": "Edit workflow",
									"id": "6d157b7d-71b7-4fc9-8098-63e0df176330",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"workflowName\": \"Microfinance loans\",\r\n  \"description\": \"Microfinance is a form of financial service which provides small loans and other financial services to poor and low-income households.\",\r\n  \"picture\": \"\",\r\n  \"productUUID\": \"\",\r\n  \"autoApproval\": \"No\",\r\n  \"autoDisburse\": \"No\"\r\n}\r\n\r\n// Mention any workflow name in the \"workflowName\" value\r\n// Mention workflow description in the \"description\" value.\r\n// Set the \"autoApproval\" either as Yes or No.\r\n// Set the \"autoDisbursement\" either as Yes or No.",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/updateworkflowName/{{workFlowID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"updateworkflowName",
												"{{workFlowID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can edit a specific workflow based on it's workflow id.\n- Since the **workflowID** will be automatically applied in the service, running this service will edit a specific workflow.\n- **Note** : The payload listed below belongs to the **workflowID**, which is fetched automatically by the service. To view that specific workflow details, use the service **Get a workflow by workflow id**."
									},
									"response": []
								},
								{
									"name": "Edit workflow order",
									"id": "75054d7b-7e89-4a18-95ea-01b55700f287",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"workflowOrder\": [\r\n    9,\r\n    16,\r\n    93,\r\n    2223,\r\n    912680\r\n  ]\r\n}\r\n\r\n// Change the order of the workflow temlates",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/updateWorkfloworder/{{workFlowID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"updateWorkfloworder",
												"{{workFlowID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can change the order of the workflow templates within a specific workflow.\n- Since the **workflowID** will be automatically applied in the service, running this service will change the order of the workflow templates within a specific workflow.\n- **Note** : Change the order of the workflow templates for the same workflow we update. To view that specific workflow details, use the service **Get a workflow by workflow id.**"
									},
									"response": []
								}
							],
							"id": "d7b0c02b-9541-44df-a7c9-3b9405f975d9",
							"description": "- Onboarding a customer usually requires certain procedures to be followed, for instance capturing certain information, and verifying such information provided. Such procedures could also extend to sending such information captured to even 3rd party APIs for validating KYC, performing ID verification checks, AML checks, address verification, credit bureau check etc.\n- Workflow services enable an organisation administrator to orchestrate such onboarding stages, which in turn enable customers and organisation users to follow these specific workflow steps to complete an onboarding process."
						},
						{
							"name": "Audit trial",
							"item": [
								{
									"name": "Get all the audit trial data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a1f31935-abd5-4462-bb2a-5d2ce902826e",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"",
													"var id = jsonResponse[0].id;",
													"console.log(\"auditID...\"+jsonResponse[0].id)",
													"pm.globals.set(\"auditID\", jsonResponse[0].id);",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8620122e-a4ed-43d6-8ea6-2020fd5d9265",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/ProfileService/getAuditData?pageNumber=0&numberOfRecords=10&access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"ProfileService",
												"getAuditData"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "numberOfRecords",
													"value": "10"
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can fetch the audit trial data"
									},
									"response": []
								},
								{
									"name": "Get the audit trial with audit ID",
									"id": "054d8f3c-fd51-429a-9b9d-b922eb40793f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/ProfileService/getAuditData?pageNumber=0&numberOfRecords=10&auditId={{auditID}}&access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"ProfileService",
												"getAuditData"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "numberOfRecords",
													"value": "10"
												},
												{
													"key": "auditId",
													"value": "{{auditID}}"
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "857049c4-529d-4cfb-80f4-c3e94a24f5bc"
						}
					],
					"id": "f1f0c055-2462-4ed8-a329-bd540b23dd65",
					"description": "This contains a list of services for initial configuration of Mobile First Finance setup"
				},
				{
					"name": "Profile",
					"item": [
						{
							"name": "Create profile form",
							"id": "37db7c54-3882-4229-83a1-3642608a2a9b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"Customer registration form\",\n      \"Label\": \"Form Label\"\n    }\n  ],\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"National ID\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Name\"\n    },\n    {\n      \"Type\": \"List\",\n      \"Value\": [\n        \"Male\",\n        \"Female\"\n      ],\n      \"Label\": \"Gender\"\n    },\n    {\n      \"Type\": \"Branch\",\n      \"Value\": \"L0\",\n      \"Label\": \"Hierarchy\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Latitude\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Longitude\"\n    },\n    {\n      \"Type\": \"Phone\",\n      \"Value\": \"\",\n      \"Label\": \"Mobile Number\"\n    },\n    {\n      \"Type\": \"Date\",\n      \"Value\": \"\",\n      \"Label\": \"Date of Birth\"\n    }\n  ]\n}\n// Since the profile form name is unique, kindly rename it before every creation.\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/profiles/forms?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"profiles",
										"forms"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can create a profile form.\n- Check out the profile form example json in the body below.\n- The first label in the header section needs to be defined as Form Label, and the value can be any name of the profile form you want it to be.\n- The **Form Label** should ideally be in the **Form Header**, and the remaining fields can be in the **Form Body**."
							},
							"response": []
						},
						{
							"name": "Get all the profile forms",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "181f7a29-3530-4798-8a6e-81dd88ff8dcd",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.profileForms)",
											"var profileForms=jsonData.profileForms",
											"console.log(\"users...\"+profileForms[0].profileFormID)",
											"pm.environment.set(\"profileFormID\", profileForms[0].profileFormID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2253b02a-c603-43e7-9979-622dc4b49c17",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/profiles/forms?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"profiles",
										"forms"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can get all the profile forms that exists in the application.\n- Run this service just once, since it has a test script defined to fetch a specific **profileFormID** and turn the **profileFormID** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Get a profile form by profile form id",
							"id": "9d9c64e6-b2a6-44fc-82a0-479a25661fef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/profiles/forms/{{profileFormID}}?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"profiles",
										"forms",
										"{{profileFormID}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can get a specific profile form based on **profileFormID**.\n- Since the **profileFormID** will be automatically applied in the service, running this service will result in a specific profile form."
							},
							"response": []
						},
						{
							"name": "Update profile form",
							"id": "1c48ba33-2e07-496c-abeb-b839ac2c74b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"Customer registration form\",\n      \"Label\": \"Form Label\"\n    }\n  ],\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"National ID\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Full Name\"\n    },\n    {\n      \"Type\": \"List\",\n      \"Value\": [\n        \"Male\",\n        \"Female\"\n      ],\n      \"Label\": \"Gender\"\n    },\n    {\n      \"Type\": \"Branch\",\n      \"Value\": \"L0\",\n      \"Label\": \"Hierarchy\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Latitude\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Longitude\"\n    },\n    {\n      \"Type\": \"Phone\",\n      \"Value\": \"\",\n      \"Label\": \"Mobile Number\"\n    },\n    {\n      \"Type\": \"Date\",\n      \"Value\": \"\",\n      \"Label\": \"Date of Birth\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/profiles/forms/{{profileFormID}}?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"profiles",
										"forms",
										"{{profileFormID}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can update existing user form by it's user id.\n- Since the **profileFormID** will be automatically applied in the service, running this service will result in updating a specific profile form.\n- **Note** : The payload listed below belongs to the **profileFormID**, which is fetched automatically by the service. To view that specific profile from details, use the service **Get a profile form by profile form id**."
							},
							"response": []
						},
						{
							"name": "Create profile",
							"id": "524b730c-8982-4420-bf54-fd4ee9a2cea9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"FormID\": \"20\",\n  \"National ID\": \"Enter a unique national id\",\n  \"Name\": \"Enter profile name\",\n  \"Gender\": \"Mention the gender\",\n  \"Latitude\": \"\",\n  \"Longitude\": \"\",\n  \"Mobile Number\": 9136525478,\n  \"Date of Birth\": \"YYYY-MM-DD\",\n  \"Hierarchy\": 1,\n  \"branchId\": \"\"\n}\n// Provide a unique mobile number\n// Enter the \"Date of Birth\" in yyyy-mm-dd format\n// Since the profile will be created under the root branch, mention the hierarchy as 1.\n// Leave the Latitude, Longitude and branchId as empty hence, they are not mandatory to provide in the profile creation.",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/profiles?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"profiles"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can create a new profile.\n- Check out the profile example json in the body below.\n- From the **Get all the profile forms** response, select any **profile** **form** and set the payload according to the form. For every **profile form** there will be a **profileFormID** and that will be act as **FormID**.  \n    Note: **FormID** is mandatory to create profile."
							},
							"response": []
						},
						{
							"name": "Get all the profiles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72610622-0e4a-42c4-a994-d81a2760fdba",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.profiles)",
											"var profiles=jsonData.profiles",
											"console.log(\"profileID...\"+profiles[0].profileID)",
											"pm.environment.set(\"profileID\", profiles[0].profileID);",
											"",
											"var profileDetails=profiles[0].profileDetails",
											"console.log(\"profileDetails...\"+profileDetails[\"Mobile Number\"])",
											"pm.environment.set(\"MobileNumber\", profileDetails[\"Mobile Number\"]);",
											"",
											"var profileDetails=profiles[0].profileDetails",
											"console.log(\"profileDetails...\"+profileDetails[\"Identifier\"])",
											"pm.environment.set(\"Identifier\", profileDetails[\"Identifier\"]);",
											"",
											"var profileDetails=profiles[0].profileDetails",
											"console.log(\"Hierarchy...\"+profileDetails[\"Hierarchy\"])",
											"pm.environment.set(\"Hierarchy\", profileDetails[\"Hierarchy\"]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a38e0bb9-36e9-4963-a2a1-6593da055abe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/profiles?pageNumber=0&numberOfRecords=10&access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"profiles"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can view all the existing profiles.\n- In the response, you will find the **profileID**, which is required when updating an existing profile details.\n- Run this service just once, since it has a test script defined to fetch a specific **profileID** and turn the **profileID** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Get profile by profileid",
							"id": "99e57d92-3a84-408a-97a4-dec94e45aefe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/profiles/{{profileID}}?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"profiles",
										"{{profileID}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can get profile details by it's profile id.\n- Since the **profileID** will be automatically applied in the service, running this service will result in a specific profile."
							},
							"response": []
						},
						{
							"name": "Update profile",
							"id": "4f62c6c5-d1c1-42fd-a27f-9a2db844ceec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"FormID\": \"20\",\n  \"National ID\": \"Update national id\",\n  \"Name\": \"Update profile name\",\n  \"Gender\": \"Update gender\",\n  \"Latitude\": \"\",\n  \"Longitude\": \"\",\n  \"Mobile Number\": 9452102,\n  \"Date of Birth\": \"Update DOB\",\n  \"Hierarchy\": 1,\n  \"branchId\": \"\"\n}\n// Update the required details of the profile.\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/profiles/{{profileID}}?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"profiles",
										"{{profileID}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can update existing profile details.\n- Since the **profileID** will be automatically applied in the service, running this service will result in updating a specific profile details.\n- Mention the profile body in the payload and make the necessary changes.\n- **Note** : The payload listed below belongs to the **profileID**, which is fetched automatically by the service. To view that specific profile details, use the service **Get profile by profileid**."
							},
							"response": []
						},
						{
							"name": "Search profile",
							"id": "1a412a91-9fb2-49a7-9d0b-8222da4ace7b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/searchProfiles?&mobileNumber={{MobileNumber}}&access_token={{useraccessToken}}&pageNumber=0&numberOfRecords=10",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"searchProfiles"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "mobileNumber",
											"value": "{{MobileNumber}}"
										},
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										},
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										}
									]
								},
								"description": "- Using this service we can filter/search a profile with mobile number.\n- Since the **MobileNumber** will be automatically applied in the service, running this service will result in a specific profile details."
							},
							"response": []
						},
						{
							"name": "Get profiles count",
							"id": "bc0c58b1-d78d-49fe-9102-438a6b5fe10e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/profile/count?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"profile",
										"count"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service we can get total count of the profiles that exist in the application."
							},
							"response": []
						}
					],
					"id": "227629b4-cc94-44c3-8a27-e9a31de86a9c",
					"description": "An organisation may comprise diverse profile types such as customer, business owner, enterprise info etc... Each of such profiles may require typical information to be stored in an organisation's record. Such profile types are termed profile templates that can be further used to create specific profiles.\n\nProfile service contains services to define client profile templates and to create profiles in such categories."
				},
				{
					"name": "Onboard",
					"item": [
						{
							"name": "View a workflow",
							"item": [
								{
									"name": "Get workflow by workflow id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06eb9086-ab05-43ca-91d4-0fd79491eb9e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b5b30e5b-31ed-4635-b3cd-47d8d268208a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflows/{{workFlowID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflows",
												"{{workFlowID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get a workflow based on it's workflow id."
									},
									"response": []
								},
								{
									"name": "Get onboard filter by workflowid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e19f0e7c-1da1-468a-bed9-ee369ba85601",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"var workflow=jsonData.workflow",
													"console.log(\"workflow...\"+Object.keys(workflow))",
													"// var jsonWorkflowData= Object.keys(workflow);",
													"// console.log(\"jsonWorkflowData...\"+jsonWorkflowData[1])",
													"var jsonWorkflowData= Object.keys(workflow)[1];",
													"console.log(\"workflowTemplateDetailsID...\"+workflow[jsonWorkflowData][0].detailsID)",
													"pm.environment.set(\"workflowTemplateDetailsID\", workflow[jsonWorkflowData][0].detailsID);",
													"",
													"// var jsonWorkflowData= Object.keys(workflow)[2];",
													"// console.log(\"workflowTemplateDetailsID2...\"+workflow[jsonWorkflowData][0].detailsID)",
													"",
													"// var jsonWorkflowData= Object.keys(workflow)[3];",
													"// console.log(\"workflowTemplateDetailsID3...\"+workflow[jsonWorkflowData][0].detailsID)",
													"",
													"// var jsonWorkflowData= Object.keys(workflow)[4];",
													"// console.log(\"workflowTemplateDetailsID4...\"+workflow[jsonWorkflowData][0].detailsID)",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c49adb1d-2289-4fcb-8515-719469770ebd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/onboardFilter?numberOfRecords=50&pageNumber=0&access_token={{useraccessToken}}&workflowId={{workFlowID}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"onboardFilter"
											],
											"query": [
												{
													"key": "numberOfRecords",
													"value": "50"
												},
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												},
												{
													"key": "workflowId",
													"value": "{{workFlowID}}"
												}
											]
										},
										"description": "- For every workflow template there will be a **workflowTemplateDetailsId,** By using this service, we can fetch the **workflowTemplateDetailsId**, which is required to verify a workflow.\n    \n\n- Run this service just once, since it has a test script defined to fetch a specific **workflowTemplateDetailsId** and turn the **workflowTemplateDetailsId** into a environment variable so that other necessary services can utilize it."
									},
									"response": []
								}
							],
							"id": "4cc169f8-7b21-4bee-9881-31c88cfb9c91"
						},
						{
							"name": "Link profile to a worflow",
							"item": [
								{
									"name": "Link profile to workflow",
									"id": "571c3871-5acd-4ebd-bd20-51ab0f641b44",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"profileDetails\": [\n    {\n      \"profileID\": \"87c85ee9-0ddc-487e-9d5c-a3d0a7641318\"\n    }\n  ],\n  \"workFlowID\": \"2224\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflowToProfiles?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflowToProfiles"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can link a profile to the workflow.\n- For linking the profile to a specific workflow we have to mention both the **profileID** and the **workFlowID** in the payload. Check the below example json payload for detail.\n- Click on the Environment quick look in the right top corner and navigate to environment (**backofficeURL**) to find the generated **profileID** and **workFlowID**.\n- **Note** : To fetch the **profileID**, run the service **Get all the profiles** in the **Profile** section and to fetch the **workFlowID**, run the service **Get all workflows** in the **Workflows** under the **Settings**."
									},
									"response": []
								},
								{
									"name": "Get workflow profile id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5ddcbdc6-0549-4580-b377-9a08e641ce76",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.workflow)",
													"",
													"var workflow=jsonData.workflow",
													"console.log(\"workflowProfileID...\"+workflow.workflowProfileID)",
													"pm.environment.set(\"workflowProfileID\", workflow.workflowProfileID);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "28c76d03-4cfa-40e1-b986-2b526553715e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://dev.mobilefirstfinance.com:5055/WorkflowService/mobileApp/{{profileID}}?access_token={{useraccessToken}}",
											"protocol": "https",
											"host": [
												"dev",
												"mobilefirstfinance",
												"com"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"mobileApp",
												"{{profileID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch the **workflowProfileID** which is required to verify a workflow.\n- Run this service just once, since it has a test script defined to fetch a specific **workflowProfileID** and turn the **workflowProfileID** into a environment variable so that we can utilize it while verifying a workflow."
									},
									"response": []
								}
							],
							"id": "a372710b-b64b-4c5f-8006-35ee62f0f28e"
						},
						{
							"name": "Update details in workflow",
							"item": [
								{
									"name": "Update details in the workflow template",
									"id": "e547e475-8072-4118-992f-43176f55e194",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Bank Account Number\": 85632652,\r\n  \"Bank Name\": \"HSBC\",\r\n  \"Bank branch name\": \"Hyderabad\",\r\n  \"IFSC Code\": \"HSBC000623\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflowTemplateDetails/{{workflowTemplateDetailsID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflowTemplateDetails",
												"{{workflowTemplateDetailsID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can update existing workflow template details.\n- Since the **workflowTemplateDetailsID** will be automatically applied in the service, running this service will result in updating a specific workflow template details.\n- **Note** : (1)The payload listed below belongs to a specific **workflow template** of a specific **workflow** to which the profile got onboarded.\n- (2) Usually there might be multiple workflow templates for every individual workflow. Based on workflow template, we need to pass the template details in the payload."
									},
									"response": []
								}
							],
							"id": "5d3f7383-dad0-4334-8d0c-046f25fe353c"
						},
						{
							"name": "Verify a workflow template",
							"item": [
								{
									"name": "Verify a workflow template",
									"id": "38a16fbc-08ef-4c5a-ad56-b4de0b0438a7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"workflowTemplateDetails\": [\r\n    {\r\n      \"templateDetailsID\": 1616621,\r\n      \"templateID\": 16,\r\n      \"workflowProfileID\": 1616619,\r\n      \"workflowTemplateDetails\": {\r\n        \"Bank Account Number\": 85632652,\r\n        \"Bank Name\": \"HSBC\",\r\n        \"Bank branch name\": \"Hyderabad\",\r\n        \"IFSC Code\": \"HSBC000623\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n// templateDetailsID : Once you run the service \"Get onboard filter by workflowid\" under \"View a workflow\" in the \"Onboard\" section, you will get the \"templateDetailsID.\" To obtain it, check the environment variables.\r\n// templateID : Once you run the service \"Get all workflow templates\" under \"Workflow template\" in the \"Settings\" section, you will get the \"templateID.\" To obtain it, check the environment variables.\r\n// workflowProfileID : Once you run the service \"Get workflow profile id\" under \"Link profile to a workflow\" in the \"Onboard\" section, you will get the \"workflowProfileID.\" To obtain it, check the environment variables.",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/WorkflowService/workflowTemplateDetails/verify?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"WorkflowService",
												"workflowTemplateDetails",
												"verify"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can verify a specific workflow template."
									},
									"response": []
								}
							],
							"id": "7044ead0-2b6b-4ae9-915b-0374a8a8e2d6"
						}
					],
					"id": "0e29be9b-5869-46cd-a7ce-8437d87b6073",
					"description": "Onboard module is used for onboarding a new client. This folder consist of different services which are used for the functionality of the module."
				},
				{
					"name": "Approve",
					"item": [
						{
							"name": "Approve a profile",
							"item": [
								{
									"name": "Approve a profile",
									"id": "025ab793-cde9-4a07-bfd7-dbb4b6d5acbe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"ApprovedProfiles\": [\r\n    {\r\n      \"workflowProfileID\": 1599801,\r\n      \"workflowID\": \"1496367\",\r\n      \"profileID\": \"b675bb20-4f29-4682-aab5-9e065823bc13\",\r\n      \"Approved\": \"No\"\r\n    }\r\n  ]\r\n}\r\n\r\n// workflowProfileID : Once you run the service \"Get workflow profile id\" under \"Link profile to a workflow\" in the \"Onboard\" section, you will get the \"workflowProfileID.\" To obtain it, check the environment variables.\r\n\r\n// workflowID : Once you run the service \"Get all workflows\" under \"Workflows\" in the \"Settings\" section, you will get the \"workflowID.\" To obtain it, check the environment variables.\r\n\r\n// profileID : Once you run the service \"Get all the profiles\" under \"Profile\" section, you will get the \"profileID.\" To obtain it, check the environment variables.\r\n\r\n// Approved : Mention the approved value as \"NO\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/ProfileService/editApprovalProfiles?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"ProfileService",
												"editApprovalProfiles"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can approve a profile."
									},
									"response": []
								}
							],
							"id": "b083ddf7-f0b7-4499-a96b-3c92390fbd83"
						}
					],
					"id": "233ffe8a-525f-40f0-86c3-8b3be8597e10",
					"description": "Approve client is a module which allows us to approve a profile after completion of onboard verification."
				},
				{
					"name": "Payments",
					"item": [
						{
							"name": "Bulk Deals",
							"item": [
								{
									"name": "Get IED events",
									"id": "e6496c2d-3c31-4675-9def-ab8ec81c3a00",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/PortfolioService/bulkReceiveAndDeals?&access_token={{useraccessToken}}&pageNumber=0&numberOfRecords=1&Hierarchy=1&repaymentType=No&eventType=IED",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"PortfolioService",
												"bulkReceiveAndDeals"
											],
											"query": [
												{
													"key": null,
													"value": null
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												},
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "numberOfRecords",
													"value": "1"
												},
												{
													"key": "Hierarchy",
													"value": "1"
												},
												{
													"key": "repaymentType",
													"value": "No"
												},
												{
													"key": "eventType",
													"value": "IED"
												}
											]
										},
										"description": "- Using this service, we can get the pending events which are yet to be disbursed.\n- In the service params there are filters like **pageNumber**, **numberOfRecords** and **eventType**. Using these filters, we can retrieve the required data, such as a group of **IED**(loan amount)/**FP**(Fee) type events in 10 pages and 50 records."
									},
									"response": []
								},
								{
									"name": "Disburse IED event",
									"id": "0f8dd5db-8e65-474e-91ce-4865945bd86e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n  {\r\n    \"ContractUUID\": \"2f9f80cb-5b56-4b65-82a8-12578b21e75b\",\r\n    \"EventID\": \"cddfd22e-82d9-4576-ac1f-9bcb0fea1bde\",\r\n    \"EventTime\": \"2022-07-01T23:59:59\",\r\n    \"EventType\": \"IED\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": -25000,\r\n    \"DebitPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"CreditPaymentChannelID\": \"5b33e59d-07bf-4bd0-8fcd-5eff59a4f254\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": -25000,\r\n    \"ProcessTime\": \"2022-07-01T23:59:59\",\r\n    \"Hierarchy\": 1599383\r\n  }\r\n]\r\n// The disbursement consists of two different sorts of events, the IED (loan amount) and the FP (fee). The FP event is optional and not every contract must include it.\r\n\r\n// The ContractUUID, EventID, EventTime(event_time), EventType(event_type), Units and Value(event_value) can be found in the response data of the \"Get IED event.\"\r\n\r\n// DebitPaymentChannelID and CreditPaymentChannelID can be found in the \"eventjson\" key, which is contained within the Get IED event's response.\r\n\r\n// PaymentMethod : Set the PaymentMethod as billing.\r\n\r\n// RemainingAmount : The Value and RemaingAmount are both the same.\r\n\r\n// ProcessTime : The EventTime and ProcessTime are both the same.\r\n\r\n// Hierarchy : Hierarchy can be found inside the \"profilejson\" key, which is contained within the Get IED event's response.",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/PortfolioService/savePortfolioRepayment?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"PortfolioService",
												"savePortfolioRepayment"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can disburse a pending event (IED/FP).\n- Check the below example payload for detail."
									},
									"response": []
								}
							],
							"id": "935cc2ee-621d-4049-ae15-75094c6c0d53"
						},
						{
							"name": "Bulk Receive",
							"item": [
								{
									"name": "Get IP/PR events",
									"id": "5ddde287-6e0a-431d-8c1d-67bb123f0092",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/PortfolioService/bulkReceiveAndDeals?&access_token={{useraccessToken}}&pageNumber=0&numberOfRecords=10&Hierarchy=1&repaymentType=No",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"PortfolioService",
												"bulkReceiveAndDeals"
											],
											"query": [
												{
													"key": null,
													"value": null
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												},
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "numberOfRecords",
													"value": "10"
												},
												{
													"key": "Hierarchy",
													"value": "1"
												},
												{
													"key": "repaymentType",
													"value": "No"
												}
											]
										},
										"description": "- Using this service, we can get the pending **IP/PR** events which are yet to be receive.\n- In the service params there are filters like **pageNumber**, **numberOfRecords**, **Hierarchy** and **repaymentType**. Using these filters, we can retrieve the required data, such as a group of IP/PR events in 10 pages and 50 records etc."
									},
									"response": []
								},
								{
									"name": "Repay IP/PR event",
									"id": "227f51ae-8828-4b47-af3e-d453b4069878",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n  {\r\n    \"ContractUUID\": \"2f9f80cb-5b56-4b65-82a8-12578b21e75b\",\r\n    \"EventID\": \"d471066b-adfe-465f-9d7d-6ba9bd64eb4c\",\r\n    \"EventTime\": \"2022-07-08T23:59:59\",\r\n    \"EventType\": \"IP\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 101,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"5b33e59d-07bf-4bd0-8fcd-5eff59a4f254\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 101,\r\n    \"ProcessTime\": \"2022-07-08T23:59:59\",\r\n    \"Hierarchy\": \"1599383\"\r\n  },\r\n  {\r\n    \"ContractUUID\": \"2f9f80cb-5b56-4b65-82a8-12578b21e75b\",\r\n    \"EventID\": \"fa10cf97-98d7-43be-93aa-ff0e75e53431\",\r\n    \"EventTime\": \"2022-07-08T23:59:59\",\r\n    \"EventType\": \"PR\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 2399,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"5b33e59d-07bf-4bd0-8fcd-5eff59a4f254\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 2399,\r\n    \"ProcessTime\": \"2022-07-08T23:59:59\",\r\n    \"Hierarchy\": \"1599383\"\r\n  }\r\n]\r\n\r\n// The repayment consists of two different sorts of events, the IP(Interest) and the PR(Principal). \r\n\r\n// The ContractUUID, EventID, EventTime(event_time), EventType(event_type), Units and Value(event_value) can be found in the response data of the \"Get IP/PR event.\"\r\n\r\n// DebitPaymentChannelID and CreditPaymentChannelID can be found in the \"eventjson\" key, which is contained within the Get IP/PR event's response.\r\n\r\n// PaymentMethod : Set the PaymentMethod as billing.\r\n\r\n// RemainingAmount : The Value and RemaingAmount are both the same.\r\n\r\n// ProcessTime : The EventTime and ProcessTime are both the same.\r\n\r\n// Hierarchy : Hierarchy can be found inside the \"profilejson\" key, which is contained within the Get IP/PR event's response.\r\n\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}/PortfolioService/savePortfolioRepayment?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"PortfolioService",
												"savePortfolioRepayment"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can repay a pending IP/PR event .\n- Check the below example payload for detail."
									},
									"response": []
								}
							],
							"id": "395af17e-558c-4fd6-9cc1-541f457e3878"
						},
						{
							"name": "Receipt Approval",
							"item": [
								{
									"name": "Get the payment events yet to be approved",
									"id": "36d2bb8f-3414-4904-97d6-2978d90ecab5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}/PortfolioService/receiptApproval?=&numberOfRecords=10&pageNumber=0&access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"path": [
												"PortfolioService",
												"receiptApproval"
											],
											"query": [
												{
													"key": "",
													"value": ""
												},
												{
													"key": "numberOfRecords",
													"value": "10"
												},
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch the events IED/FP & IP/PR which are yet to be approved."
									},
									"response": []
								}
							],
							"id": "2b03081d-4a08-4cd0-9b2a-27748da3d927"
						}
					],
					"id": "9463df60-4e59-4e73-be19-11dc40167243"
				},
				{
					"name": "Document storage",
					"item": [
						{
							"name": "To view the personal documents for a specific profile",
							"id": "412dad75-c601-41b5-927b-90d089116cca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/files/{{documentsprofileID}}/personal?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"files",
										"{{documentsprofileID}}",
										"personal"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To view the business documents for a specific profile",
							"id": "f6deef37-d07b-4a36-8fac-884405d5acff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}/ProfileService/files/{{documentsprofileID}}/business?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"path": [
										"ProfileService",
										"files",
										"{{documentsprofileID}}",
										"business"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To view the contract documents for a specific profile",
							"id": "f045c7ac-33b3-4e62-81bf-294b64d220d9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"cf95a44d-7c6a-40cd-bde9-ebe40c5c7604\",\n  \"aaf596cb-66b5-423d-b2cc-17339684621b\",\n  \"55628a44-e666-430d-b2d3-0cf7d2edcfab\",\n  \"41568864-d369-4ba6-8469-d41a1af76ff3\",\n  \"45351f8c-4bb6-4501-a9b4-e87348a5add5\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dev.mobilefirstfinance.com:5055/ProfileService/productTemplate/{{documentsprofileID}}/contracts?access_token={{useraccessToken}}",
									"protocol": "https",
									"host": [
										"dev",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"productTemplate",
										"{{documentsprofileID}}",
										"contracts"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "eec2dfeb-95d9-4b25-aba1-3aede2c5d8fe"
				}
			],
			"id": "0160a252-9171-4fbc-92aa-7363fda045e9",
			"description": "Back-office API enable admin configurations and back-office support."
		},
		{
			"name": "Client web app",
			"item": [
				{
					"name": "Client sign up",
					"item": [
						{
							"name": "Mobile number and Email validation",
							"item": [
								{
									"name": "Mobile number validation",
									"id": "87991568-429c-4e15-97cf-6e6e9d248391",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Mobile Number\": \"Provide a valid mobile number\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:7190/mff/api/userValidation"
									},
									"response": []
								},
								{
									"name": "Email Id validation",
									"id": "b1b861b3-52af-4f14-b3c0-e2c7d40e3486",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Email\": \"provide a valid email id\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:7190/mff/api/userValidation"
									},
									"response": []
								}
							],
							"id": "ceda454a-1294-4f19-9fed-02bc11e5e7d3"
						},
						{
							"name": "Get client sign up form",
							"id": "0cfc491e-e95d-4c56-8aa8-e8df2df5eca6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{customerURL}}:7190/mff/api/clientUserform/Customer"
							},
							"response": []
						},
						{
							"name": "Signing up a new client",
							"id": "e2f2866e-b23e-454b-8dde-e24573471a97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Domicile\": \"enter domicile\",\r\n  \"Identifier\": \"enter a unique identifier\",\r\n  \"User Password\": \"enter a 6 digit pin\",\r\n  \"National ID\": \"enter a valid national id\",\r\n  \"First Name\": \"enter first name\",\r\n  \"Last Name\": \"enter last name\",\r\n  \"Date of Birth\": \"yyyy-mm-dd\",\r\n  \"Mobile Number\": \"enter a valid mobile number\",\r\n  \"Email\": \"enter a valid email id\",\r\n  \"FormID\": 1131982\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:7190/mff/api/createClientUser",
								"description": "- To complete the customer sign-up process, use the default customer sign-up form below.\n- All of the keys mentioned are required, and most of them are unique.\n- The **FormID** mentioned in the payload belongs to the default user form for customer signup, and it is mandatory to mention.\n- **Identifier** - **enter a unique identifier and the data should be in varchar.**\n- **User Password - user password should be a 6 digit pin number.**\n- **Date of Birth - enter date of birth in yyyy-mm-dd format.**"
							},
							"response": []
						}
					],
					"id": "543e1c2d-2743-4c5d-a5d1-e48aefe99477",
					"description": "- This service is used to register a new customer.\n- Firstly define a new environment variable for the customer URL and make it active.\n- Check out the **Defining environment variables** section for how to define a new environment.\n- Set the environment to the customer URL, and then proceed to the signup step."
				},
				{
					"name": "Authorization",
					"item": [
						{
							"name": "Login with client credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd42723b-c160-4cf7-bb41-79b932cc6e96",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var jsonValue = jsonData.body;\r",
											"pm.globals.set(\"custoken\", jsonValue.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c8d60d5a-0547-4de4-98d2-157a27a979cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"rootUser\": \"enter sandbox rootuser\",\r\n  \"userName\": \"enter sandbox username\",\r\n  \"password\": \"enter sandbox password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/LoginService/login",
								"description": "- Using this service, we can gain access to the customer application. Include in the payload the freshly created customer credentials.\n- Note : The **Identifier** that we provide in the signup form will act as the **userName** in the login form."
							},
							"response": []
						}
					],
					"id": "c8609cd7-0735-47fe-a715-d87d095eca66",
					"description": "This service is used to perform customer authentication."
				},
				{
					"name": "Client onboarding",
					"item": [
						{
							"name": "View the list of workflows",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "683816cc-f383-4c8e-8695-cf987132c74d",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.workflow)",
											"var workflow=jsonData.workflow",
											"console.log(\"workflowid...\"+workflow[13].workFlowID)",
											"pm.globals.set(\"workflowid\", workflow[13].workFlowID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3af073de-7715-4d8e-bfd4-bd98a6cda202",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflows?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflows"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the list of available workflows.\n- Run this service just once since it has a test script defined to fetch a specific workflow and turn the **workflow** **id** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Fetch all the workflow templates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d7bbc6d-2785-4171-8a1d-ceda1f606daa",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var workflow=jsonData.workflow",
											"console.log(\"workflow...\"+jsonData.workflow)",
											"var templateid=workflow[39].templateID",
											"console.log(\"templateid...\"+workflow[39].templateID)",
											"pm.globals.set(\"templateid\",workflow[39].templateID );",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2fb89982-3bf2-4c49-af28-d22598e68713",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflowTemplates?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowTemplates"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the list of available **workflow templates**.\n- Using this service we can fetch the **template id** which is necessary to **verify** the **workflow template details**.\n- Run this service just once since it has a test script defined to fetch a specific workflow template id and turn the **template id** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Fetch the profile details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3fed4e18-6eb8-4802-ae5d-f311d41aecad",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.profiles)",
											"var profiles=jsonData.profiles",
											"console.log(\"profiles...\"+profiles[0].profileID)",
											"pm.globals.set(\"profileid\", profiles[0].profileID);",
											"console.log(\"linkedprofileid...\"+profiles[0].linkedProfileID)",
											"pm.globals.set(\"linkedprofileid\", profiles[0].linkedProfileID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b55128b7-b4d4-435e-9c3b-34d63dfeb4c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ProfileService/profiles?pageNumber=0&numberOfRecords=10&access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the logged-in user's profile details.\n- Run this service just once since it has a test script defined to turn the **profile id** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "To link a profile to workflow",
							"id": "107290f6-e442-4fab-b4fe-d887efb66676",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"profileDetails\": [\r\n    {\r\n      \"profileID\": \"5a16aadd-e55e-44d1-8bdd-0c444d80e912\"\r\n   \r\n    }\r\n  ],\r\n  \"workFlowID\": 1537895\r\n}\r\n//Look for the \"profileid\" & \"workflowid\" in the \"Globals\" under the \"Environment quick look.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflowToProfiles?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowToProfiles"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service we can link a profile to the workflow.\n- For linking the profile to a specific workflow we have to mention both the **profileID** and the **workFlowID** in the payload. Check the below json payload for detail.\n- Click on the **Environment quick look** in the right top corner and navigate to **Globals** to find the generated **profileid** and **workflowid**.\n- **Note** : To fetch the **profileid**, run the service Fetch the profile details and to fetch the **workflowid**, run the service View the list of workflows."
							},
							"response": []
						},
						{
							"name": "Get workflow templates based on profileID and workflowID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "48a767e7-0dab-4881-86e4-91e9c4fc2390",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var workflow=jsonData.workflow",
											"console.log(\"workflow...\"+jsonData.workflow)",
											"var workFlowTemplateDetails=workflow.workFlowTemplateDetails",
											"console.log(\"workFlowTemplateDetails...\"+workflow.workFlowTemplateDetails)",
											"var workflowProfileID=workflow.workflowProfileID",
											"console.log(\"workflowprofileid...\"+workflow.workflowProfileID)",
											"pm.globals.set(\"workflowprofileid\",workflow.workflowProfileID );"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c149b27f-8dfd-4a14-b3b9-7f0bcdfbd306",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflowByprofile/{{profileid}}/{{workflowid}}?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowByprofile",
										"{{profileid}}",
										"{{workflowid}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- After linking a profile to the workflow we can check the workflow templates based on **profileID** and **workflowID**.\n- We must provide the exact **profileID** of a profile that has been linked to a workflow, as well as the **workflowID** in the service.\n- Run the services **Fetch the profile details** and **View the list of workflows** services before using this service so that those id's will automatically get applied in the service call.\n- As a result, we'll get the **workflow profile id**, which is useful for viewing a profile's workflow template details. Run this service just once since it has a test script defined to turn the **workflow profile id** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "View the workflow template details of profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0269c867-7a9f-46fb-89d9-f8c5ec8e8f36",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"",
											"var workflow=jsonData.workflow",
											"console.log(\"workflow...\"+jsonData.workflow)",
											"",
											"var num=workflow[\"1595354\"]",
											"console.log(\"num...\"+workflow[\"1595354\"])",
											"",
											"var numdata = num[0].detailsID",
											"console.log(\"clientwebtemplatedetailsid...\"+num[0].detailsID)",
											"pm.globals.set(\"clientwebtemplatedetailsid\",num[0].detailsID );",
											"",
											"",
											"",
											"",
											"",
											"// var templateid=workflow[39].templateID",
											"// console.log(\"templateid...\"+workflow[39].templateID)",
											"// pm.globals.set(\"templateid\",workflow[39].templateID );",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "aaf278ff-6993-45dd-a507-5bf216a829f1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflow/workflowTemplateDetails/{{workflowid}}/No?&numberOfRecords=10&pageNumber=0&access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflow",
										"workflowTemplateDetails",
										"{{workflowid}}",
										"No"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service we can fetch the workflow template details.\n- **Note :** Run this service once before proceeding to the next service."
							},
							"response": []
						},
						{
							"name": "To save the details in workflow template",
							"id": "bba6507d-3561-4693-961d-029e7fbfe12d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"I Agree the terms and conditions\": \"Yes\"\r\n}\r\n\r\n// Mention the value as \"Yes\" or \"No.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflowTemplateDetails/{{clientwebtemplatedetailsid}}?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowTemplateDetails",
										"{{clientwebtemplatedetailsid}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can update workflow template details based on workflow template details id.\n- Mention the payload according to the workflow template and provide the necessary value.\n- The **workflow template details id** will be retrieved and applied to the service from **View the workflow template details of a profile**."
							},
							"response": []
						}
					],
					"id": "f069129c-e4de-41bc-9a33-414e67ee51d5",
					"description": "Consist of a list of services which are used for the customer onboarding."
				},
				{
					"name": "Accounts",
					"item": [
						{
							"name": "View the contracts of a profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "650ad289-61e5-45a6-878e-d62cc718bfbe",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var portfolio=jsonData.portfolio",
											"console.log(\"portfolio...\"+jsonData.portfolio)",
											"var contractuuid=portfolio[0].contractUUID",
											"console.log(\"contractuuid...\"+portfolio[0].contractUUID)",
											"pm.globals.set(\"contractuuid\", portfolio[0].contractUUID);",
											"console.log(\"productname...\"+portfolio[0].productName)",
											"console.log(\"contractid...\"+portfolio[0].contractID)",
											"pm.globals.set(\"productname\", portfolio[0].productName);",
											"pm.globals.set(\"contractid\", portfolio[0].contractID);",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ed7d9de3-022b-4450-8145-215b57ff1c64",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/PortfolioService/Contracts?linkedProfileId={{linkedprofileid}}&access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"Contracts"
									],
									"query": [
										{
											"key": "linkedProfileId",
											"value": "{{linkedprofileid}}"
										},
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service we can fetch the list of contracts for a profile.\n- The **linkedprofileid** value, which is mentioned in the service, is mandatory.\n- To fetch the **linkedprofileid**, use the **Fetch the profile details** which is in the **Customer Onboarding** under the **Customer** collection.\n- Note : Only approved profiles will have a **linkedprofileid** generated.\n- Re run the service **Fetch the profile details** again to obtain the **linked profile id** and get it automatically applied to the service."
							},
							"response": []
						},
						{
							"name": "To view the transaction history of a specific contract",
							"id": "902dfb8b-d4e2-4e3d-b576-6f22b1b7f8aa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/PortfolioService/transactionHistory?contractUUID={{contractuuid}}&access_token={{custoken}}&repaymentType=Yes",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"transactionHistory"
									],
									"query": [
										{
											"key": "contractUUID",
											"value": "{{contractuuid}}"
										},
										{
											"key": "access_token",
											"value": "{{custoken}}"
										},
										{
											"key": "repaymentType",
											"value": "Yes"
										}
									]
								},
								"description": "- Using this service we can fetch the transaction history"
							},
							"response": []
						}
					],
					"id": "f78f8d90-2600-4bce-b423-241ffe18950c",
					"description": "- This folder consists of services that are used to view the contracts and their transaction histories."
				},
				{
					"name": "Payments",
					"item": [
						{
							"name": "To perform the transaction",
							"id": "9c1720bd-fbbd-42e2-a1ce-03bcbea0ddd5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"contractUUID\": \"e530245a-e18f-4f4a-8197-d945b3e2eef6\",\r\n  \"type\": \"PI\",\r\n  \"value\": 5000,\r\n  \"paymentType\": \"stripe\",\r\n  \"triggerType\": \"deposit\"\r\n}\r\n\r\n// Look for the generated contractuuid in the \"Globals\" under the \"Environment quick look\" and mention it in the \"contractUUID\" value.\r\n// Mention the \"type\" as \"PI\" and the \"paymentType\" as \"stripe.\"\r\n// Mention the amount in the \"value.\"\r\n// Mention the \"triggerType\" as either \"deposit\" or \"withdraw.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/SolitxService/payment/link?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"SolitxService",
										"payment",
										"link"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- This service is used to perform the transaction.\n- The payload should be specified in the following json format. All the mentioned keys in the payload are mandatory.\n- Include the exact **contract uuid** in the payload and mention the desired notional **value**.\n- Specify the trigger type as **deposit** or **withdraw**, depending on our preferred transaction.\n- Fetch the **contract uuid** by using the service **View the contracts of a profile**."
							},
							"response": []
						},
						{
							"name": "To view the pending events of a specific contract",
							"id": "05ec6604-775b-4127-b667-39915fd65a4e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/PortfolioService/geteventsBycontractUUID?access_token={{custoken}}&contractUUID={{contractuuid}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"geteventsBycontractUUID"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										},
										{
											"key": "contractUUID",
											"value": "{{contractuuid}}"
										},
										{
											"key": "eventType",
											"value": "PI",
											"disabled": true
										}
									]
								},
								"description": "- This service is used to view the transaction history of a specific contract.\n- The **contractuuid** value, which is mentioned in the service, is mandatory. It will automatically get applied to the service call once we run the service, **View the contracts of a profile**."
							},
							"response": []
						}
					],
					"id": "5ec60a32-c529-42b4-a933-78d38e392b15",
					"description": "Consist of services which are used to view and perform the repayments."
				},
				{
					"name": "Cards",
					"item": [
						{
							"name": "Apply for a card",
							"id": "ee41e136-29d8-4ee1-a314-73f64480a893",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"cardDetails\": [\r\n    {\r\n      \"contractID\": \"GMF/TS/164628-2\",\r\n      \"contractUUID\": \"c1f85a3b-c2c4-4ebe-a61f-e4603dbdec4d\",\r\n      \"linkedProfileId\": \"d3262ae5-bcfc-4e9b-9acb-00e5b8c97184\",\r\n      \"productName\": \"Current account INR\",\r\n      \"status\": \"apply\"\r\n    }\r\n  ]\r\n}\r\n\r\n// Look for the \"contractid,\" \"contractuuid,\" and \"productname\" in the \"Globals\" section of the \"Environment quick look\" and paste them in their respective values.\r\n// For once run the service \"Fetch the profile details\" under \"Customer onboarding\" to fetch the \"linkedprofileid\" from the \"Globals\" section of the \"Environment quick look.\"\r\n// Mention the \"status\" as \"apply.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/applyCard?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"applyCard"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- This service is used to apply for a new card.\n- The payload should be mentioned in a json format.\n- All the keys mentioned in the json are mandatory.\n- To find the **contractID**, **contractUUID** and **productName** use the service **View the contracts of a profile** in the **Accounts** under the **Customer** collection**.**\n- To find the **linkedProfileId** use the service **Fetch the profile details** in the **Customer Onboarding** section.\n- Mention the **status** key as **apply.**"
							},
							"response": []
						},
						{
							"name": "To view the cards associated with profile",
							"id": "9a3691a7-2b1d-4b2e-a232-2a8829ef6789",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/cards?access_token={{custoken}}&status=active",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"cards"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										},
										{
											"key": "status",
											"value": "active"
										}
									]
								},
								"description": "- This service is to view the list of active cards which are associated to a profile."
							},
							"response": []
						},
						{
							"name": "Block a card",
							"id": "8241df9a-c28a-4fc6-92ac-5ac395fb0afa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"cardDetails\": [\r\n    {\r\n      \"contractUUID\": \"8cb6b3c1-942e-4e9f-acd2-4f44c334b852\",\r\n      \"status\": \"block\"\r\n    }\r\n  ]\r\n}\r\n\r\n// Look for the contractuuid in \"Globals,\" which is under the Environment quick look.\r\n// Mention the status as \"block\".",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/cardStatus?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"cardStatus"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- This service is used to block the active cards.\n- The payload should be mentioned in a json format.\n- In the payload, mention the **contractUUID** of a contract for which the active card is associated and mention the status as **block.**\n- Use **View the contracts of a profile** which is in the **Accounts** under the **Customer** collection for fetching the **contractUUID.**\n- Note : The contract should consist an active card in order to use this service."
							},
							"response": []
						}
					],
					"id": "c9b7139a-ea7e-458a-b068-36f38760f867",
					"description": "Consist of services which are used to\n\ni) Apply for a card\n\nii) To view the cards which are associated to a profile\n\niii) To block an active card"
				},
				{
					"name": "Notifications",
					"item": [
						{
							"name": "Get notifications",
							"id": "128222ff-7f37-4f1d-b8e8-646f24f629e4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/notifications?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"notifications"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "837c2b9c-4430-4a43-8a7e-17b2ec8b0b48"
				}
			],
			"id": "68603238-16c6-420d-85d8-095f24172e26",
			"description": "Customer APIs support customer/external interaction of the banking entity layer."
		},
		{
			"name": "Thirdparty integration",
			"item": [
				{
					"name": "Authorization",
					"item": [
						{
							"name": "login with customer credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43da47a1-991c-47fa-a8ac-f0bf8d8b5be2",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var jsonValue = jsonData.body;\r",
											"console.log(\"customerToken...\"+jsonValue.access_token)\r",
											"pm.globals.set(\"customerToken\", jsonValue.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "34cf3602-9f19-4eb6-a411-65b3f39fef0c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"rootUser\": \"enter sandbox rootuser\",\r\n    \"userName\": \"enter sandbox username\",\r\n    \"password\": \"enter sandbox password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/LoginService/login"
							},
							"response": []
						}
					],
					"id": "06bcd982-bea3-4f8d-a467-d7e4daff528a",
					"description": "- To conduct a third-party integration services check, use any customer credentials.\n- Check out the **Customer** collection for authorization in detail."
				},
				{
					"name": "Payment links",
					"item": [
						{
							"name": "Card, Wallet, Bank",
							"id": "52776548-afc8-4a69-990c-da33e801dcdf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"ContractUUID\": \"d890500d-7189-455f-9a29-ede8e91494b6\",\r\n    \"EventID\": \"24baf7b2-09df-4997-bb6a-7de90ae22ea9\",\r\n    \"EventTime\": \"2022-02-01T23:59:59\",\r\n    \"EventType\": \"IP\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 167,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"b5d7deab-19ca-4e6d-b5b8-db321522ee08\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 167,\r\n    \"ProcessTime\": \"2022-02-01T23:59:59\"\r\n  },\r\n  {\r\n    \"ContractUUID\": \"d890500d-7189-455f-9a29-ede8e91494b6\",\r\n    \"EventID\": \"ec2de6d4-9fd6-4756-9fa0-78e3f82df729\",\r\n    \"EventTime\": \"2022-02-01T23:59:59\",\r\n    \"EventType\": \"PR\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 1833,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"b5d7deab-19ca-4e6d-b5b8-db321522ee08\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 1833,\r\n    \"ProcessTime\": \"2022-02-01T23:59:59\"\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/stripe/paymentLink?access_token={{customerToken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"stripe",
										"paymentLink"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										}
									]
								},
								"description": "- The payload should be specified in json format.\n- All of the keys and values mentioned in the json are required, and the structure should look like the one shown in the json payload below.\n- **Value** and **Remaining amount** in the payload represents the amount payable. This can be updated based on our choice."
							},
							"response": []
						},
						{
							"name": "UPI",
							"id": "2479d880-1c79-4227-90d6-f210d7e1bc8e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"ContractUUID\": \"d890500d-7189-455f-9a29-ede8e91494b6\",\r\n    \"EventID\": \"24baf7b2-09df-4997-bb6a-7de90ae22ea9\",\r\n    \"EventTime\": \"2022-02-01T23:59:59\",\r\n    \"EventType\": \"IP\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 167,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"b5d7deab-19ca-4e6d-b5b8-db321522ee08\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 167,\r\n    \"ProcessTime\": \"2022-02-01T23:59:59\"\r\n  },\r\n  {\r\n    \"ContractUUID\": \"d890500d-7189-455f-9a29-ede8e91494b6\",\r\n    \"EventID\": \"ec2de6d4-9fd6-4756-9fa0-78e3f82df729\",\r\n    \"EventTime\": \"2022-02-01T23:59:59\",\r\n    \"EventType\": \"PR\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 1833,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"b5d7deab-19ca-4e6d-b5b8-db321522ee08\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 1833,\r\n    \"ProcessTime\": \"2022-02-01T23:59:59\"\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/paymentLink?access_token={{customerToken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"paymentLink"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										}
									]
								},
								"description": "- The payload should be specified in json format.\n- All of the keys and values mentioned in the json are required, and the structure should look like the one shown in the json payload below.\n- **Value** and **Remaining amount** in the payload represents the amount payable. This can be updated based on our choice."
							},
							"response": []
						}
					],
					"id": "ccdf7e70-9ff7-49ce-92ae-ee092520fc16",
					"description": "Consist of services which helps to activate checkout link or scannable code that allows a customer to complete a transaction."
				},
				{
					"name": "E sign",
					"item": [
						{
							"name": "Esign initiation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c494a843-630f-466b-b01e-c1bfc665e183",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var jsonValue = jsonData;",
											"console.log(\"envelopeID...\"+jsonValue.envelopeId)",
											"pm.globals.set(\"envelopeID\", jsonValue.envelopeId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bf8fb46d-619e-4390-af5d-21c862d98828",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"recipientName\": \"Stokes\",\r\n  \"recipientEmail\": \"abc123@gmail.com\",\r\n  \"recipientId\": \"32aa8463-11f2-4e73-820a-cca1b1ec6fc1\",\r\n  \"profileId\": \"547848e5-8cc2-4d9f-bf56-afa30e3d1da8\",\r\n  \"contractId\": \"32aa8463-11f2-4e73-820a-cca1b1ec6fc1\",\r\n  \"fileName\": \"DecliningInterest_Rate__MonthlyEMI_32aa8463-11f2-4e73-820a-cca1b1ec6fc1_draft\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/esign/envelope?access_token={{customerToken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"esign",
										"envelope"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										}
									]
								},
								"description": "- The payload should be specified in json format.\n- All of the keys and values mentioned in the json are required, and the structure should look like the one shown in the json payload below.\n- The **recipientName** and **recipientEmail** keys in the payload can be edited and updated based on our preferences."
							},
							"response": []
						},
						{
							"name": "To check esign status",
							"id": "208b690d-5537-4b0f-8497-2afae0ce1ede",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/esign/envelopeStatus?envelopeId={{envelopeID}}&access_token={{customerToken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"esign",
										"envelopeStatus"
									],
									"query": [
										{
											"key": "envelopeId",
											"value": "{{envelopeID}}"
										},
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										}
									]
								},
								"description": "- This service allows us to check the status of the initiated esign.\n- To verify the initiated esign status, you need **envelopeID**. When the esign is initiated, a unique **envelopeID** will get generated."
							},
							"response": []
						}
					],
					"id": "3cedcdaf-6495-470e-9a2d-9369e73b0229",
					"description": "E sign is an efficient and legal way to get electronic documents signed quickly."
				},
				{
					"name": "Trust and customer validation",
					"item": [
						{
							"name": "Email ID validation",
							"item": [
								{
									"name": "Send OTP",
									"id": "b2592251-1dfc-4ce3-a119-3a947e06804d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"To\": \"abc123@gmail.com\",\r\n  \"Channel\": \"email\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:5055/ThirdpartyService/twilio/sendOtp",
										"description": "- In the json body, include a valid email address."
									},
									"response": []
								},
								{
									"name": "Verify OTP",
									"id": "e44fc2e1-3c56-41dd-b82b-d25dddb9afd2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"To\": \"abc123@gmail.com\",\r\n  \"Code\": \"467195\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:5055/ThirdpartyService/twilio/verifyOtp",
										"description": "- The OTP that we receive via email should be included in the **Code** value."
									},
									"response": []
								}
							],
							"id": "5484338b-a5a8-4666-aacf-0a5ab481b182"
						},
						{
							"name": "Mobile number validation",
							"item": [
								{
									"name": "Send OTP",
									"id": "a33b8d72-de13-43f3-97a7-33ace0cc5e99",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"To\": \"+919392256334\",\r\n  \"Channel\": \"sms\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:5055/ThirdpartyService/twilio/sendOtp",
										"description": "- In the json body, include a valid mobile number."
									},
									"response": []
								},
								{
									"name": "Verify OTP",
									"id": "16ee37c5-8544-4deb-95a5-a5d97a592367",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"To\": \"+919392256334\",\r\n  \"Code\": \"718817\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:5055/ThirdpartyService/twilio/verifyOtp",
										"description": "- The OTP that we receive via mobile number should be included in the **Code** value."
									},
									"response": []
								}
							],
							"id": "364aa66b-40cd-420c-b2fa-57451a71a810"
						},
						{
							"name": "Bank account validation",
							"item": [
								{
									"name": "To verify bank account details",
									"id": "0330ff0d-a3de-4d67-b49e-0a5022a185ea",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"accountNumber\": \"111801516523\",\r\n  \"ifsc\": \"ICIC0003334\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customerURL}}:5055/ThirdpartyService/bankAccountVerification?access_token={{customerToken}}",
											"host": [
												"{{customerURL}}"
											],
											"port": "5055",
											"path": [
												"ThirdpartyService",
												"bankAccountVerification"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{customerToken}}"
												}
											]
										},
										"description": "- In the json body, a valid account number and IFSC code should be mentioned."
									},
									"response": []
								}
							],
							"id": "6b930878-0cde-4c7b-b677-6b9901bd4da2"
						},
						{
							"name": "PAN card validation",
							"item": [
								{
									"name": "To verify PAN card details",
									"id": "f0077fb9-d6c7-4938-9deb-a2a648cece1d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"pan\": \"BFGPK1861P\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customerURL}}:5055/ThirdpartyService/panDataFetch?access_token={{customerToken}}",
											"host": [
												"{{customerURL}}"
											],
											"port": "5055",
											"path": [
												"ThirdpartyService",
												"panDataFetch"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{customerToken}}"
												}
											]
										},
										"description": "- In the json body, a valid PAN number should be mentioned."
									},
									"response": []
								}
							],
							"id": "8c2479f7-d8f0-4be1-b6c6-31d7913902f2"
						},
						{
							"name": "Aadhaar validation",
							"item": [
								{
									"name": "Aadhaar validation",
									"id": "72f82bb3-e0bb-46b6-9018-a16c3f4bd93d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n  {\r\n    \"aadhaarNumber\": \"956302114582\"\r\n  }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customerURL}}:5055/ThirdpartyService/aadhaarVerification?access_token={{customerToken}}",
											"host": [
												"{{customerURL}}"
											],
											"port": "5055",
											"path": [
												"ThirdpartyService",
												"aadhaarVerification"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{customerToken}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "9c37dc59-4c83-47d0-b150-73a2d9454497",
							"description": "- In the json body, a valid Aadhaar number should be mentioned."
						}
					],
					"id": "1b0f5ef8-df0e-4fdd-9709-d015b723e4eb",
					"description": "This folder contains services that are used to validate a customer's email, mobile number, bank account, PAN card details, and Aadhaar details."
				},
				{
					"name": "Bank statement analyzer",
					"item": [
						{
							"name": "To perform bank statement analysis",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "866a1329-ce14-4af9-8395-6c5625dba498",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.referenceId)",
											"var referenceId=jsonData.referenceId",
											"console.log(\"referenceId...\"+jsonData.referenceId)",
											"pm.globals.set(\"referenceId\", jsonData.referenceId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7b5c0a88-30a4-4d33-95db-3e1f4d74807d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "ClientId",
										"value": "f76f016f6396a05b5f32f68ac295cb8a"
									},
									{
										"key": "ClientSecret",
										"value": "a0375feb79f8642331408ef9f247b8f6ecb2867c0a1e7c029e70171055a8f4d9"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "WPvlW1pft/msdbnkstmnt.pdf"
										},
										{
											"key": "accountDetails",
											"value": "{\"entityType\":\"Individual\",\n\"bankCode\":\"FI00003\",\n\"accountType\":\"SAVINGS\",\n\"accountNumber\":\"043510100091434\"}",
											"type": "text"
										},
										{
											"key": "profileId",
											"value": "7423ec5c-1abf-4811-bb5d-de40469eac6b",
											"type": "text"
										},
										{
											"key": "workflowProfileId",
											"value": "1503446",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/upload/bankStatement?access_token={{customerToken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"upload",
										"bankStatement"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										}
									]
								},
								"description": "- **Note** : Instead of using the browser to check this service, please use the postman desktop application. Because the working directory cannot be configured while using the browser and uploading a pdf file would be difficult.\n    \n\n**Follow the steps below to configure the form-data**\n\n- The request body should be mentioned in a form-data. All the mentioned keys as shown in the example below are mandatory.\n    \n\n- Upload a valid bank statement. The bank statement should be uploaded in the form of a pdf file.\n    \n\n- The account details should be mentioned in a json format as shown below. **entityType**, **accountType, accountNumber** and **bankCode** are mandatory keys to be presented. There will be different and unique bank codes for every individual bank so please mention the exact bank code in the value. Example bank codes, **Citi Bank : FI00018, HSBC Bank : FI00032, ICICI Bank : FI00033** etc.\n    \n\n- Mention the **profileId** and the **workflowProfileId** in the form data as **text.**\n    \n\n- **Note**: Check out the **Customer Onboarding section** under the **Customer** collection for how to fetch a **profileId** and **workflowProfileID**. To fetch the **profileID** use **Fetch the profile details** and to fetch the **workflowProfileID** use **Fetch workflow profile id.**"
							},
							"response": []
						},
						{
							"name": "To view the report",
							"id": "427b5205-1fd3-4246-822e-8ecf8997d68c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/generateReportUrl?access_token={{customerToken}}&referenceId={{referenceID}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"generateReportUrl"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										},
										{
											"key": "referenceId",
											"value": "{{referenceID}}"
										}
									]
								},
								"description": "- In the service, mention the **referenceId** from which we obtain it when performing bank statement analysis."
							},
							"response": []
						}
					],
					"id": "6a161efe-139d-4824-bb83-3f8d458bfdc9",
					"description": "Service that helps us to perform bank statement analysis."
				},
				{
					"name": "Credit bureau",
					"item": [
						{
							"name": "CRIF highmark report",
							"id": "6c20a068-9d55-44b6-aa58-04bc6ea3de49",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{highmarkURL}}/highmark/getHighmarkVerification/1495806",
								"description": "- Mention the **detailsID** at the end of the service."
							},
							"response": []
						}
					],
					"id": "1f384a82-54ee-4c48-86bb-d64f96014b6c",
					"description": "Service which provides credit score and credit reports."
				},
				{
					"name": "Real-time identity verification",
					"item": [
						{
							"name": "KYC - Identity Verification",
							"id": "1e5cdb8a-b698-4821-ad78-8eb6b9a9b958",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reference\": \"9452154289\",\r\n  \"callback_url\": \"https://dev.mobilefirstfinance.com:5055/ThirdpartyService/callback/shufti\",\r\n  \"country\": \"IN\",\r\n  \"language\": \"EN\",\r\n  \"redirect_url\": \"https://customer.mobilefirstfinance.com/#/Pages/Login?verification=document&reference=3020215498\",\r\n  \"document\": {\r\n    \"supported_types\": [\r\n      \"id_card\"\r\n    ],\r\n    \"name\": \"\",\r\n    \"dob\": \"\",\r\n    \"age\": \"\",\r\n    \"issue_date\": \"\",\r\n    \"expiry_date\": \"\",\r\n    \"document_number\": \"\",\r\n    \"gender\": \"\"\r\n  },\r\n  \"face\":{}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/ThirdpartyService/shufti",
								"description": "- The json body structure need to like that which is described in the payload.\n- The **reference** id is a unique value that should be updated in the payload before the request is sent."
							},
							"response": []
						},
						{
							"name": "Facial Biometric Authentication",
							"id": "60d5869a-d01c-46fb-9d93-3a087d4ac72f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reference\": \"965210\",\r\n  \"callback_url\": \"https://dev.mobilefirstfinance.com:5055/ThirdpartyService/callback/shufti\",\r\n  \"country\": \"IN\",\r\n  \"language\": \"EN\",\r\n  \"redirect_url\": \"https://customer.mobilefirstfinance.com/#/Pages/Login?verification=document&reference=3020215498\",\r\n  \"face\": {\r\n\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/ThirdpartyService/shufti",
								"description": "- The json body structure need to like that which is described in the payload.\n- The **reference** id is a unique value that should be updated in the payload before the request is sent."
							},
							"response": []
						},
						{
							"name": "Address check",
							"id": "b0a8c222-3261-41b8-aa99-8222aec537e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reference\": \"752102\",\r\n  \"callback_url\": \"https://dev.mobilefirstfinance.com:5055/ThirdpartyService/callback/shufti\",\r\n  \"country\": \"IN\",\r\n  \"language\": \"EN\",\r\n  \"redirect_url\": \"https://customer.mobilefirstfinance.com/#/Pages/Login?verification=document&reference=3020215498\",\r\n    \"address\"         : {\r\n        \"proof\"            : \"\",\r\n        \"supported_types\"  : [\"id_card\",\"bank_statement\"],\r\n        \"name\"             : {\r\n             \"first_name\"   : \"John\",\r\n             \"middle_name\"  : \"Middleman\",\r\n             \"last_name\"    : \"Doe\"\r\n        },\r\n        \"full_address\"      : \"3339 Maryland Avenue, Largo, Florida\",\r\n        \"address_fuzzy_match\":\"1\",\r\n        \"issue_date\"        : \"1990-09-07\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/ThirdpartyService/shufti",
								"description": "- The json body structure need to like that which is described in the payload.\n- The **reference** id is a unique value that should be updated in the payload before the request is sent."
							},
							"response": []
						},
						{
							"name": "Background check",
							"id": "9f29d158-49ea-4bf4-8662-f65e0911e709",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reference\": \"963254\",\r\n  \"callback_url\": \"https://dev.mobilefirstfinance.com:5055/ThirdpartyService/callback/shufti\",\r\n  \"country\": \"IN\",\r\n  \"language\": \"EN\",\r\n  \"redirect_url\": \"https://customer.mobilefirstfinance.com/#/Pages/Login?verification=document&reference=3020215498\",\r\n   \"background_checks\": {\r\n        \"name\"             : {\r\n             \"first_name\"   : \"John\",\r\n             \"middle_name\"  : \"Middleman\",\r\n             \"last_name\"    : \"Doe\"\r\n        },\r\n        \"dob\"             : \"1980-11-12\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/ThirdpartyService/shufti",
								"description": "- The json body structure need to like that which is described in the payload.\n- The **reference** id is a unique value that should be updated in the payload before the request is sent."
							},
							"response": []
						}
					],
					"id": "bae2038c-1c48-440f-ae8f-693a47f770b9",
					"description": "Consist of services which is used to perform ID verification."
				},
				{
					"name": "Axis UPI",
					"item": [
						{
							"name": "To validate Axis UPI",
							"id": "0b5179db-7052-46e6-8efd-7608846b4b0d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{axisURL}}:5055/axis/upi/validateVPA?customerVpa=9966130709@axis",
									"host": [
										"{{axisURL}}"
									],
									"port": "5055",
									"path": [
										"axis",
										"upi",
										"validateVPA"
									],
									"query": [
										{
											"key": "customerVpa",
											"value": "9966130709@axis"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To disburse the amount",
							"id": "e79221e0-029b-4167-9a40-757b932b16ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{axisURL}}:5055/axis/upi/disburse?customerVpa=jinal.haran@axis&amount=100&remarks=rent&custMobileNumber=9966130709",
									"host": [
										"{{axisURL}}"
									],
									"port": "5055",
									"path": [
										"axis",
										"upi",
										"disburse"
									],
									"query": [
										{
											"key": "customerVpa",
											"value": "jinal.haran@axis"
										},
										{
											"key": "amount",
											"value": "100"
										},
										{
											"key": "remarks",
											"value": "rent"
										},
										{
											"key": "custMobileNumber",
											"value": "9966130709"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To check the disbursed amount status",
							"id": "5c144d59-f718-4b16-a925-cc2b119d670f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{axisURL}}:5055/axis/upi/disburseStatus?txsId=MF1246d2f2f2b14cf2b5af23e8785d9b3e",
									"host": [
										"{{axisURL}}"
									],
									"port": "5055",
									"path": [
										"axis",
										"upi",
										"disburseStatus"
									],
									"query": [
										{
											"key": "txsId",
											"value": "MF1246d2f2f2b14cf2b5af23e8785d9b3e"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To receive the payment",
							"id": "a80d0572-1d92-4401-beef-2efeb9c3b765",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{axisURL}}:5055/axis/upi/collectRequest?customerVpa=jinal.haran@axis&amount=100&unqcustid=MF123456789&unqtxnid=AXI23254323232&txndtl=test",
									"host": [
										"{{axisURL}}"
									],
									"port": "5055",
									"path": [
										"axis",
										"upi",
										"collectRequest"
									],
									"query": [
										{
											"key": "customerVpa",
											"value": "jinal.haran@axis"
										},
										{
											"key": "amount",
											"value": "100"
										},
										{
											"key": "unqcustid",
											"value": "MF123456789"
										},
										{
											"key": "unqtxnid",
											"value": "AXI23254323232"
										},
										{
											"key": "txndtl",
											"value": "test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To check the repayment amount status",
							"id": "b18b0a56-cc93-4520-8dde-102010248414",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{axisURL}}:5055/axis/upi/collectRequestStatus?txsId=AXI23254323232&merchMobileNumber=9966130709",
									"host": [
										"{{axisURL}}"
									],
									"port": "5055",
									"path": [
										"axis",
										"upi",
										"collectRequestStatus"
									],
									"query": [
										{
											"key": "txsId",
											"value": "AXI23254323232"
										},
										{
											"key": "merchMobileNumber",
											"value": "9966130709"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "c1217e84-c156-4815-8920-d8de17507d62",
					"description": "This folder contains Axis UPIs that are used to send and receive payments."
				},
				{
					"name": "SolitX corebanking integration",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60ead33d-2871-421b-a6d8-f8edf100e6ff",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"console.log(jsonData.access_token);",
											"pm.globals.set(\"solitxaccessToken\",jsonData.access_token);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8219ed29-7415-48ec-a8c9-f906358dd506",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "web-app"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "grant_type",
										"type": "text",
										"value": "password"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"rootUser\": \"enter sandbox rootuser\",\n    \"userName\": \"enter sandbox username\",\n    \"password\": \"enter sandbox password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:6055/login",
									"host": [
										"{{solitxURL}}"
									],
									"port": "6055",
									"path": [
										"login"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19455c44-a804-4c4a-bc1c-f97f13a277ec",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"console.log(jsonData.profileID);",
											"pm.globals.set(\"ProfileID\",jsonData.profileID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4ca22635-653b-48d2-97ca-bc56ced7a0eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"FormID\": \"1\",\n  \"National ID\": 845236510037,\n  \"Identifier\": \"Richard Beckham\",\n  \"Secondary ID Type\": \"Driving License\",\n  \"Secondary ID\": \"8452AJNB78\",\n  \"Tertiary ID Type\": \"Driving License\",\n  \"Tertiary ID \": \"8452PKMN\",\n  \"Gender\": \"Male\",\n  \"Date of Birth\": \"1994-12-14\",\n  \"Marital Status\": \"Married\",\n  \"Type of relation\": \"Wife\",\n  \"Relation Name\": \"Marie\",\n  \"Nominee Name\": \"Marie\",\n  \"Nominee Age\": 32,\n  \"Nominee Relationship\": \"Wife\",\n  \"Address\": \"\",\n  \"State\": \"\",\n  \"District\": \"\",\n  \"Village/Town/City\": \"\",\n  \"Email\": \"\",\n  \"Residence Accommodation\": \"\",\n  \"Educational Qualifications\": \"\",\n  \"Occupation\": \"\",\n  \"Mobile Number\": \"\",\n  \"Latitude\": \"\",\n  \"Longitude\": \"\",\n  \"Hierarchy\": 1599383,\n  \"branchId\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ProfilesService/profiles?access_token={{solitxaccessToken}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ProfilesService",
										"profiles"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get profile with identifier",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a266368-0f64-441e-9489-cc07792ff49a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c2729681-9f73-4ecf-9b86-a0e17cbcc561",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{solitxURL}}:5050/ProfilesService/profiles?identifier=Davis john&access_token={{solitxaccessToken}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ProfilesService",
										"profiles"
									],
									"query": [
										{
											"key": "identifier",
											"value": "Davis john"
										},
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create rootuser payment-channel",
							"id": "8c7f6f94-4f5e-445d-81aa-fe82caf52ff6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Identifier\": \"Organization A\",\n    \"Label\": \"Org A/C\",\n    \"Units\": \"INR\",\n    \"AccountCharacteristic\": \"isBank\",\n    \"Type\": \"new\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/PaymentServices/payments/channel/new?access_token={{solitxaccessToken}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"PaymentServices",
										"payments",
										"channel",
										"new"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create profile payment-channel",
							"id": "660764af-e50e-4d8a-a712-c564687c30be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Identifier\": \"Harvey\",\n  \"Label\": \"Indian rupee\",\n  \"Units\": \"INR\",\n  \"Type\": \"new\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/PaymentServices/payments/channel/profiles/{{ProfileID}}/new?access_token={{solitxaccessToken}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"PaymentServices",
										"payments",
										"channel",
										"profiles",
										"{{ProfileID}}",
										"new"
									],
									"query": [
										{
											"key": "ProfileID",
											"value": "",
											"disabled": true
										},
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get profile payment-channel",
							"id": "2674dcea-749a-4c16-bf5f-50a2bf347ec5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{solitxURL}}:5050/PaymentServices/payments/channel/profiles/{{ProfileID}}?access_token={{solitxaccessToken}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"PaymentServices",
										"payments",
										"channel",
										"profiles",
										"{{ProfileID}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e1b08b7f-81c4-43cc-9792-2711275b080e",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var jsonData =jsonData[0];",
											"console.log(jsonData.contractUUID);",
											"pm.globals.set(\"contractUUID\",jsonData.contractUUID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "72a7a95a-ae36-4a2b-83da-e67da29bd69f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ProductID\": \"119\",\n        \"Terms\": [\n            {\n                \"NextPrincipalRedemptionPayment\": \"3800\",\n                \"InitialExchangeDate\": \"2022-08-01T06:30:00.000Z\",\n                \"NominalInterestRate\": 0.21,\n                \"Tenure\": \"12M\",\n                \"NotionalPrincipal\": \"38000\",\n                \"ContractStatus\": \"PreDeal\",\n                \"LegalEntityIDCounterparty\": \"e6ab9993-6c9b-4d65-af96-130b09160846\"\n            }\n        ],\n        \"PaymentDetails\": {\n            \"CounterpartyPaymentChannelID\": \"74593863-6695-4811-8d0e-49098372cb10\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ContractService/contracts?access_token={{solitxaccessToken}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ContractService",
										"contracts"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Compute contract",
							"id": "2195f7b3-73f5-473b-a542-d8fc39f8b1b3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ContractService/contracts/compute?access_token={{solitxaccessToken}}&contractUUID={{contractUUID}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ContractService",
										"contracts",
										"compute"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										},
										{
											"key": "contractUUID",
											"value": "{{contractUUID}}"
										}
									]
								},
								"description": "Include \"ContractUUID\" which we got in response from create contract."
							},
							"response": []
						},
						{
							"name": "Execute contract",
							"id": "e229b0de-e027-4fbc-9b74-71ee14544468",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ContractService/contracts/execute?access_token={{solitxaccessToken}}&contractUUID={{contractUUID}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ContractService",
										"contracts",
										"execute"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										},
										{
											"key": "contractUUID",
											"value": "{{contractUUID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get events of contract",
							"id": "c1bbdd85-b55b-48c0-a088-647101ea79ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{solitxURL}}:5050/BusinessEventService/events?contractUUID={{contractUUID}}&access_token={{solitxaccessToken}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"BusinessEventService",
										"events"
									],
									"query": [
										{
											"key": "contractUUID",
											"value": "{{contractUUID}}"
										},
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contracts",
							"id": "d074be59-d354-421e-8d8b-24fc9e83a1dd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ContractService/profile/contracts/?productUUID=119&access_token={{solitxaccessToken}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ContractService",
										"profile",
										"contracts",
										""
									],
									"query": [
										{
											"key": "productUUID",
											"value": "119"
										},
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										},
										{
											"key": "contractUUID",
											"value": "77c9c714-291f-4daf-b1bd-c24f21c29e50",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Process event",
							"id": "baeb76d3-4d21-400b-824d-3c18c65fad54",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"EventID\": \"e36ce214-62df-4f11-8b3e-5c41f57aecea\",\n        \"Value\": -38000.0,\n        \"ProcessTime\": \"2022-08-01T23:59:59\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/TransactionsService/process?access_token={{solitxaccessToken}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"TransactionsService",
										"process"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{solitxaccessToken}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "4eca449c-433f-4116-aa77-3d1bd5aaca3d"
				}
			],
			"id": "437f7d30-09df-4e3f-ae64-247883eedab7",
			"description": "Secure 3rd party API integrations enable communication between the core system and capabilities with external eco-system partners."
		},
		{
			"name": "Client mobile app",
			"item": [
				{
					"name": "Client sign up",
					"item": [
						{
							"name": "Get client sign up form",
							"id": "b02e8aed-ba8f-4411-801d-615fe297a6da",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{clientmobileappURL}}:7190/mff/api/clientUserform/Customer"
							},
							"response": []
						},
						{
							"name": "Signing up a new client",
							"id": "f3d6ad0a-2791-4afe-bdff-d1b68f9a3373",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Domicile\": \"enter domicile\",\r\n  \"Identifier\": \"enter a unique identifier\",\r\n  \"User Password\": \"enter a 6 digit pin\",\r\n  \"National ID\": \"enter a valid national id\",\r\n  \"First Name\": \"enter first name\",\r\n  \"Last Name\": \"enter last name\",\r\n  \"Date of Birth\": \"yyyy-mm-dd\",\r\n  \"Mobile Number\": \"enter a valid mobile number\",\r\n  \"Email\": \"enter a valid email id\",\r\n  \"FormID\": 1131982\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{clientmobileappURL}}:7190/mff/api/createClientUser",
								"description": "- To complete the customer sign-up process, use the default customer sign-up form below.\n- All of the keys mentioned are required, and most of them are unique.\n- The **FormID** mentioned in the payload belongs to the default user form for customer signup, and it is mandatory to mention.\n- **Identifier** - **enter a unique identifier and the data should be in varchar.**\n- **User Password - user password should be a 6 digit pin number.**\n- **Date of Birth - enter date of birth in yyyy-mm-dd format.**"
							},
							"response": []
						}
					],
					"id": "8571d921-aef9-4995-ac87-fed070a7c910",
					"description": "- This service is used to register a new client.\n- Firstly define a new environment variable for the mobile app URL and make it active.\n- Check out the Defining environment variables section for how to define a new environment.\n- Set the environment to the mobile app URL, and then proceed to the signup step."
				},
				{
					"name": "Authorization",
					"item": [
						{
							"name": "Login with mobile number",
							"item": [
								{
									"name": "Send OTP",
									"id": "c05bb72d-9233-4449-bbd4-6090792e470c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://dev.mobilefirstfinance.com:5055/LoginService/verify/phoneNumber?phoneNumber=+919392256334",
											"protocol": "https",
											"host": [
												"dev",
												"mobilefirstfinance",
												"com"
											],
											"port": "5055",
											"path": [
												"LoginService",
												"verify",
												"phoneNumber"
											],
											"query": [
												{
													"key": "phoneNumber",
													"value": "+919392256334"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify OTP",
									"id": "ba9da0d2-36b7-4ca5-94be-15c740822079",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mobileNumber\": \"+919392256334\",\n  \"otp\": \"240505\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://dev.mobilefirstfinance.com:5055/LoginService/login"
									},
									"response": []
								}
							],
							"id": "0ef87a63-e8f1-4dee-aa8d-869688a6b5dc"
						},
						{
							"name": "Login with username and password",
							"item": [
								{
									"name": "Login with username and password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "910c4114-43ad-4437-a45d-01e406bb3e3e",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"var jsonValue = jsonData.body;",
													"pm.globals.set(\"clientmobiletoken\", jsonValue.access_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "82e87cbf-9cc1-4754-89fc-54130b891620",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rootUser\": \"enter sandbox rootuser\",\n  \"userName\": \"enter sandbox username\",\n  \"password\": \"enter sandbox password\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{clientmobileappURL}}:5055/LoginService/login"
									},
									"response": []
								}
							],
							"id": "0ac09714-0d15-46c5-8939-c12dc740aae5",
							"description": "- Using this service, we can gain access to the customer application. Include in the payload the freshly created customer credentials.\n- Note : The Identifier that we provide in the signup form will act as the userName in the login form."
						}
					],
					"id": "f1e94e9e-80dd-4b6d-af9c-4ccbb1ac8269",
					"description": "This service is used to perform customer authentication."
				},
				{
					"name": "Client onboarding",
					"item": [
						{
							"name": "Fetch all the available workflows",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bfd76119-a562-4fd8-9013-abd20bee4aeb",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.workflow)",
											"var workflow=jsonData.workflow",
											"console.log(\"mobileappworkflowid...\"+workflow[13].workFlowID)",
											"pm.globals.set(\"mobileappworkflowid\", workflow[13].workFlowID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3c1978b5-d640-4697-9834-4c36b0c8b74b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/workflows?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflows"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the list of available workflows.\n- Run this service just once since it has a test script defined to fetch a specific workflow and turn the workflow id into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Fetch all the workflow templates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7da9760f-cb50-4435-b6d5-4c5cdeddb587",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var workflow=jsonData.workflow",
											"console.log(\"workflow...\"+jsonData.workflow)",
											"var templateid=workflow[39].templateID",
											"console.log(\"mobileappworkflowtemplateid...\"+workflow[39].templateID)",
											"pm.globals.set(\"mobileappworkflowtemplateid\",workflow[39].templateID );",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "79dbecf1-4f9f-4dfa-960e-22c53603abc4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/workflowTemplates?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowTemplates"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the list of available workflow templates.\n- Using this service we can fetch the template id which is necessary to verify the workflow template details.\n- Run this service just once since it has a test script defined to fetch a specific workflow template id and turn the template id into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Fetch the profile details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2ff35e6-fb62-432e-8021-9a2dd50ce2fc",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.profiles)",
											"var profiles=jsonData.profiles",
											"console.log(\"mobileappprofileid...\"+profiles[0].profileID)",
											"pm.globals.set(\"mobileappprofileid\", profiles[0].profileID);",
											"console.log(\"mobileapplinkedprofileid...\"+profiles[0].linkedProfileID)",
											"pm.globals.set(\"mobileapplinkedprofileid\", profiles[0].linkedProfileID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "753608d5-b529-41ad-935a-94816fa1f4c6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/ProfileService/profiles?pageNumber=0&numberOfRecords=10&access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the logged-in user's profile details.\n- Run this service just once since it has a test script defined to turn the profile id into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Link client to a workflow",
							"id": "310e8072-2102-4c4e-9281-6edd97ff3b62",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"profileDetails\": [\n    {\n      \"profileID\": \"e8ce3778-5b9c-4bfb-ab06-44c08330c76a\"\n   \n    }\n  ],\n  \"workFlowID\": 1537895\n}\n//Look for the \"profileid\" & \"workflowid\" in the \"Globals\" under the \"Environment quick look.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/workflowToProfiles?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowToProfiles"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can link a profile to the workflow.\n- For linking the profile to a specific workflow we have to mention both the profileID and the workFlowID in the payload. Check the below json payload for detail.\n- Click on the Environment quick look in the right top corner and navigate to Globals to find the generated **mobileappprofileid** and **mobileappworkflowid**.\n- Note : To fetch the **mobileappprofileid**, run the service **Fetch the profile details** and to fetch the **mobileappworkflowid**, run the service **Fetch all the available workflows**."
							},
							"response": []
						},
						{
							"name": "To fetch the onboarded workflow details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a173fd87-be4a-4299-a6b7-cdc5df2cf385",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var workflow=jsonData.workflow",
											"console.log(\"workflow...\"+jsonData.workflow)",
											"",
											"var workFlowTemplateDetails=workflow.workFlowTemplateDetails",
											"console.log(\"workFlowTemplateDetails...\"+workflow.workFlowTemplateDetails)",
											"",
											"",
											"",
											"",
											"",
											"var workflowProfileID=workflow.workflowProfileID",
											"console.log(\"mobileworkflowprofileid...\"+workflow.workflowProfileID)",
											"pm.globals.set(\"mobileworkflowprofileid\",workflow.workflowProfileID );"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "98409784-2e4c-4e81-adc0-1eb2d5dfb9ea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/mobileApp/{{mobileappprofileid}}?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"mobileApp",
										"{{mobileappprofileid}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can fetch the onboarded workflow details.\n- **Note** : Run this service once before proceeding to the next service."
							},
							"response": []
						},
						{
							"name": "Get workflow templates based on workflow id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02a36253-01ff-46fb-885d-5cea45404ebd",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);\r",
											"console.log(\"jsonResponse...\"+jsonResponse)\r",
											"var jsonData = jsonResponse.data;\r",
											"\r",
											"var workflow=jsonData.workflow\r",
											"console.log(\"workflow...\"+jsonData.workflow)\r",
											"\r",
											"var num=workflow[\"1595354\"]\r",
											"console.log(\"num...\"+workflow[\"1595354\"])\r",
											"\r",
											"var numdata = num[0].detailsID\r",
											"console.log(\"clientmobiletemplatedetailsid...\"+num[0].detailsID)\r",
											"pm.globals.set(\"clientmobiletemplatedetailsid\",num[0].detailsID );\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"// var templateid=workflow[39].templateID\r",
											"// console.log(\"templateid...\"+workflow[39].templateID)\r",
											"// pm.globals.set(\"templateid\",workflow[39].templateID );\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "736e314b-b457-42f2-bf97-8dec6236fc75",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/workflow/workflowTemplateDetails/{{mobileappworkflowid}}/No?&numberOfRecords=10&pageNumber=0&access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflow",
										"workflowTemplateDetails",
										"{{mobileappworkflowid}}",
										"No"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can fetch the workflow template details.\n- Note : Run this service once before proceeding to the next service."
							},
							"response": []
						},
						{
							"name": "To save the details in the workflow template",
							"id": "6794939e-b4d1-4050-86a1-5aca648e6488",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"I Agree the terms and conditions\": \"Yes\"\r\n}\r\n\r\n// Mention the value as \"Yes\" or \"No.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/workflowTemplateDetails/{{clientmobiletemplatedetailsid}}?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowTemplateDetails",
										"{{clientmobiletemplatedetailsid}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service, we can update workflow template details based on workflow template details id.\n- Mention the payload according to the workflow template and provide the necessary value.\n- The workflow template details id will be retrieved and applied to the service from **Get workflow templates based on workflow id.**"
							},
							"response": []
						}
					],
					"id": "3dacd57c-073f-4ee1-9bc7-d16e7cce6ed8",
					"description": "Consist of a list of services which are used for the customer onboarding."
				},
				{
					"name": "Accounts",
					"item": [
						{
							"name": "To view the contracts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2173295-b2f0-401e-bfd2-d85372c17aad",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var portfolio=jsonData.portfolio",
											"console.log(\"portfolio...\"+jsonData.portfolio)",
											"var contractuuid=portfolio[0].contractUUID",
											"console.log(\"mobilecontractuuid...\"+portfolio[0].contractUUID)",
											"pm.globals.set(\"mobilecontractuuid\", portfolio[0].contractUUID);",
											"console.log(\"mobileproductname...\"+portfolio[0].productName)",
											"console.log(\"mobilecontractid...\"+portfolio[0].contractID)",
											"pm.globals.set(\"mobileproductname\", portfolio[0].productName);",
											"pm.globals.set(\"mobilecontractid\", portfolio[0].contractID);",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b78dff09-6a0b-4461-bbee-7d18b4237ffd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/PortfolioService/Contracts?linkedProfileId={{mobileapplinkedprofileid}}&access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"Contracts"
									],
									"query": [
										{
											"key": "linkedProfileId",
											"value": "{{mobileapplinkedprofileid}}"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can fetch the list of contracts for a profile.\n- Note : Only approved profiles will have a linkedprofileid generated.\n- Re run the service **Fetch the profile details** again to obtain the linked profile id and get it automatically applied to the service."
							},
							"response": []
						},
						{
							"name": "To perform the transaction",
							"id": "1138ffa7-db41-4029-9a21-06e471ddf755",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contractUUID\": \"118270d6-70f4-4038-9fab-ac8c9895b662\",\n  \"type\": \"PI\",\n  \"value\": 5000,\n  \"paymentType\": \"stripe\",\n  \"triggerType\": \"deposit\"\n}\n\n// Look for the generated contractuuid in the \"Globals\" under the \"Environment quick look\" and mention it in the \"contractUUID\" value.\n// Mention the \"type\" as \"PI\" and the \"paymentType\" as \"stripe.\"\n// Mention the amount in the \"value.\"\n// Mention the \"triggerType\" as either \"deposit\" or \"withdraw.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientmobileappURL}}:5055/SolitxService/payment/link?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"SolitxService",
										"payment",
										"link"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can perform a transaction."
							},
							"response": []
						},
						{
							"name": "To view the transaction history",
							"id": "27c905b7-e1ef-4097-b399-e5ddf56f8d83",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/PortfolioService/transactionHistory?contractUUID={{mobilecontractuuid}}&access_token={{clientmobiletoken}}&repaymentType=Yes",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"transactionHistory"
									],
									"query": [
										{
											"key": "contractUUID",
											"value": "{{mobilecontractuuid}}"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										},
										{
											"key": "repaymentType",
											"value": "Yes"
										}
									]
								},
								"description": "- Using this service we can view the transaction history."
							},
							"response": []
						},
						{
							"name": "To view the pending events of contract",
							"id": "1a9899ad-9cf7-41d8-ac71-d5c482c88d50",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/PortfolioService/geteventsBycontractUUID?access_token={{clientmobiletoken}}&contractUUID={{mobilecontractuuid}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"geteventsBycontractUUID"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										},
										{
											"key": "contractUUID",
											"value": "{{mobilecontractuuid}}"
										}
									]
								},
								"description": "- Using this service we can view the pending repayments of contract."
							},
							"response": []
						},
						{
							"name": "To view the contract terms",
							"id": "f44d067d-2f2a-4da0-819e-81796967adac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/PortfolioService/getcontractsBycontractUUID?contractUUID={{mobilecontractuuid}}&access_token={{clientmobiletoken}}&pageNumber=0&numberOfRecords=10",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"getcontractsBycontractUUID"
									],
									"query": [
										{
											"key": "contractUUID",
											"value": "{{mobilecontractuuid}}"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										},
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										}
									]
								},
								"description": "- Using this service we can view the terms of a contract."
							},
							"response": []
						}
					],
					"id": "4722b014-b557-432a-80f2-38496dccc229",
					"description": "- This folder consists of services that are used to view the contracts and their transaction histories."
				},
				{
					"name": "Cards",
					"item": [
						{
							"name": "Apply for a card",
							"id": "a8afdc0d-e9b6-4323-a7fa-c6be3402fff6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cardDetails\": [\n    {\n      \"contractID\": \"GMF/165479-1\",\n      \"contractUUID\": \"6aacb8f5-ec6e-4144-9fe8-cc150f3496b5\",\n      \"linkedProfileId\": \"05597611-2dc9-41ee-ac9f-30111317ec58\",\n      \"productName\": \"Go savings\",\n      \"status\": \"apply\"\n    }\n  ]\n}\n\n// Look for the \"contractid,\" \"contractuuid,\" and \"productname\" in the \"Globals\" section of the \"Environment quick look\" and paste them in their respective values.\n// For once run the service \"Fetch the profile details\" under \"Customer onboarding\" to fetch the \"linkedprofileid\" from the \"Globals\" section of the \"Environment quick look.\"\n// Mention the \"status\" as \"apply.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientmobileappURL}}:5055/ThirdpartyService/applyCard?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"applyCard"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- This service is used to apply for a new card..\n- All the keys mentioned in the json are mandatory.\n- To find the contractID, contractUUID and productName use the service **To view the contracts**.\n- To find the linkedProfileId use the service **Fetch the profile details**.\n- Mention the status key as apply."
							},
							"response": []
						},
						{
							"name": "To view the cards associated with profile",
							"id": "4e623912-54a3-46b7-9780-dbaeb9ad489b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/ThirdpartyService/cards?access_token={{clientmobiletoken}}&status=active",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"cards"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										},
										{
											"key": "status",
											"value": "active"
										}
									]
								},
								"description": "- This service is to view the list of active cards which are associated to a profile."
							},
							"response": []
						},
						{
							"name": "Block a card",
							"id": "1528b4a4-4ea3-4de8-8b96-03fb39f69fe4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cardDetails\": [\n    {\n      \"contractUUID\": \"6aacb8f5-ec6e-4144-9fe8-cc150f3496b5\",\n      \"status\": \"block\"\n    }\n  ]\n}\n\n// Look for the contractuuid in \"Globals,\" which is under the Environment quick look.\n// Mention the status as \"block\".",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientmobileappURL}}:5055/ThirdpartyService/cardStatus?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"cardStatus"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- This service is used to block the active cards.\n- In the payload, mention the contractUUID of a contract for which the active card is associated and mention the status as **block**.\n- Use **To view the contracts** for fetching the contractUUID.\n- **Note** : The contract should consist an active card in order to use this service."
							},
							"response": []
						}
					],
					"id": "bd19b024-5ca5-4ba3-950c-a30a8ec30e07",
					"description": "Consist of services which are used to\n\ni) Apply for a card\n\nii) To view the cards which are associated to a profile\n\niii) To block an active card"
				},
				{
					"name": "Check balance",
					"item": [
						{
							"name": "To check the balance",
							"id": "fc1b8a0b-deb4-4eb6-aae1-fa3701566eb9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/PortfolioService/Contracts?linkedProfileId={{mobileapplinkedprofileid}}&access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"Contracts"
									],
									"query": [
										{
											"key": "linkedProfileId",
											"value": "{{mobileapplinkedprofileid}}"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can check the balance of a contract."
							},
							"response": []
						}
					],
					"id": "1017dd8d-4d66-4203-8122-a6ab3b696755",
					"description": "- This folder consist of the service which is used to check the balance."
				}
			],
			"id": "75dff1e7-c925-4adb-a916-1b492df7844e",
			"description": "Mobile APIs support customer/external interaction of the banking entity layer."
		}
	]
}