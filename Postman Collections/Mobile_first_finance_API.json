{
	"info": {
		"_postman_id": "18a09024-73fe-4c80-b4f2-ffe0455f891d",
		"name": "Mobile first finance API",
		"description": "Mobile First Finance [www.mobilefirstfinance.com](http://www.mobilefirstfinance.com/) is a digital banking technology that empowers an organisation with a flexible and customisable mobility suite, that will transform any inefficient paper-based front office workforce.\n\n**Benefits of Mobile First Finance**\n\n- Build superior banking customer experience along with our fleet of in-house engineers.\n- Build your applications using our API stack\n    \n\n**Contact**\n\n- Developer queries & GIT access - [helpdesk@odedtech.com](mailto:helpdesk@odedtech.com)\n- Schedule a meeting - [https://www.mobilefirstfinance.com/book_an_appointment.html](https://www.mobilefirstfinance.com/book_an_appointment.html)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Defining environment variables",
			"item": [],
			"id": "a1c10a0a-fff1-4395-9055-0e303efa564c",
			"description": "1. Select **Environments** in the sidebar and click on **New**.\n    \n\n<img src=\"https://content.pstmn.io/79bdd19b-3886-4486-89ca-fbb89cada5e5/aW1hZ2UucG5n\" width=\"1360\" height=\"706\">\n\n2\\. Choose the **Environment** option\n\n<img src=\"https://content.pstmn.io/0ff76d85-9c0c-4f6e-90df-062e022c4240/aW1hZ2UucG5n\" width=\"1360\" height=\"706\">\n\n3\\. Provide environment name, variable name, initial value & current value and click on **Save**.\n\n<img src=\"https://content.pstmn.io/b98ad7db-cbf6-471d-9132-a012138c9519/ZGVmaW5lVVJMMi5wbmc=\">\n\n4\\. To enable or access the environment that was developed, click on the **No Environment** which is on the right top corner and choose the developed environment variable. Check out the below picture for the reference.\n\n<img src=\"https://content.pstmn.io/f2565387-d2af-4c9f-9af1-565cbb0467fd/Y2hvb3NlIHRoZSBldi5wbmc=\">"
		},
		{
			"name": "Back office",
			"item": [
				{
					"name": "Authorization",
					"item": [
						{
							"name": "Login with client credentials",
							"id": "75c7785e-4a37-46eb-afb5-2508dc3566d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rootUser\": \"enter sandbox rootuser\",\n  \"userName\": \"enter sandbox username\",\n  \"password\": \"enter sandbox password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{backofficeURL}}:5055/UserService/userValidation",
								"description": "- Using this service, we can initiate an OTP to the email ID by performing a login with credentials."
							},
							"response": []
						},
						{
							"name": "2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd42723b-c160-4cf7-bb41-79b932cc6e96",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);\r",
											"console.log(\"jsonResponse...\"+jsonResponse)\r",
											"var jsonData = jsonResponse.data;\r",
											"console.log(\"jsonData...\"+jsonResponse.data)\r",
											"\r",
											" var access_token=jsonData.access_token\r",
											"console.log(\"access_token...\"+jsonData.access_token)\r",
											"pm.environment.set(\"useraccessToken\", jsonData.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4d1ecd8d-69e8-4e26-88a6-8c795067cf93",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"Enter email ID\",\r\n  \"otp\": \"Enter 6-digit OTP sent to email ID\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{backofficeURL}}:5055/LoginService/login",
								"description": "- Using this service, we can verify the 6-digit OTP that was received at the email ID as part of two-factor authentication."
							},
							"response": []
						}
					],
					"id": "17f01589-3053-41de-97c7-0dc82b273e62",
					"description": "Two-factor authentication is the basis for application access. Two services are contained in this folder, one of which will send an OTP to the email ID using login credentials, and the other will verify the OTP that was sent to the email ID."
				},
				{
					"name": "Settings",
					"item": [
						{
							"name": "Branch hierarchy",
							"item": [
								{
									"name": "Create branch",
									"id": "8ea33cd3-dcae-4304-b583-d28a2982828b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"branchName\": \"enter unique branch name\",\r\n  \"branchCode\": \"enter unique branch code\",\r\n  \"parentId\": 1\r\n}\r\n\r\n// Mention the parentID as '1'",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/BranchService/Branches?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"BranchService",
												"Branches"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a new branch."
									},
									"response": []
								},
								{
									"name": "Get all the existing branches",
									"id": "da1d7f38-6466-43ff-896c-d5d7ae955d14",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/BranchService/branches/treeLevel?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"BranchService",
												"branches",
												"treeLevel"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch all the available branches."
									},
									"response": []
								}
							],
							"id": "ee788e15-b1ac-41c6-9058-190d7917d7fd",
							"description": "- In an enterprise setup, an organisation would have specific branches from where operations are carried out. Such branches would then demand access to a specific set of users to access information about the branch and the clientele/customer info within this specific branch.\n- Branch services enable to link and provide access to such information waterfall within the users of a specific branch."
						},
						{
							"name": "Users",
							"item": [
								{
									"name": "Create user form",
									"id": "aa47f386-3922-4d50-bd72-46c608c52afc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"User form\",\n      \"Label\": \"Form Label\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Identifier\"\n    }\n  ],\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"First name\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Last name\"\n    }\n  ]\n}\n// Since the form name is unique, kindly rename the userform label before every creation.",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/users/forms?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"users",
												"forms"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a new user form."
									},
									"response": []
								},
								{
									"name": "Get all user  form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fecf0b49-b39a-4c19-a617-6799dbce94e0",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.users)",
													"var users=jsonData.users",
													"console.log(\"userFormTemplateID...\" + users[1].userFormTemplateID)",
													"pm.environment.set(\"userFormTemplateID\", users[1].userFormTemplateID);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4bfa2529-3aa8-4460-b75e-142941fccd76",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/users/forms?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"users",
												"forms"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get all the available user forms."
									},
									"response": []
								},
								{
									"name": "Get user form by user form template id",
									"id": "ca74f0d1-65bc-4b8b-939c-645d8eab7462",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/users/forms/{{userFormTemplateID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"users",
												"forms",
												"{{userFormTemplateID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get a user form by user form template id."
									},
									"response": []
								},
								{
									"name": "Update user form",
									"id": "3d7229e8-067a-4882-bb83-c1e306a25421",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"User registration\",\n      \"Label\": \"Form Label\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Identifier\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"User Password\"\n    }\n  ],\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"First Name\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Last Name\"\n    },\n    {\n      \"Type\": \"List\",\n      \"Value\": [\n        \"Male\",\n        \"Female\"\n      ],\n      \"Label\": \"Gender\"\n    },\n    {\n      \"Type\": \"Email\",\n      \"Value\": \"\",\n      \"Label\": \"Email\"\n    },\n    {\n      \"Type\": \"Phone\",\n      \"Value\": \"\",\n      \"Label\": \"Mobile Number\"\n    },\n    {\n      \"Type\": \"List\",\n      \"Value\": [\n        \"Dashboard\",\n        \" List of clients\",\n        \" Journal entries\",\n        \" Payroll\"\n      ],\n      \"Label\": \"Default start page\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/users/forms/{{userFormTemplateID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"users",
												"forms",
												"{{userFormTemplateID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can update an existing user form."
									},
									"response": []
								},
								{
									"name": "Create user",
									"id": "a377a298-81a5-43c0-9cb4-033089c87e6f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"FormID\": \"{{userFormTemplateID}}\",\n  \"Identifier\": \"Enter a unique identifier\",\n  \"User Password\": \"Enter a 6-digit password\",\n  \"First Name\": \"Enter first name\",\n  \"Last Name\": \"Enter last name\",\n  \"Email\": \"Enter a valid email ID\",\n  \"Mobile Number\": \"Enter a valid mobile number with a country code\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/users?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"users"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a new user."
									},
									"response": []
								},
								{
									"name": "Get  all the Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e446de15-9e99-460c-b731-5d48e227483d",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var data = jsonResponse.data;",
													"console.log(\"data...\"+jsonResponse.data)",
													" var users=data.users",
													" console.log(\"Get a user id...\"+data.users[8].userID)",
													"pm.environment.set(\"userID\", data.users[8].userID);"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8c7f3afc-fcda-49b1-aa1d-274029dda37b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/users?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"users"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch all the available users."
									},
									"response": []
								},
								{
									"name": "Get a user by user id",
									"id": "bec52a64-ab90-464c-b368-3bd658c97de6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/users/{{userID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"users",
												"{{userID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch a user by user ID."
									},
									"response": []
								},
								{
									"name": "Update user",
									"id": "1fd2b990-2205-42d1-befa-9ac5dfbeb952",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"FormID\": \"{{userFormTemplateID}}\",\n  \"Identifier\": \"Enter a unique identifier\",\n  \"User Password\": \"Enter a 6-digit password\",\n  \"First Name\": \"Enter first name\",\n  \"Last Name\": \"Enter last name\",\n  \"Email\": \"Enter a valid email ID\",\n  \"Mobile Number\": \"Enter a valid mobile number with a country code\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/users/{{userID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"users",
												"{{userID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can update an existing user."
									},
									"response": []
								}
							],
							"id": "a72c0e40-dbfe-4ef8-b6d7-4b28c72ec058",
							"description": "- User demographic information such as name, address, email ID etc... are possible to create based on a given use case. Eg : Manager, Administrator, Customer, and auditor are a few user types in an organisation which may have specific information for the organisation's record.\n- User service contains services to create new users and define their corresponding user access rights"
						},
						{
							"name": "User actions",
							"item": [
								{
									"name": "Get all the user actions",
									"id": "e08d9766-d1de-4596-b20d-e2666e110327",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/actions?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"actions"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch all the available user actions."
									},
									"response": []
								}
							],
							"id": "14031378-615e-421f-ad03-e848a50873b0",
							"description": "User actions are the list of permissions that used to make a user role."
						},
						{
							"name": "User menus",
							"item": [
								{
									"name": "Get all the user menus",
									"id": "ec4b7751-f53f-4e95-97d5-54769ea94064",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/menu?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"menu"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch all the available user menus."
									},
									"response": []
								}
							],
							"id": "508ec0d2-1960-48fd-b2e6-d2de33f97736",
							"description": "User menus are the list of menus that used to make a user role."
						},
						{
							"name": "User roles",
							"item": [
								{
									"name": "Create user role",
									"id": "01afce4c-70f5-4a35-a43e-7403c135f846",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"roleName\": \"Bank Teller\",\n  \"userActionID\": [\n    1\n  ],\n  \"menuItemsID\": [\n    1\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/users/role?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"users",
												"role"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a new user role."
									},
									"response": []
								},
								{
									"name": "Get user roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50591836-355d-4da1-ad3f-4a172b78a3fa",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.users)",
													"var users=jsonData.users",
													"console.log(\"users...\" + users[0].roleID)",
													"pm.environment.set(\"roleID\", users[0].roleID);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "673139fb-6733-431c-a100-bb902caa4134",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/roles?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"roles"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch all the available user roles."
									},
									"response": []
								},
								{
									"name": "Get user role by role id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "15273a7b-874e-45be-a762-4885db442c9d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "1edd6066-fa09-4c16-afce-9f9c50372f54",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/UserService/roles/{{roleID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"UserService",
												"roles",
												"{{roleID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch a user role by role id."
									},
									"response": []
								}
							],
							"id": "33edc31e-0bea-461e-87b7-70bb2b276dfa",
							"description": "User roles are the set of actions that an user is expected to perform."
						},
						{
							"name": "Workflow template",
							"item": [
								{
									"name": "Create workflow template",
									"id": "3b020191-58ca-4734-a4e6-6ee9f709cc4e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Nominee Name\"\n    },\n    {\n      \"Type\": \"Date\",\n      \"Value\": \"\",\n      \"Label\": \"Nominee DOB\"\n    },\n    {\n      \"Type\": \"Number\",\n      \"Value\": \"\",\n      \"Label\": \"Nominee Aadhaar \"\n    }\n  ],\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Nominee Address\"\n    },\n    {\n      \"Type\": \"Phone\",\n      \"Value\": \"\",\n      \"Label\": \"Nominee Phone number \"\n    }\n  ],\n  \"Label\": \"Nominee Details\",\n  \"Description\": \" Person who can receive the account's proceeds in the event of an unexpected emergency\"\n}\n\n// Since the workflow template name is unique, kindly rename it before every creation.\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflowTemplates?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflowTemplates"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a new workflow template."
									},
									"response": []
								},
								{
									"name": "Get all workflow templates",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7cf9def0-66be-4074-b8e1-13a17d6426af",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.workflow)",
													"var workflow=jsonData.workflow",
													"console.log(\"workflow...\"+workflow[0].templateID)",
													"pm.environment.set(\"workflowTemplateID\", workflow[0].templateID);"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d669898d-fb0d-45ad-b812-10ffbc81b0f5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflowTemplates?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflowTemplates"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch all the available workflow templates."
									},
									"response": []
								},
								{
									"name": "Get workflow template by id",
									"id": "8398ed8e-b56f-46db-9b43-2cc19b33ff08",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflowTemplates/{{workflowTemplateID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflowTemplates",
												"{{workflowTemplateID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch a workflow template by workflow template ID."
									},
									"response": []
								},
								{
									"name": "Update workflow template",
									"id": "73ef0e7e-fe8f-4626-957c-c1e31523881a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Form Header\": [],\n  \"Label\": \"Credit Score\",\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"My Bank\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Pay Status\"\n    },\n    {\n      \"Type\": \"Number\",\n      \"Value\": \"\",\n      \"Label\": \"Credit Number\"\n    }\n  ],\n  \"Description\": \"A prediction of your credit behavior, such as how likely you are to pay a loan back on time, based on information from your credit reports\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflowTemplates/{{workflowTemplateID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflowTemplates",
												"{{workflowTemplateID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can update an existing workflow template."
									},
									"response": []
								}
							],
							"id": "be9fb86e-9876-4222-a0ae-294da74ccbf1"
						},
						{
							"name": "Configure workflow template",
							"item": [
								{
									"name": "Update auto-verify and external access flags",
									"id": "0349ae0e-0d4b-49cb-b524-950a154becc9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"List\",\n      \"Value\": [\n        \"Yes\",\n        \"No\"\n      ],\n      \"Label\": \"I consent\"\n    }\n  ],\n  \"Form Body\": [],\n  \"Label\": \"Crypto custody terms \",\n  \"Description\": \"Crypto custody is a secure, off-chain storage solution that protects crypto wallet funds or holdings from theft or loss.\\n\\nAs part of its AML (anti-money laundering), CTF (counter-terrorism financing) and other regulatory duties, we need to monitor incoming and outgoing crypto transactions and - if necessary - reject transactions or report cases to authorities in case of reasonable suspicion.\",\n  \"autoVerify\": true,\n  \"externalAccess\": true,\n  \"templateActiveStatus\": 0\n}\n\n\n// Provide the workflow template in the body based on the workflow template ID.\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflowTemplates/{{workflowTemplateID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflowTemplates",
												"{{workflowTemplateID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "Using this service, we can update auto-verify and external access flags to either true or false for a specific workflow template."
									},
									"response": []
								}
							],
							"id": "a1c75df5-d7a2-4377-8fd8-dd5f4eafeb5b",
							"description": "Consist of a service that is used to configure workflow template features like the auto-verify flag and the external access flag."
						},
						{
							"name": "Workflows",
							"item": [
								{
									"name": "Create workflows",
									"id": "e1032212-efcc-4d59-ab48-c45ecbc418ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workFlowName\": \"Machinery loan\",\n  \"templateID\": [\n    9,\n    16,\n    907193,\n    93\n  ]\n}\n\n// Mention a single or multiple workflow template id's inside the \"templateID\"\n// Since the workflow name is unique, kindly rename it before every creation.\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflows?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflows"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can create a new workflow.\n- In order to create a workflow, it requires a workflow template ID. Use the service **Get all workflow templates** to fetch the workflow template id.\n- Set a single or multiple workflow template id's in the payload based on the preference.\n- Provide a workflow name and click on **Send**."
									},
									"response": []
								},
								{
									"name": "Get all workflows",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5d06d595-08d8-4a6a-ad7a-e6f57ba01b08",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.workflow)",
													"var workflow=jsonData.workflow",
													"console.log(\"workFlowID...\"+workflow[0].workFlowID)",
													"console.log(\"workFlowName...\"+workflow[0].workFlowName)",
													"pm.environment.set(\"workFlowID\", workflow[0].workFlowID);"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d0b719d2-aa36-4c8a-8de5-d4ba7ef6c365",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflows?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflows"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get all the workflows.\n- Run this service just once, since it has a test script defined to fetch a specific **workflowID** and turn the **workflowID** into a global variable so that other necessary services can utilize it."
									},
									"response": []
								},
								{
									"name": "Get a workflow by workflow id",
									"id": "1f16b2ad-063d-4cbc-bd2f-9a942760843b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflows/{{workFlowID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflows",
												"{{workFlowID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can get a specific workflow based on it's workflow id.\n- Since the **workflowID** will be automatically applied in the service, running this service will result in a specific workflow."
									},
									"response": []
								},
								{
									"name": "Get the count of onboarded profiles",
									"id": "9b248aef-1f9f-4c93-9e0e-dfed84f47aa0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflows/count?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflows",
												"count"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get the total count of workflows."
									},
									"response": []
								},
								{
									"name": "Edit workflow",
									"id": "6d157b7d-71b7-4fc9-8098-63e0df176330",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"workflowName\": \"Microfinance loans\",\r\n  \"description\": \"Microfinance is a form of financial service which provides small loans and other financial services to poor and low-income households.\",\r\n  \"picture\": \"\",\r\n  \"productUUID\": \"\",\r\n  \"autoApproval\": \"No\",\r\n  \"autoDisburse\": \"No\"\r\n}\r\n\r\n// Mention any workflow name in the \"workflowName\" value\r\n// Mention workflow description in the \"description\" value.\r\n// Set the \"autoApproval\" either as Yes or No.\r\n// Set the \"autoDisbursement\" either as Yes or No.",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/updateworkflowName/{{workFlowID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"updateworkflowName",
												"{{workFlowID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can edit a specific workflow based on it's workflow id.\n- Since the **workflowID** will be automatically applied in the service, running this service will edit a specific workflow.\n- **Note** : The payload listed below belongs to the **workflowID**, which is fetched automatically by the service. To view that specific workflow details, use the service **Get a workflow by workflow id**."
									},
									"response": []
								},
								{
									"name": "Edit workflow order",
									"id": "75054d7b-7e89-4a18-95ea-01b55700f287",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"workflowOrder\": [\r\n    9,\r\n    16,\r\n    93,\r\n    2223,\r\n    912680\r\n  ]\r\n}\r\n\r\n// Change the order of the workflow temlates",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/updateWorkfloworder/{{workFlowID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"updateWorkfloworder",
												"{{workFlowID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can change the order of the workflow templates within a specific workflow.\n- Since the **workflowID** will be automatically applied in the service, running this service will change the order of the workflow templates within a specific workflow.\n- **Note** : Change the order of the workflow templates for the same workflow we update. To view that specific workflow details, use the service **Get a workflow by workflow id.**"
									},
									"response": []
								}
							],
							"id": "d7b0c02b-9541-44df-a7c9-3b9405f975d9",
							"description": "- Onboarding a customer usually requires certain procedures to be followed, for instance capturing certain information, and verifying such information provided. Such procedures could also extend to sending such information captured to even 3rd party APIs for validating KYC, performing ID verification checks, AML checks, address verification, credit bureau check etc.\n- Workflow services enable an organisation administrator to orchestrate such onboarding stages, which in turn enable customers and organisation users to follow these specific workflow steps to complete an onboarding process."
						},
						{
							"name": "Audit trial",
							"item": [
								{
									"name": "Get all the audit trial data",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a1f31935-abd5-4462-bb2a-5d2ce902826e",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"",
													"var id = jsonResponse[0].id;",
													"console.log(\"auditID...\"+jsonResponse[0].id)",
													"pm.globals.set(\"auditID\", jsonResponse[0].id);",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8620122e-a4ed-43d6-8ea6-2020fd5d9265",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/ProfileService/getAuditData?pageNumber=0&numberOfRecords=10&access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"ProfileService",
												"getAuditData"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "numberOfRecords",
													"value": "10"
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch the audit trial data."
									},
									"response": []
								},
								{
									"name": "Get the audit trial with audit ID",
									"id": "054d8f3c-fd51-429a-9b9d-b922eb40793f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/ProfileService/getAuditData?pageNumber=0&numberOfRecords=10&auditId={{auditID}}&access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"ProfileService",
												"getAuditData"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "numberOfRecords",
													"value": "10"
												},
												{
													"key": "auditId",
													"value": "{{auditID}}"
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch the audit trial data with a specific audit id."
									},
									"response": []
								}
							],
							"id": "857049c4-529d-4cfb-80f4-c3e94a24f5bc"
						}
					],
					"id": "f1f0c055-2462-4ed8-a329-bd540b23dd65",
					"description": "This contains a list of services for initial configuration of Mobile First Finance setup"
				},
				{
					"name": "Profile",
					"item": [
						{
							"name": "Create profile form",
							"id": "37db7c54-3882-4229-83a1-3642608a2a9b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"Customer registration form\",\n      \"Label\": \"Form Label\"\n    }\n  ],\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"National ID\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Name\"\n    },\n    {\n      \"Type\": \"List\",\n      \"Value\": [\n        \"Male\",\n        \"Female\"\n      ],\n      \"Label\": \"Gender\"\n    },\n    {\n      \"Type\": \"Branch\",\n      \"Value\": \"L0\",\n      \"Label\": \"Hierarchy\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Latitude\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Longitude\"\n    },\n    {\n      \"Type\": \"Phone\",\n      \"Value\": \"\",\n      \"Label\": \"Mobile Number\"\n    },\n    {\n      \"Type\": \"Date\",\n      \"Value\": \"\",\n      \"Label\": \"Date of Birth\"\n    }\n  ]\n}\n// Since the profile form name is unique, kindly rename it before every creation.\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/profiles/forms?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles",
										"forms"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can create a profile form.\n- Check out the profile form example json in the body below.\n- The first label in the header section needs to be defined as Form Label, and the value can be any name of the profile form you want it to be.\n- The **Form Label** should ideally be in the **Form Header**, and the remaining fields can be in the **Form Body**."
							},
							"response": []
						},
						{
							"name": "Get all the profile forms",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "181f7a29-3530-4798-8a6e-81dd88ff8dcd",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.profileForms)",
											"var profileForms=jsonData.profileForms",
											"console.log(\"profileFormID...\"+profileForms[0].profileFormID)",
											"pm.environment.set(\"profileFormID\", profileForms[0].profileFormID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2253b02a-c603-43e7-9979-622dc4b49c17",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/profiles/forms?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles",
										"forms"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can get all the profile forms that exists in the application.\n- Run this service just once, since it has a test script defined to fetch a specific **profileFormID** and turn the **profileFormID** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Get a profile form by profile form id",
							"id": "9d9c64e6-b2a6-44fc-82a0-479a25661fef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/profiles/forms/{{profileFormID}}?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles",
										"forms",
										"{{profileFormID}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can get a specific profile form based on **profileFormID**.\n- Since the **profileFormID** will be automatically applied in the service, running this service will result in a specific profile form."
							},
							"response": []
						},
						{
							"name": "Update profile form",
							"id": "1c48ba33-2e07-496c-abeb-b839ac2c74b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Form Header\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"Customer registration form\",\n      \"Label\": \"Form Label\"\n    }\n  ],\n  \"Form Body\": [\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"National ID\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Full Name\"\n    },\n    {\n      \"Type\": \"List\",\n      \"Value\": [\n        \"Male\",\n        \"Female\"\n      ],\n      \"Label\": \"Gender\"\n    },\n    {\n      \"Type\": \"Branch\",\n      \"Value\": \"L0\",\n      \"Label\": \"Hierarchy\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Latitude\"\n    },\n    {\n      \"Type\": \"Varchar\",\n      \"Value\": \"\",\n      \"Label\": \"Longitude\"\n    },\n    {\n      \"Type\": \"Phone\",\n      \"Value\": \"\",\n      \"Label\": \"Mobile Number\"\n    },\n    {\n      \"Type\": \"Date\",\n      \"Value\": \"\",\n      \"Label\": \"Date of Birth\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/profiles/forms/{{profileFormID}}?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles",
										"forms",
										"{{profileFormID}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can update existing user form by it's user id.\n- Since the **profileFormID** will be automatically applied in the service, running this service will result in updating a specific profile form.\n- **Note** : The payload listed below belongs to the **profileFormID**, which is fetched automatically by the service. To view that specific profile from details, use the service **Get a profile form by profile form id**."
							},
							"response": []
						},
						{
							"name": "Create profile",
							"id": "524b730c-8982-4420-bf54-fd4ee9a2cea9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"FormID\": \"{{profileFormID}}\",\n  \"Name\": \"Enter name\",\n  \"National ID\": \"Enter national ID\",\n  \"Address\": \"\",\n  \"Country\": \"Enter country name\",\n  \"Corporate Email\": \"Enter a valid email ID\",\n  \"Mobile Number\": \"Enter a valid mobile number with country code\",\n  \"Hierarchy\": \"\"\n}\n\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/profiles?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can create a new profile.\n- Check out the profile example json in the body below.\n- From the **Get all the profile forms** response, select any **profile** **form** and set the payload according to the form. For every **profile form** there will be a **profileFormID** and that will be act as **FormID**.  \n    Note: **FormID** is mandatory to create profile."
							},
							"response": []
						},
						{
							"name": "Get all the profiles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72610622-0e4a-42c4-a994-d81a2760fdba",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.profiles)",
											"var profiles=jsonData.profiles",
											"console.log(\"profileID...\"+profiles[0].profileID)",
											"pm.environment.set(\"profileID\", profiles[0].profileID);",
											"",
											"var profileDetails=profiles[0].profileDetails",
											"console.log(\"profileDetails...\"+profileDetails[\"Mobile Number\"])",
											"pm.environment.set(\"MobileNumber\", profileDetails[\"Mobile Number\"]);",
											"",
											"var profileDetails=profiles[0].profileDetails",
											"console.log(\"profileDetails...\"+profileDetails[\"Identifier\"])",
											"pm.environment.set(\"Identifier\", profileDetails[\"Identifier\"]);",
											"",
											"var profileDetails=profiles[0].profileDetails",
											"console.log(\"Hierarchy...\"+profileDetails[\"Hierarchy\"])",
											"pm.environment.set(\"Hierarchy\", profileDetails[\"Hierarchy\"]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a38e0bb9-36e9-4963-a2a1-6593da055abe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/profiles?pageNumber=0&numberOfRecords=10&access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can view all the existing profiles.\n- In the response, you will find the **profileID**, which is required when updating an existing profile details.\n- Run this service just once, since it has a test script defined to fetch a specific **profileID** and turn the **profileID** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Get profile by profileid",
							"id": "99e57d92-3a84-408a-97a4-dec94e45aefe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/profiles/{{profileID}}?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles",
										"{{profileID}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can get profile details by it's profile id.\n- Since the **profileID** will be automatically applied in the service, running this service will result in a specific profile."
							},
							"response": []
						},
						{
							"name": "Update profile",
							"id": "4f62c6c5-d1c1-42fd-a27f-9a2db844ceec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"FormID\": \"{{profileFormID}}\",\n  \"Name\": \"Enter name\",\n  \"National ID\": \"Enter national ID\",\n  \"Address\": \"\",\n  \"Country\": \"Enter country name\",\n  \"Corporate Email\": \"Enter a valid email ID\",\n  \"Mobile Number\": \"Enter a valid mobile number with country code\",\n  \"Hierarchy\": \"\"\n}\n\n// Update the required details of the profile.\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/profiles/{{profileID}}?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles",
										"{{profileID}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can update existing profile details.\n- Since the **profileID** will be automatically applied in the service, running this service will result in updating a specific profile details.\n- Mention the profile body in the payload and make the necessary changes.\n- **Note** : The payload listed below belongs to the **profileID**, which is fetched automatically by the service. To view that specific profile details, use the service **Get profile by profileid**."
							},
							"response": []
						},
						{
							"name": "Get profiles count",
							"id": "bc0c58b1-d78d-49fe-9102-438a6b5fe10e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/profile/count?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profile",
										"count"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service we can get total count of the profiles that exist in the application."
							},
							"response": []
						}
					],
					"id": "227629b4-cc94-44c3-8a27-e9a31de86a9c",
					"description": "- An organisation may comprise diverse profile types such as customer, business owner, enterprise info etc... Each of such profiles may require typical information to be stored in an organisation's record. Such profile types are termed profile templates that can be further used to create specific profiles.\n- Profile service contains services to define client profile templates and to create profiles in such categories."
				},
				{
					"name": "Onboard",
					"item": [
						{
							"name": "View a workflow",
							"item": [
								{
									"name": "Get workflow by workflow id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06eb9086-ab05-43ca-91d4-0fd79491eb9e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b5b30e5b-31ed-4635-b3cd-47d8d268208a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflows/{{workFlowID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflows",
												"{{workFlowID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can get a workflow based on it's workflow id."
									},
									"response": []
								},
								{
									"name": "Get onboard filter by workflowid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e19f0e7c-1da1-468a-bed9-ee369ba85601",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"var jsonData = jsonResponse.data;",
													"var workflow=jsonData.workflow",
													"console.log(\"workflow...\"+Object.keys(workflow))",
													"// var jsonWorkflowData= Object.keys(workflow);",
													"// console.log(\"jsonWorkflowData...\"+jsonWorkflowData[1])",
													"var jsonWorkflowData= Object.keys(workflow)[1];",
													"console.log(\"workflowTemplateDetailsID...\"+workflow[jsonWorkflowData][0].detailsID)",
													"pm.environment.set(\"workflowTemplateDetailsID\", workflow[jsonWorkflowData][0].detailsID);",
													"",
													"// var jsonWorkflowData= Object.keys(workflow)[2];",
													"// console.log(\"workflowTemplateDetailsID2...\"+workflow[jsonWorkflowData][0].detailsID)",
													"",
													"// var jsonWorkflowData= Object.keys(workflow)[3];",
													"// console.log(\"workflowTemplateDetailsID3...\"+workflow[jsonWorkflowData][0].detailsID)",
													"",
													"// var jsonWorkflowData= Object.keys(workflow)[4];",
													"// console.log(\"workflowTemplateDetailsID4...\"+workflow[jsonWorkflowData][0].detailsID)",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c49adb1d-2289-4fcb-8515-719469770ebd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/onboardFilter?numberOfRecords=50&pageNumber=0&access_token={{useraccessToken}}&workflowId={{workFlowID}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"onboardFilter"
											],
											"query": [
												{
													"key": "numberOfRecords",
													"value": "50"
												},
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												},
												{
													"key": "workflowId",
													"value": "{{workFlowID}}"
												}
											]
										},
										"description": "- For every workflow template there will be a **workflowTemplateDetailsId,** By using this service, we can fetch the **workflowTemplateDetailsId**, which is required to verify a workflow.\n    \n\n- Run this service just once, since it has a test script defined to fetch a specific **workflowTemplateDetailsId** and turn the **workflowTemplateDetailsId** into a environment variable so that other necessary services can utilize it."
									},
									"response": []
								}
							],
							"id": "4cc169f8-7b21-4bee-9881-31c88cfb9c91"
						},
						{
							"name": "Link profile to a worflow",
							"item": [
								{
									"name": "Link profile to workflow",
									"id": "571c3871-5acd-4ebd-bd20-51ab0f641b44",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"profileDetails\": [\n    {\n      \"profileID\": \"87c85ee9-0ddc-487e-9d5c-a3d0a7641318\"\n    }\n  ],\n  \"workFlowID\": \"2224\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflowToProfiles?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflowToProfiles"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can link a profile to the workflow.\n- For linking the profile to a specific workflow we have to mention both the **profileID** and the **workFlowID** in the payload. Check the below example json payload for detail.\n- Click on the Environment quick look in the right top corner and navigate to environment (**backofficeURL**) to find the generated **profileID** and **workFlowID**.\n- **Note** : To fetch the **profileID**, run the service **Get all the profiles** in the **Profile** section and to fetch the **workFlowID**, run the service **Get all workflows** in the **Workflows** under the **Settings**."
									},
									"response": []
								},
								{
									"name": "Get workflow profile id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5ddcbdc6-0549-4580-b377-9a08e641ce76",
												"exec": [
													"var jsonResponse = JSON.parse(responseBody);",
													"console.log(\"jsonResponse...\"+jsonResponse)",
													"",
													"var jsonData = jsonResponse.data;",
													"console.log(\"jsonData...\"+jsonData.workflow)",
													"",
													"var workflow=jsonData.workflow",
													"console.log(\"workflowProfileID...\"+workflow.workflowProfileID)",
													"pm.environment.set(\"workflowProfileID\", workflow.workflowProfileID);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "28c76d03-4cfa-40e1-b986-2b526553715e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/mobileApp/{{profileID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"mobileApp",
												"{{profileID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch the **workflowProfileID** which is required to verify a workflow.\n- Run this service just once, since it has a test script defined to fetch a specific **workflowProfileID** and turn the **workflowProfileID** into a environment variable so that we can utilize it while verifying a workflow."
									},
									"response": []
								}
							],
							"id": "a372710b-b64b-4c5f-8006-35ee62f0f28e"
						},
						{
							"name": "Update details in workflow",
							"item": [
								{
									"name": "Update details in the workflow template",
									"id": "e547e475-8072-4118-992f-43176f55e194",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Bank Account Number\": 85632652,\r\n  \"Bank Name\": \"HSBC\",\r\n  \"Bank branch name\": \"Hyderabad\",\r\n  \"IFSC Code\": \"HSBC000623\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflowTemplateDetails/{{workflowTemplateDetailsID}}?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflowTemplateDetails",
												"{{workflowTemplateDetailsID}}"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can update existing workflow template details.\n- Since the **workflowTemplateDetailsID** will be automatically applied in the service, running this service will result in updating a specific workflow template details.\n- **Note** : (1)The payload listed below belongs to a specific **workflow template** of a specific **workflow** to which the profile got onboarded.\n- (2) Usually there might be multiple workflow templates for every individual workflow. Based on workflow template, we need to pass the template details in the payload."
									},
									"response": []
								}
							],
							"id": "5d3f7383-dad0-4334-8d0c-046f25fe353c"
						},
						{
							"name": "Verify a workflow template",
							"item": [
								{
									"name": "Verify a workflow template",
									"id": "38a16fbc-08ef-4c5a-ad56-b4de0b0438a7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"workflowTemplateDetails\": [\r\n    {\r\n      \"templateDetailsID\": 1616621,\r\n      \"templateID\": 16,\r\n      \"workflowProfileID\": 1616619,\r\n      \"workflowTemplateDetails\": {\r\n        \"Bank Account Number\": 85632652,\r\n        \"Bank Name\": \"HSBC\",\r\n        \"Bank branch name\": \"Hyderabad\",\r\n        \"IFSC Code\": \"HSBC000623\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n// templateDetailsID : Once you run the service \"Get onboard filter by workflowid\" under \"View a workflow\" in the \"Onboard\" section, you will get the \"templateDetailsID.\" To obtain it, check the environment variables.\r\n// templateID : Once you run the service \"Get all workflow templates\" under \"Workflow template\" in the \"Settings\" section, you will get the \"templateID.\" To obtain it, check the environment variables.\r\n// workflowProfileID : Once you run the service \"Get workflow profile id\" under \"Link profile to a workflow\" in the \"Onboard\" section, you will get the \"workflowProfileID.\" To obtain it, check the environment variables.",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/WorkflowService/workflowTemplateDetails/verify?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"WorkflowService",
												"workflowTemplateDetails",
												"verify"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can verify a specific workflow template."
									},
									"response": []
								}
							],
							"id": "7044ead0-2b6b-4ae9-915b-0374a8a8e2d6"
						}
					],
					"id": "0e29be9b-5869-46cd-a7ce-8437d87b6073",
					"description": "- Onboard module is used for onboarding a new client. This folder consist of different services which are used for the functionality of the module."
				},
				{
					"name": "Approve",
					"item": [
						{
							"name": "Approve a profile",
							"item": [
								{
									"name": "Get the non approved and approved profiles using filter",
									"id": "aafe19dd-c03e-4920-8ef2-86739d2d1191",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/ProfileService/searchprofileWithApproval?access_token={{useraccessToken}}&pageNumber=0&numberOfRecords=10&approved=No",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"ProfileService",
												"searchprofileWithApproval"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												},
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "numberOfRecords",
													"value": "10"
												},
												{
													"key": "approved",
													"value": "No"
												}
											]
										},
										"description": "- Using this service, we can fetch the non-approved and approved profiles using a filter."
									},
									"response": []
								},
								{
									"name": "Approve a profile",
									"id": "025ab793-cde9-4a07-bfd7-dbb4b6d5acbe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"ApprovedProfiles\": [\r\n    {\r\n      \"workflowProfileID\": 1599801,\r\n      \"workflowID\": \"1496367\",\r\n      \"profileID\": \"b675bb20-4f29-4682-aab5-9e065823bc13\",\r\n      \"Approved\": \"No\"\r\n    }\r\n  ]\r\n}\r\n\r\n// workflowProfileID : Once you run the service \"Get workflow profile id\" under \"Link profile to a workflow\" in the \"Onboard\" section, you will get the \"workflowProfileID.\" To obtain it, check the environment variables.\r\n\r\n// workflowID : Once you run the service \"Get all workflows\" under \"Workflows\" in the \"Settings\" section, you will get the \"workflowID.\" To obtain it, check the environment variables.\r\n\r\n// profileID : Once you run the service \"Get all the profiles\" under \"Profile\" section, you will get the \"profileID.\" To obtain it, check the environment variables.\r\n\r\n// Approved : Mention the approved value as \"NO\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/ProfileService/editApprovalProfiles?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"ProfileService",
												"editApprovalProfiles"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can approve a profile."
									},
									"response": []
								}
							],
							"id": "b083ddf7-f0b7-4499-a96b-3c92390fbd83"
						}
					],
					"id": "233ffe8a-525f-40f0-86c3-8b3be8597e10",
					"description": "Approve client is a module which allows us to approve a profile after completion of onboard verification."
				},
				{
					"name": "Payments",
					"item": [
						{
							"name": "Bulk Deals",
							"item": [
								{
									"name": "Get IED events",
									"id": "e6496c2d-3c31-4675-9def-ab8ec81c3a00",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/PortfolioService/bulkReceiveAndDeals?&access_token={{useraccessToken}}&pageNumber=0&numberOfRecords=1&Hierarchy=1&repaymentType=No&eventType=IED",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"PortfolioService",
												"bulkReceiveAndDeals"
											],
											"query": [
												{
													"key": null,
													"value": null
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												},
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "numberOfRecords",
													"value": "1"
												},
												{
													"key": "Hierarchy",
													"value": "1"
												},
												{
													"key": "repaymentType",
													"value": "No"
												},
												{
													"key": "eventType",
													"value": "IED"
												}
											]
										},
										"description": "- Using this service, we can get the pending events which are yet to be disbursed.\n- In the service params there are filters like **pageNumber**, **numberOfRecords** and **eventType**. Using these filters, we can retrieve the required data, such as a group of **IED**(loan amount)/**FP**(Fee) type events in 10 pages and 50 records."
									},
									"response": []
								},
								{
									"name": "Disburse IED event",
									"id": "0f8dd5db-8e65-474e-91ce-4865945bd86e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n  {\r\n    \"ContractUUID\": \"2f9f80cb-5b56-4b65-82a8-12578b21e75b\",\r\n    \"EventID\": \"cddfd22e-82d9-4576-ac1f-9bcb0fea1bde\",\r\n    \"EventTime\": \"2022-07-01T23:59:59\",\r\n    \"EventType\": \"IED\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": -25000,\r\n    \"DebitPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"CreditPaymentChannelID\": \"5b33e59d-07bf-4bd0-8fcd-5eff59a4f254\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": -25000,\r\n    \"ProcessTime\": \"2022-07-01T23:59:59\",\r\n    \"Hierarchy\": 1599383\r\n  }\r\n]\r\n// The disbursement consists of two different sorts of events, the IED (loan amount) and the FP (fee). The FP event is optional and not every contract must include it.\r\n\r\n// The ContractUUID, EventID, EventTime(event_time), EventType(event_type), Units and Value(event_value) can be found in the response data of the \"Get IED event.\"\r\n\r\n// DebitPaymentChannelID and CreditPaymentChannelID can be found in the \"eventjson\" key, which is contained within the Get IED event's response.\r\n\r\n// PaymentMethod : Set the PaymentMethod as billing.\r\n\r\n// RemainingAmount : The Value and RemaingAmount are both the same.\r\n\r\n// ProcessTime : The EventTime and ProcessTime are both the same.\r\n\r\n// Hierarchy : Hierarchy can be found inside the \"profilejson\" key, which is contained within the Get IED event's response.",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/PortfolioService/savePortfolioRepayment?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"PortfolioService",
												"savePortfolioRepayment"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can disburse a pending event (IED/FP).\n- Check the below example payload for detail."
									},
									"response": []
								}
							],
							"id": "935cc2ee-621d-4049-ae15-75094c6c0d53"
						},
						{
							"name": "Bulk Receive",
							"item": [
								{
									"name": "Get IP/PR events",
									"id": "5ddde287-6e0a-431d-8c1d-67bb123f0092",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/PortfolioService/bulkReceiveAndDeals?&access_token={{useraccessToken}}&pageNumber=0&numberOfRecords=10&Hierarchy=1&repaymentType=No",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"PortfolioService",
												"bulkReceiveAndDeals"
											],
											"query": [
												{
													"key": null,
													"value": null
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												},
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "numberOfRecords",
													"value": "10"
												},
												{
													"key": "Hierarchy",
													"value": "1"
												},
												{
													"key": "repaymentType",
													"value": "No"
												}
											]
										},
										"description": "- Using this service, we can get the pending **IP/PR** events which are yet to be receive.\n- In the service params there are filters like **pageNumber**, **numberOfRecords**, **Hierarchy** and **repaymentType**. Using these filters, we can retrieve the required data, such as a group of IP/PR events in 10 pages and 50 records etc."
									},
									"response": []
								},
								{
									"name": "Repay IP/PR event",
									"id": "227f51ae-8828-4b47-af3e-d453b4069878",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n  {\r\n    \"ContractUUID\": \"2f9f80cb-5b56-4b65-82a8-12578b21e75b\",\r\n    \"EventID\": \"d471066b-adfe-465f-9d7d-6ba9bd64eb4c\",\r\n    \"EventTime\": \"2022-07-08T23:59:59\",\r\n    \"EventType\": \"IP\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 101,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"5b33e59d-07bf-4bd0-8fcd-5eff59a4f254\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 101,\r\n    \"ProcessTime\": \"2022-07-08T23:59:59\",\r\n    \"Hierarchy\": \"1599383\"\r\n  },\r\n  {\r\n    \"ContractUUID\": \"2f9f80cb-5b56-4b65-82a8-12578b21e75b\",\r\n    \"EventID\": \"fa10cf97-98d7-43be-93aa-ff0e75e53431\",\r\n    \"EventTime\": \"2022-07-08T23:59:59\",\r\n    \"EventType\": \"PR\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 2399,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"5b33e59d-07bf-4bd0-8fcd-5eff59a4f254\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 2399,\r\n    \"ProcessTime\": \"2022-07-08T23:59:59\",\r\n    \"Hierarchy\": \"1599383\"\r\n  }\r\n]\r\n\r\n// The repayment consists of two different sorts of events, the IP(Interest) and the PR(Principal). \r\n\r\n// The ContractUUID, EventID, EventTime(event_time), EventType(event_type), Units and Value(event_value) can be found in the response data of the \"Get IP/PR event.\"\r\n\r\n// DebitPaymentChannelID and CreditPaymentChannelID can be found in the \"eventjson\" key, which is contained within the Get IP/PR event's response.\r\n\r\n// PaymentMethod : Set the PaymentMethod as billing.\r\n\r\n// RemainingAmount : The Value and RemaingAmount are both the same.\r\n\r\n// ProcessTime : The EventTime and ProcessTime are both the same.\r\n\r\n// Hierarchy : Hierarchy can be found inside the \"profilejson\" key, which is contained within the Get IP/PR event's response.\r\n\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backofficeURL}}:5055/PortfolioService/savePortfolioRepayment?access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"PortfolioService",
												"savePortfolioRepayment"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service we can repay a pending IP/PR event .\n- Check the below example payload for detail."
									},
									"response": []
								}
							],
							"id": "395af17e-558c-4fd6-9cc1-541f457e3878"
						},
						{
							"name": "Receipt Approval",
							"item": [
								{
									"name": "Get the payment events yet to be approved",
									"id": "36d2bb8f-3414-4904-97d6-2978d90ecab5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backofficeURL}}:5055/PortfolioService/receiptApproval?=&numberOfRecords=10&pageNumber=0&access_token={{useraccessToken}}",
											"host": [
												"{{backofficeURL}}"
											],
											"port": "5055",
											"path": [
												"PortfolioService",
												"receiptApproval"
											],
											"query": [
												{
													"key": "",
													"value": ""
												},
												{
													"key": "numberOfRecords",
													"value": "10"
												},
												{
													"key": "pageNumber",
													"value": "0"
												},
												{
													"key": "access_token",
													"value": "{{useraccessToken}}"
												}
											]
										},
										"description": "- Using this service, we can fetch the events IED/FP & IP/PR which are yet to be approved."
									},
									"response": []
								}
							],
							"id": "2b03081d-4a08-4cd0-9b2a-27748da3d927"
						}
					],
					"id": "9463df60-4e59-4e73-be19-11dc40167243"
				},
				{
					"name": "Document storage",
					"item": [
						{
							"name": "To view the personal documents for a specific profile",
							"id": "412dad75-c601-41b5-927b-90d089116cca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/files/{{documentsprofileID}}/personal?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"files",
										"{{documentsprofileID}}",
										"personal"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can view the personal documents of a specific profile."
							},
							"response": []
						},
						{
							"name": "To view the business documents for a specific profile",
							"id": "f6deef37-d07b-4a36-8fac-884405d5acff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/files/{{documentsprofileID}}/business?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"files",
										"{{documentsprofileID}}",
										"business"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can view the business documents of a specific profile."
							},
							"response": []
						},
						{
							"name": "To view the contract documents for a specific profile",
							"id": "f045c7ac-33b3-4e62-81bf-294b64d220d9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"cf95a44d-7c6a-40cd-bde9-ebe40c5c7604\",\n  \"aaf596cb-66b5-423d-b2cc-17339684621b\",\n  \"55628a44-e666-430d-b2d3-0cf7d2edcfab\",\n  \"41568864-d369-4ba6-8469-d41a1af76ff3\",\n  \"45351f8c-4bb6-4501-a9b4-e87348a5add5\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backofficeURL}}:5055/ProfileService/productTemplate/{{documentsprofileID}}/contracts?access_token={{useraccessToken}}",
									"host": [
										"{{backofficeURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"productTemplate",
										"{{documentsprofileID}}",
										"contracts"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{useraccessToken}}"
										}
									]
								},
								"description": "- Using this service, we can view the contract documents for a specific profile."
							},
							"response": []
						}
					],
					"id": "eec2dfeb-95d9-4b25-aba1-3aede2c5d8fe",
					"description": "This folder consist of services which are used to view the personal, business and contract documents of a specific profile."
				}
			],
			"id": "0160a252-9171-4fbc-92aa-7363fda045e9",
			"description": "Back-office API enable admin configurations and back-office support."
		},
		{
			"name": "Client web app",
			"item": [
				{
					"name": "Client sign up",
					"item": [
						{
							"name": "Mobile number and Email ID validation",
							"item": [
								{
									"name": "Mobile number validation",
									"id": "87991568-429c-4e15-97cf-6e6e9d248391",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Mobile Number\": \"Provide a valid mobile number with country code\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:7190/mff/api/userValidation",
										"description": "- Using this service, we can validate the mobile number."
									},
									"response": []
								},
								{
									"name": "Email Id validation",
									"id": "b1b861b3-52af-4f14-b3c0-e2c7d40e3486",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Email\": \"provide a valid email id\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:7190/mff/api/userValidation",
										"description": "- Using this service, we can validate the email ID."
									},
									"response": []
								}
							],
							"id": "ceda454a-1294-4f19-9fed-02bc11e5e7d3",
							"description": "This folder consists of services that are used to validate the mobile number and email ID of the customer."
						},
						{
							"name": "Get client sign up form",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f82ba7c-ac33-4082-bd7f-29bc6d04bbd3",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var userFormTemplateID = jsonResponse.userFormTemplateID;",
											"console.log(\"userformTemplateID...\"+jsonResponse.userFormTemplateID)",
											"pm.environment.set(\"userformTemplateID\",jsonResponse.userFormTemplateID );",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0cfc491e-e95d-4c56-8aa8-e8df2df5eca6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{customerURL}}:7190/mff/api/clientUserform/Customer",
								"description": "- Using this service, we can fetch the sign-up form that is used for client registration."
							},
							"response": []
						},
						{
							"name": "Signing up a new client",
							"id": "e2f2866e-b23e-454b-8dde-e24573471a97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Domicile\": \"enter domicile\",\r\n  \"Identifier\": \"enter a unique identifier\",\r\n  \"User Password\": \"enter a 6 digit pin\",\r\n  \"National ID\": \"enter a valid national id\",\r\n  \"First Name\": \"enter first name\",\r\n  \"Last Name\": \"enter last name\",\r\n  \"Date of Birth\": \"yyyy-mm-dd\",\r\n  \"Mobile Number\": \"enter a valid mobile number\",\r\n  \"Email\": \"enter a valid email id\",\r\n  \"FormID\": {{userformTemplateID}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:7190/mff/api/createClientUser",
								"description": "- To complete the customer sign-up process, use the default customer sign-up form below.\n- All of the keys mentioned are required, and most of them are unique.\n- The **FormID** mentioned in the payload belongs to the default user form for customer signup, and it is mandatory to mention.\n- **Identifier** - **enter a unique identifier and the data should be in varchar.**\n- **User Password - user password should be a 6 digit pin number.**\n- **Date of Birth - enter date of birth in yyyy-mm-dd format.**"
							},
							"response": []
						}
					],
					"id": "543e1c2d-2743-4c5d-a5d1-e48aefe99477",
					"description": "- This service is used to register a new customer.\n- Firstly define a new environment variable for the customer URL and make it active.\n- Check out the **Defining environment variables** section for how to define a new environment.\n- Set the environment to the customer URL, and then proceed to the signup step."
				},
				{
					"name": "Authorization",
					"item": [
						{
							"name": "Login with client credentials",
							"id": "67acfc92-b2f6-4505-ac38-92a15c83fdce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rootUser\": \"enter sandbox rootuser\",\n  \"userName\": \"enter sandbox username\",\n  \"password\": \"enter sandbox password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/UserService/userValidation",
								"description": "- Using this service, we can initiate an OTP to the email ID by performing a login with credentials."
							},
							"response": []
						},
						{
							"name": "2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd42723b-c160-4cf7-bb41-79b932cc6e96",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);\r",
											"console.log(\"jsonResponse...\"+jsonResponse)\r",
											"//var jsonData = jsonResponse.data;\r",
											"var access_token=jsonResponse.access_token\r",
											"console.log(\"access_token...\"+jsonResponse.access_token)\r",
											"pm.environment.set(\"custoken\", jsonResponse.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c8d60d5a-0547-4de4-98d2-157a27a979cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"Enter email ID\",\r\n  \"otp\": \"Enter 6-digit OTP sent to email ID\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/LoginService/login",
								"description": "- Using this service, we can verify the 6-digit OTP that was received at the email ID as part of two-factor authentication."
							},
							"response": []
						}
					],
					"id": "c8609cd7-0735-47fe-a715-d87d095eca66",
					"description": "Two-factor authentication is the basis for application access. Two services are contained in this folder, one of which will send an OTP to the email ID using login credentials, and the other will verify the OTP that was sent to the email ID."
				},
				{
					"name": "Client onboarding",
					"item": [
						{
							"name": "View the list of workflows",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "683816cc-f383-4c8e-8695-cf987132c74d",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.workflow)",
											"var workflow=jsonData.workflow[0].workFlowID",
											"console.log(\"workflowid...\"+jsonData.workflow[0].workFlowID)",
											"pm.environment.set(\"workflowid\", jsonData.workflow[0].workFlowID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3af073de-7715-4d8e-bfd4-bd98a6cda202",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflows?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflows"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the list of available workflows.\n- Run this service just once since it has a test script defined to fetch a specific workflow and turn the **workflow** **id** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Fetch all the workflow templates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d7bbc6d-2785-4171-8a1d-ceda1f606daa",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var workflow=jsonData.workflow[0].templateID",
											"console.log(\"workflow...\"+jsonData.workflow[0].templateID)",
											"var workflow=jsonData.workflow[1].templateID",
											"console.log(\"workflow...\"+jsonData.workflow[1].templateID)",
											"pm.environment.set(\"templateid0\",jsonData.workflow[0].templateID );",
											"pm.environment.set(\"templateid1\",jsonData.workflow[1].templateID );",
											"",
											"// var templateid=workflow[39].templateID",
											"// console.log(\"templateid...\"+workflow[39].templateID)",
											"// pm.environment.set(\"templateid\",workflow[39].templateID );",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2fb89982-3bf2-4c49-af28-d22598e68713",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflowTemplates?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowTemplates"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the list of available **workflow templates**.\n- Using this service we can fetch the **template id** which is necessary to **verify** the **workflow template details**.\n- Run this service just once since it has a test script defined to fetch a specific workflow template id and turn the **template id** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Fetch the profile details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3fed4e18-6eb8-4802-ae5d-f311d41aecad",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.profiles)",
											"var profiles=jsonData.profiles",
											"console.log(\"profileid...\"+profiles[0].profileID)",
											"pm.environment.set(\"profileid\", profiles[0].profileID);",
											"console.log(\"linkedprofileid...\"+profiles[0].linkedProfileID)",
											"pm.environment.set(\"linkedprofileid\", profiles[0].linkedProfileID);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b55128b7-b4d4-435e-9c3b-34d63dfeb4c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ProfileService/profiles?pageNumber=0&numberOfRecords=10&access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the logged-in user's profile details.\n- Run this service just once since it has a test script defined to turn the **profile id** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "To link a profile to workflow",
							"id": "107290f6-e442-4fab-b4fe-d887efb66676",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"profileDetails\": [\r\n    {\r\n      \"profileID\": \"{{profileid}}\"\r\n   \r\n    }\r\n  ],\r\n  \"workFlowID\": {{workflowid}}\r\n}\r\n//Look for the \"profileid\" & \"workflowid\" inside the \"Environment\" under the \"Environment quick look.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflowToProfiles?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowToProfiles"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service we can link a profile to the workflow.\n- For linking the profile to a specific workflow we have to mention both the **profileID** and the **workFlowID** in the payload. Check the below json payload for detail.\n- Click on the **Environment quick look** in the right top corner and navigate to **Globals** to find the generated **profileid** and **workflowid**.\n- **Note** : To fetch the **profileid**, run the service Fetch the profile details and to fetch the **workflowid**, run the service View the list of workflows."
							},
							"response": []
						},
						{
							"name": "Get workflow templates based on profileID and workflowID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "48a767e7-0dab-4881-86e4-91e9c4fc2390",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var workflow=jsonData.workflow",
											"console.log(\"workflow...\"+jsonData.workflow)",
											"var workFlowTemplateDetails=workflow.workFlowTemplateDetails",
											"console.log(\"workFlowTemplateDetails...\"+workflow.workFlowTemplateDetails)",
											"var workflowProfileID=workflow.workflowProfileID",
											"console.log(\"workflowprofileid...\"+workflow.workflowProfileID)",
											"pm.environment.set(\"workflowprofileid\",workflow.workflowProfileID );"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c149b27f-8dfd-4a14-b3b9-7f0bcdfbd306",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflowByprofile/{{profileid}}/{{workflowid}}?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowByprofile",
										"{{profileid}}",
										"{{workflowid}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- After linking a profile to the workflow we can check the workflow templates based on **profileID** and **workflowID**.\n- We must provide the exact **profileID** of a profile that has been linked to a workflow, as well as the **workflowID** in the service.\n- Run the services **Fetch the profile details** and **View the list of workflows** services before using this service so that those id's will automatically get applied in the service call.\n- As a result, we'll get the **workflow profile id**, which is useful for viewing a profile's workflow template details. Run this service just once since it has a test script defined to turn the **workflow profile id** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "View the workflow template details of profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0269c867-7a9f-46fb-89d9-f8c5ec8e8f36",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"",
											"var workflow=jsonData.workflow",
											"console.log(\"workflow...\"+jsonData.workflow)",
											"",
											"var workflow870=workflow[\"870\"]",
											"console.log(\"workflow870...\"+workflow[\"870\"])",
											"",
											"var wk0=workflow870[0].detailsID",
											"console.log(\"wk0...\"+workflow870[0].detailsID)",
											"pm.environment.set(\"clientwebtemplatedetailsid0\",workflow870[0].detailsID );",
											"",
											"",
											"",
											"var workflow871=workflow[\"871\"]",
											"console.log(\"workflow871...\"+workflow[\"871\"])",
											"",
											"var wk1=workflow871[0].detailsID",
											"console.log(\"wk1...\"+workflow871[0].detailsID)",
											"pm.environment.set(\"clientwebtemplatedetailsid1\",workflow871[0].detailsID );",
											"",
											"",
											"",
											"",
											"// var numdata0 = num[0].detailsID",
											"// console.log(\"clientwebtemplatedetailsid...\"+num[0].detailsID)",
											"//pm.environment.set(\"clientwebtemplatedetailsid\",num[0].detailsID );",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "aaf278ff-6993-45dd-a507-5bf216a829f1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflow/workflowTemplateDetails/{{workflowid}}/No?&numberOfRecords=10&pageNumber=0&access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflow",
										"workflowTemplateDetails",
										"{{workflowid}}",
										"No"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service we can fetch the workflow template details.\n- **Note :** Run this service once before proceeding to the next service."
							},
							"response": []
						},
						{
							"name": "To save the details in workflow template",
							"id": "bba6507d-3561-4693-961d-029e7fbfe12d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Upgrade to pro\": \"Yes\"\r\n}\r\n// Mention the value as \"Yes\" or \"No.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflowTemplateDetails/{{clientwebtemplatedetailsid0}}?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowTemplateDetails",
										"{{clientwebtemplatedetailsid0}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can update workflow template details based on workflow template details id.\n- Mention the payload according to the workflow template and provide the necessary value.\n- The **workflow template details id** will be retrieved and applied to the service from **View the workflow template details of a profile**."
							},
							"response": []
						},
						{
							"name": "To save the details in next workflow template",
							"id": "c4e74319-b177-4ad3-b971-52ccadf48fbe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"I consent\": \"Yes\"\r\n}\r\n// Mention the value as \"Yes\" or \"No.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/WorkflowService/workflowTemplateDetails/{{clientwebtemplatedetailsid1}}?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowTemplateDetails",
										"{{clientwebtemplatedetailsid1}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can update workflow template details based on workflow template details id.\n- Mention the payload according to the workflow template and provide the necessary value.\n- The **workflow template details id** will be retrieved and applied to the service from **View the workflow template details of a profile**."
							},
							"response": []
						}
					],
					"id": "f069129c-e4de-41bc-9a33-414e67ee51d5",
					"description": "Consist of a list of services that are used for client onboarding."
				},
				{
					"name": "Accounts",
					"item": [
						{
							"name": "View the contracts of a profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "650ad289-61e5-45a6-878e-d62cc718bfbe",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var portfolio=jsonData.portfolio",
											"console.log(\"portfolio...\"+jsonData.portfolio)",
											"var contractuuid=portfolio[0].contractUUID",
											"console.log(\"contractuuid...\"+portfolio[0].contractUUID)",
											"pm.environment.set(\"contractuuid\", portfolio[0].contractUUID);",
											"console.log(\"productname...\"+portfolio[0].productName)",
											"console.log(\"contractid...\"+portfolio[0].contractID)",
											"pm.environment.set(\"productname\", portfolio[0].productName);",
											"pm.environment.set(\"contractid\", portfolio[0].contractID);",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ed7d9de3-022b-4450-8145-215b57ff1c64",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/PortfolioService/Contracts?linkedProfileId={{linkedprofileid}}&access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"Contracts"
									],
									"query": [
										{
											"key": "linkedProfileId",
											"value": "{{linkedprofileid}}"
										},
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service we can fetch the list of contracts for a profile.\n- The **linkedprofileid** value, which is mentioned in the service, is mandatory.\n- To fetch the **linkedprofileid**, use the **Fetch the profile details** which is in the **Customer Onboarding** under the **Customer** collection.\n- Note : Only approved profiles will have a **linkedprofileid** generated.\n- Re run the service **Fetch the profile details** again to obtain the **linked profile id** and get it automatically applied to the service."
							},
							"response": []
						},
						{
							"name": "To view the pending events of a specific contract",
							"id": "05ec6604-775b-4127-b667-39915fd65a4e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/PortfolioService/geteventsBycontractUUID?access_token={{custoken}}&contractUUID={{contractuuid}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"geteventsBycontractUUID"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										},
										{
											"key": "contractUUID",
											"value": "{{contractuuid}}"
										},
										{
											"key": "eventType",
											"value": "PI",
											"disabled": true
										}
									]
								},
								"description": "- This service is used to view the transaction history of a specific contract.\n- The **contractuuid** value, which is mentioned in the service, is mandatory. It will automatically get applied to the service call once we run the service, **View the contracts of a profile**."
							},
							"response": []
						},
						{
							"name": "To perform the transaction",
							"id": "9c1720bd-fbbd-42e2-a1ce-03bcbea0ddd5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//   \"contractUUID\": \"{{contractuuid}}\",\r\n//   \"type\": \"PI\",\r\n//   \"value\": 5000,\r\n//   \"paymentType\": \"stripe\",\r\n//   \"triggerType\": \"deposit\"\r\n// }\r\n\r\n// Look for the generated contractuuid inside the \"Environment\" under the \"Environment quick look\".\r\n// Mention the \"type\" as \"PI\" and the \"paymentType\" as \"stripe.\"\r\n// Mention the amount in the \"value.\"\r\n// Mention the \"triggerType\" as either \"deposit\" or \"withdraw.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/SolitxService/payment/link?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"SolitxService",
										"payment",
										"link"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- This service is used to perform the transaction.\n- The payload should be specified in the following json format. All the mentioned keys in the payload are mandatory.\n- Include the exact **contract uuid** in the payload and mention the desired notional **value**.\n- Specify the trigger type as **deposit** or **withdraw**, depending on our preferred transaction.\n- Fetch the **contract uuid** by using the service **View the contracts of a profile**."
							},
							"response": []
						},
						{
							"name": "To view the transaction history of a specific contract",
							"id": "902dfb8b-d4e2-4e3d-b576-6f22b1b7f8aa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/PortfolioService/transactionHistory?contractUUID={{contractuuid}}&access_token={{custoken}}&repaymentType=Yes",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"transactionHistory"
									],
									"query": [
										{
											"key": "contractUUID",
											"value": "{{contractuuid}}"
										},
										{
											"key": "access_token",
											"value": "{{custoken}}"
										},
										{
											"key": "repaymentType",
											"value": "Yes"
										}
									]
								},
								"description": "- Using this service, we can fetch the transaction history"
							},
							"response": []
						}
					],
					"id": "f78f8d90-2600-4bce-b423-241ffe18950c",
					"description": "This folder consists of services that are used to view the contracts and their transaction histories."
				},
				{
					"name": "Cards",
					"item": [
						{
							"name": "Fetch the profile details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3fed4e18-6eb8-4802-ae5d-f311d41aecad",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.profiles)",
											"var profiles=jsonData.profiles",
											"console.log(\"linkedprofileid...\"+profiles[0].linkedProfileID)",
											"pm.environment.set(\"linkedprofileid\", profiles[0].linkedProfileID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4f69df49-2c4e-47f5-a416-f88e3a06df58",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ProfileService/profiles?pageNumber=0&numberOfRecords=10&access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the logged-in user's profile details.\n- Run this service just once since it has a test script defined to turn the **profile id** into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Apply for a card",
							"id": "ee41e136-29d8-4ee1-a314-73f64480a893",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"cardDetails\": [\r\n    {\r\n      \"contractID\": \"{{contractid}}\",\r\n      \"contractUUID\": \"{{contractuuid}}\",\r\n      \"linkedProfileId\": \"{{linkedprofileid}}\",\r\n      \"productName\": \"{{productname}}\",\r\n      \"status\": \"apply\"\r\n    }\r\n  ]\r\n}\r\n\r\n// Look for the \"contractid,\" \"contractuuid,\" and \"productname\" inside the \"Environment\" section of the \"Environment quick look\".\r\n// For once run the service \"Fetch the profile details\" under \"Customer onboarding\" to fetch the \"linkedprofileid\" from the \"Globals\" section of the \"Environment quick look.\"\r\n// Mention the \"status\" as \"apply.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/applyCard?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"applyCard"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- This service is used to apply for a new card.\n- The payload should be mentioned in a json format.\n- All the keys mentioned in the json are mandatory.\n- To find the **contractID**, **contractUUID** and **productName** use the service **View the contracts of a profile** in the **Accounts** under the **Customer** collection**.**\n- To find the **linkedProfileId** use the service **Fetch the profile details** in the **Customer Onboarding** section.\n- Mention the **status** key as **apply.**"
							},
							"response": []
						},
						{
							"name": "To view the cards associated with profile",
							"id": "9a3691a7-2b1d-4b2e-a232-2a8829ef6789",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/cards?access_token={{custoken}}&status=active",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"cards"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										},
										{
											"key": "status",
											"value": "active"
										}
									]
								},
								"description": "- This service is to view the list of active cards which are associated to a profile."
							},
							"response": []
						},
						{
							"name": "Block a card",
							"id": "8241df9a-c28a-4fc6-92ac-5ac395fb0afa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"cardDetails\": [\r\n    {\r\n      \"contractUUID\": \"{{contractuuid}}\",\r\n      \"status\": \"block\"\r\n    }\r\n  ]\r\n}\r\n\r\n// Look for the contractuuid inside the \"Environment,\" which is under the Environment quick look.\r\n// Mention the status as \"block\".",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/cardStatus?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"cardStatus"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- This service is used to block the active cards.\n- The payload should be mentioned in a json format.\n- In the payload, mention the **contractUUID** of a contract for which the active card is associated and mention the status as **block.**\n- Use **View the contracts of a profile** which is in the **Accounts** under the **Customer** collection for fetching the **contractUUID.**\n- Note : The contract should consist an active card in order to use this service."
							},
							"response": []
						}
					],
					"id": "c9b7139a-ea7e-458a-b068-36f38760f867",
					"description": "Consist of services that are used to\n\ni) Apply for a card\n\nii) To view the cards which are associated to a profile\n\niii) To block an active card"
				},
				{
					"name": "Document storage",
					"item": [
						{
							"name": "To view the personal documents for a specific profile",
							"id": "dfb94863-d8a7-43fa-a888-f1365be8d6a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ProfileService/files/{{profileid}}/personal?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"files",
										"{{profileid}}",
										"personal"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can view the personal documents of a specific profile."
							},
							"response": []
						},
						{
							"name": "To view the business documents for a specific profile",
							"id": "7040956f-d129-4b4b-82f1-49e9b4a5a2de",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ProfileService/files/{{profileid}}/business?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"files",
										"{{profileid}}",
										"business"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can view the business documents of a specific profile."
							},
							"response": []
						},
						{
							"name": "To view the contract documents for a specific profile",
							"id": "2c47fe14-01b3-4a05-a1bb-15419c2dae27",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"{{contractuuid}}\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ProfileService/productTemplate/{{profileid}}/contracts?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"productTemplate",
										"{{profileid}}",
										"contracts"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can view the contract documents for a specific profile."
							},
							"response": []
						}
					],
					"id": "f470c7cf-f2d2-4be1-8381-bb147312cabc",
					"description": "This folder consists of services that are used to fetch the personal, business, and contract documents of a specific client."
				},
				{
					"name": "Notifications",
					"item": [
						{
							"name": "Get notifications",
							"id": "128222ff-7f37-4f1d-b8e8-646f24f629e4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/notifications?access_token={{custoken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"notifications"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{custoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the notifications that were received for a specific client."
							},
							"response": []
						}
					],
					"id": "837c2b9c-4430-4a43-8a7e-17b2ec8b0b48",
					"description": "This folder consists of a service that is used to fetch the notifications that are sent to client."
				}
			],
			"id": "68603238-16c6-420d-85d8-095f24172e26",
			"description": "Customer APIs support customer/external interaction of the banking entity layer."
		},
		{
			"name": "Thirdparty integration",
			"item": [
				{
					"name": "Authorization",
					"item": [
						{
							"name": "Login with customer credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43da47a1-991c-47fa-a8ac-f0bf8d8b5be2",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var jsonValue = jsonData.body;\r",
											"console.log(\"customerToken...\"+jsonValue.access_token)\r",
											"pm.environment.set(\"customerToken\", jsonValue.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "34cf3602-9f19-4eb6-a411-65b3f39fef0c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"rootUser\": \"enter sandbox rootuser\",\r\n    \"userName\": \"enter sandbox username\",\r\n    \"password\": \"enter sandbox password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/LoginService/login",
								"description": "- Using this service, we can initiate an OTP to the email ID by performing a login with credentials."
							},
							"response": []
						},
						{
							"name": "2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd42723b-c160-4cf7-bb41-79b932cc6e96",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);\r",
											"console.log(\"jsonResponse...\"+jsonResponse)\r",
											"//var jsonData = jsonResponse.data;\r",
											"var access_token=jsonResponse.access_token\r",
											"console.log(\"access_token...\"+jsonResponse.access_token)\r",
											"pm.environment.set(\"custoken\", jsonResponse.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "66e65491-5e05-47c5-bdfb-206b08641301",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"Enter email ID\",\r\n  \"otp\": \"Enter 6-digit OTP sent to email ID\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/LoginService/login",
								"description": "- Using this service, we can verify the 6-digit OTP that was received at the email ID as part of two-factor authentication."
							},
							"response": []
						}
					],
					"id": "06bcd982-bea3-4f8d-a467-d7e4daff528a",
					"description": "- Two-factor authentication is the basis for application access. Two services are contained in this folder, one of which will send an OTP to the email ID using login credentials, and the other will verify the OTP that was sent to the email ID.\n- To conduct a third-party integration services check, use any customer credentials."
				},
				{
					"name": "Payment links",
					"item": [
						{
							"name": "Card, Wallet, Bank",
							"id": "52776548-afc8-4a69-990c-da33e801dcdf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"ContractUUID\": \"d890500d-7189-455f-9a29-ede8e91494b6\",\r\n    \"EventID\": \"24baf7b2-09df-4997-bb6a-7de90ae22ea9\",\r\n    \"EventTime\": \"2022-02-01T23:59:59\",\r\n    \"EventType\": \"IP\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 167,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"b5d7deab-19ca-4e6d-b5b8-db321522ee08\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 167,\r\n    \"ProcessTime\": \"2022-02-01T23:59:59\"\r\n  },\r\n  {\r\n    \"ContractUUID\": \"d890500d-7189-455f-9a29-ede8e91494b6\",\r\n    \"EventID\": \"ec2de6d4-9fd6-4756-9fa0-78e3f82df729\",\r\n    \"EventTime\": \"2022-02-01T23:59:59\",\r\n    \"EventType\": \"PR\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 1833,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"b5d7deab-19ca-4e6d-b5b8-db321522ee08\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 1833,\r\n    \"ProcessTime\": \"2022-02-01T23:59:59\"\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/stripe/paymentLink?access_token={{customerToken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"stripe",
										"paymentLink"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										}
									]
								},
								"description": "- The payload should be specified in json format.\n- All of the keys and values mentioned in the json are required, and the structure should look like the one shown in the json payload below.\n- **Value** and **Remaining amount** in the payload represents the amount payable. This can be updated based on our choice."
							},
							"response": []
						},
						{
							"name": "UPI",
							"id": "2479d880-1c79-4227-90d6-f210d7e1bc8e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"ContractUUID\": \"d890500d-7189-455f-9a29-ede8e91494b6\",\r\n    \"EventID\": \"24baf7b2-09df-4997-bb6a-7de90ae22ea9\",\r\n    \"EventTime\": \"2022-02-01T23:59:59\",\r\n    \"EventType\": \"IP\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 167,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"b5d7deab-19ca-4e6d-b5b8-db321522ee08\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 167,\r\n    \"ProcessTime\": \"2022-02-01T23:59:59\"\r\n  },\r\n  {\r\n    \"ContractUUID\": \"d890500d-7189-455f-9a29-ede8e91494b6\",\r\n    \"EventID\": \"ec2de6d4-9fd6-4756-9fa0-78e3f82df729\",\r\n    \"EventTime\": \"2022-02-01T23:59:59\",\r\n    \"EventType\": \"PR\",\r\n    \"Units\": \"INR\",\r\n    \"Value\": 1833,\r\n    \"Status\": \"pending\",\r\n    \"DebitPaymentChannelID\": \"b5d7deab-19ca-4e6d-b5b8-db321522ee08\",\r\n    \"CreditPaymentChannelID\": \"7deb30c2-8ccf-4e23-b538-c4a8558d96cd\",\r\n    \"PaymentMethod\": \"billing\",\r\n    \"RemainingAmount\": 1833,\r\n    \"ProcessTime\": \"2022-02-01T23:59:59\"\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/paymentLink?access_token={{customerToken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"paymentLink"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										}
									]
								},
								"description": "- The payload should be specified in json format.\n- All of the keys and values mentioned in the json are required, and the structure should look like the one shown in the json payload below.\n- **Value** and **Remaining amount** in the payload represents the amount payable. This can be updated based on our choice."
							},
							"response": []
						}
					],
					"id": "ccdf7e70-9ff7-49ce-92ae-ee092520fc16",
					"description": "Consist of services that help activate a checkout link or scannable code that allows a customer to complete a transaction."
				},
				{
					"name": "E sign",
					"item": [
						{
							"name": "Esign initiation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c494a843-630f-466b-b01e-c1bfc665e183",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var jsonValue = jsonData;",
											"console.log(\"envelopeID...\"+jsonValue.envelopeId)",
											"pm.environment.set(\"envelopeID\", jsonValue.envelopeId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bf8fb46d-619e-4390-af5d-21c862d98828",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"recipientName\": \"Stokes\",\r\n  \"recipientEmail\": \"abc123@gmail.com\",\r\n  \"recipientId\": \"32aa8463-11f2-4e73-820a-cca1b1ec6fc1\",\r\n  \"profileId\": \"547848e5-8cc2-4d9f-bf56-afa30e3d1da8\",\r\n  \"contractId\": \"32aa8463-11f2-4e73-820a-cca1b1ec6fc1\",\r\n  \"fileName\": \"DecliningInterest_Rate__MonthlyEMI_32aa8463-11f2-4e73-820a-cca1b1ec6fc1_draft\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/esign/envelope?access_token={{customerToken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"esign",
										"envelope"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										}
									]
								},
								"description": "- The payload should be specified in json format.\n- All of the keys and values mentioned in the json are required, and the structure should look like the one shown in the json payload below.\n- The **recipientName** and **recipientEmail** keys in the payload can be edited and updated based on our preferences."
							},
							"response": []
						},
						{
							"name": "To check esign status",
							"id": "208b690d-5537-4b0f-8497-2afae0ce1ede",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/esign/envelopeStatus?envelopeId={{envelopeID}}&access_token={{customerToken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"esign",
										"envelopeStatus"
									],
									"query": [
										{
											"key": "envelopeId",
											"value": "{{envelopeID}}"
										},
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										}
									]
								},
								"description": "- This service allows us to check the status of the initiated esign.\n- To verify the initiated esign status, you need **envelopeID**. When the esign is initiated, a unique **envelopeID** will get generated."
							},
							"response": []
						}
					],
					"id": "3cedcdaf-6495-470e-9a2d-9369e73b0229",
					"description": "E sign is an efficient and legal way to get electronic documents signed quickly."
				},
				{
					"name": "Trust and customer validation",
					"item": [
						{
							"name": "Email ID validation",
							"item": [
								{
									"name": "Send OTP",
									"id": "b2592251-1dfc-4ce3-a119-3a947e06804d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"To\": \"Enter a valid email ID\",\r\n  \"Channel\": \"email\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:5055/ThirdpartyService/twilio/sendOtp",
										"description": "- In the json body, include a valid email address."
									},
									"response": []
								},
								{
									"name": "Verify OTP",
									"id": "e44fc2e1-3c56-41dd-b82b-d25dddb9afd2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"To\": \"Enter the email ID\",\r\n  \"Code\": \"Enter 6-digit OTP sent to email ID\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:5055/ThirdpartyService/twilio/verifyOtp",
										"description": "- The OTP that we receive via email should be included in the **Code** value."
									},
									"response": []
								}
							],
							"id": "5484338b-a5a8-4666-aacf-0a5ab481b182"
						},
						{
							"name": "Mobile number validation",
							"item": [
								{
									"name": "Send OTP",
									"id": "a33b8d72-de13-43f3-97a7-33ace0cc5e99",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"To\": \"Enter the mobile number with country code\",\r\n  \"Channel\": \"sms\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:5055/ThirdpartyService/twilio/sendOtp",
										"description": "- In the json body, include a valid mobile number."
									},
									"response": []
								},
								{
									"name": "Verify OTP",
									"id": "16ee37c5-8544-4deb-95a5-a5d97a592367",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"To\": \"Enter the mobile number with country code\",\r\n  \"Code\": \"Enter 6-digit OTP sent to mobile number\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{customerURL}}:5055/ThirdpartyService/twilio/verifyOtp",
										"description": "- The OTP that we receive via mobile number should be included in the **Code** value."
									},
									"response": []
								}
							],
							"id": "364aa66b-40cd-420c-b2fa-57451a71a810"
						},
						{
							"name": "Bank account validation",
							"item": [
								{
									"name": "To verify bank account details",
									"id": "0330ff0d-a3de-4d67-b49e-0a5022a185ea",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"accountNumber\": \"111801516523\",\r\n  \"ifsc\": \"ICIC0003334\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customerURL}}:5055/ThirdpartyService/bankAccountVerification?access_token={{customerToken}}",
											"host": [
												"{{customerURL}}"
											],
											"port": "5055",
											"path": [
												"ThirdpartyService",
												"bankAccountVerification"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{customerToken}}"
												}
											]
										},
										"description": "- In the json body, a valid account number and IFSC code should be mentioned."
									},
									"response": []
								}
							],
							"id": "6b930878-0cde-4c7b-b677-6b9901bd4da2"
						},
						{
							"name": "PAN card validation",
							"item": [
								{
									"name": "To verify PAN card details",
									"id": "f0077fb9-d6c7-4938-9deb-a2a648cece1d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"pan\": \"BFGPK1861P\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customerURL}}:5055/ThirdpartyService/panDataFetch?access_token={{customerToken}}",
											"host": [
												"{{customerURL}}"
											],
											"port": "5055",
											"path": [
												"ThirdpartyService",
												"panDataFetch"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{customerToken}}"
												}
											]
										},
										"description": "- In the json body, a valid PAN number should be mentioned."
									},
									"response": []
								}
							],
							"id": "8c2479f7-d8f0-4be1-b6c6-31d7913902f2"
						},
						{
							"name": "Aadhaar validation",
							"item": [
								{
									"name": "Aadhaar validation",
									"id": "72f82bb3-e0bb-46b6-9018-a16c3f4bd93d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n  {\r\n    \"aadhaarNumber\": \"956302114582\"\r\n  }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customerURL}}:5055/ThirdpartyService/aadhaarVerification?access_token={{customerToken}}",
											"host": [
												"{{customerURL}}"
											],
											"port": "5055",
											"path": [
												"ThirdpartyService",
												"aadhaarVerification"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{customerToken}}"
												}
											]
										},
										"description": "- In the JSON body, a valid Aadhaar ID should be mentioned."
									},
									"response": []
								}
							],
							"id": "9c37dc59-4c83-47d0-b150-73a2d9454497"
						}
					],
					"id": "1b0f5ef8-df0e-4fdd-9709-d015b723e4eb",
					"description": "This folder contains services that are used to validate a customer's email, mobile number, bank account, PAN card details, and Aadhaar details."
				},
				{
					"name": "Bank statement analyzer",
					"item": [
						{
							"name": "To perform bank statement analysis",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "866a1329-ce14-4af9-8395-6c5625dba498",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.referenceId)",
											"var referenceId=jsonData.referenceId",
											"console.log(\"referenceId...\"+jsonData.referenceId)",
											"pm.environment.set(\"referenceId\", jsonData.referenceId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7b5c0a88-30a4-4d33-95db-3e1f4d74807d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "ClientId",
										"value": "f76f016f6396a05b5f32f68ac295cb8a"
									},
									{
										"key": "ClientSecret",
										"value": "a0375feb79f8642331408ef9f247b8f6ecb2867c0a1e7c029e70171055a8f4d9"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "WPvlW1pft/msdbnkstmnt.pdf"
										},
										{
											"key": "accountDetails",
											"value": "{\"entityType\":\"Individual\",\n\"bankCode\":\"FI00003\",\n\"accountType\":\"SAVINGS\",\n\"accountNumber\":\"043510100091434\"}",
											"type": "text"
										},
										{
											"key": "profileId",
											"value": "7423ec5c-1abf-4811-bb5d-de40469eac6b",
											"type": "text"
										},
										{
											"key": "workflowProfileId",
											"value": "1503446",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/upload/bankStatement?access_token={{customerToken}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"upload",
										"bankStatement"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										}
									]
								},
								"description": "- **Note** : Instead of using the browser to check this service, please use the postman desktop application. Because the working directory cannot be configured while using the browser and uploading a pdf file would be difficult.\n    \n\n**Follow the steps below to configure the form-data**\n\n- The request body should be mentioned in a form-data. All the mentioned keys as shown in the example below are mandatory.\n    \n\n- Upload a valid bank statement. The bank statement should be uploaded in the form of a pdf file.\n    \n\n- The account details should be mentioned in a json format as shown below. **entityType**, **accountType, accountNumber** and **bankCode** are mandatory keys to be presented. There will be different and unique bank codes for every individual bank so please mention the exact bank code in the value. Example bank codes, **Citi Bank : FI00018, HSBC Bank : FI00032, ICICI Bank : FI00033** etc.\n    \n\n- Mention the **profileId** and the **workflowProfileId** in the form data as **text.**\n    \n\n- **Note**: Check out the **Customer Onboarding section** under the **Customer** collection for how to fetch a **profileId** and **workflowProfileID**. To fetch the **profileID** use **Fetch the profile details** and to fetch the **workflowProfileID** use **Fetch workflow profile id.**"
							},
							"response": []
						},
						{
							"name": "To view the report",
							"id": "427b5205-1fd3-4246-822e-8ecf8997d68c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{customerURL}}:5055/ThirdpartyService/generateReportUrl?access_token={{customerToken}}&referenceId={{referenceID}}",
									"host": [
										"{{customerURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"generateReportUrl"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{customerToken}}"
										},
										{
											"key": "referenceId",
											"value": "{{referenceID}}"
										}
									]
								},
								"description": "- In the service, mention the **referenceId** from which we obtain it when performing bank statement analysis."
							},
							"response": []
						}
					],
					"id": "6a161efe-139d-4824-bb83-3f8d458bfdc9",
					"description": "Service that helps us to perform bank statement analysis."
				},
				{
					"name": "Credit bureau",
					"item": [
						{
							"name": "CRIF highmark report",
							"id": "6c20a068-9d55-44b6-aa58-04bc6ea3de49",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{customerURL}}:8686/highmark/getHighmarkVerification/1495806",
								"description": "- Mention the **detailsID** at the end of the service."
							},
							"response": []
						}
					],
					"id": "1f384a82-54ee-4c48-86bb-d64f96014b6c",
					"description": "Service which provides credit score and credit reports."
				},
				{
					"name": "Real-time identity verification",
					"item": [
						{
							"name": "KYC - Identity Verification",
							"id": "1e5cdb8a-b698-4821-ad78-8eb6b9a9b958",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reference\": \"9452154289\",\r\n  \"callback_url\": \"https://dev.mobilefirstfinance.com:5055/ThirdpartyService/callback/shufti\",\r\n  \"country\": \"IN\",\r\n  \"language\": \"EN\",\r\n  \"redirect_url\": \"https://customer.mobilefirstfinance.com/#/Pages/Login?verification=document&reference=3020215498\",\r\n  \"document\": {\r\n    \"supported_types\": [\r\n      \"id_card\"\r\n    ],\r\n    \"name\": \"\",\r\n    \"dob\": \"\",\r\n    \"age\": \"\",\r\n    \"issue_date\": \"\",\r\n    \"expiry_date\": \"\",\r\n    \"document_number\": \"\",\r\n    \"gender\": \"\"\r\n  },\r\n  \"face\":{}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/ThirdpartyService/shufti",
								"description": "- The json body structure need to like that which is described in the payload.\n- The **reference** id is a unique value that should be updated in the payload before the request is sent."
							},
							"response": []
						},
						{
							"name": "Facial Biometric Authentication",
							"id": "60d5869a-d01c-46fb-9d93-3a087d4ac72f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reference\": \"965210\",\r\n  \"callback_url\": \"https://dev.mobilefirstfinance.com:5055/ThirdpartyService/callback/shufti\",\r\n  \"country\": \"IN\",\r\n  \"language\": \"EN\",\r\n  \"redirect_url\": \"https://customer.mobilefirstfinance.com/#/Pages/Login?verification=document&reference=3020215498\",\r\n  \"face\": {\r\n\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/ThirdpartyService/shufti",
								"description": "- The json body structure need to like that which is described in the payload.\n- The **reference** id is a unique value that should be updated in the payload before the request is sent."
							},
							"response": []
						},
						{
							"name": "Address check",
							"id": "b0a8c222-3261-41b8-aa99-8222aec537e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reference\": \"752102\",\r\n  \"callback_url\": \"https://dev.mobilefirstfinance.com:5055/ThirdpartyService/callback/shufti\",\r\n  \"country\": \"IN\",\r\n  \"language\": \"EN\",\r\n  \"redirect_url\": \"https://customer.mobilefirstfinance.com/#/Pages/Login?verification=document&reference=3020215498\",\r\n    \"address\"         : {\r\n        \"proof\"            : \"\",\r\n        \"supported_types\"  : [\"id_card\",\"bank_statement\"],\r\n        \"name\"             : {\r\n             \"first_name\"   : \"John\",\r\n             \"middle_name\"  : \"Middleman\",\r\n             \"last_name\"    : \"Doe\"\r\n        },\r\n        \"full_address\"      : \"3339 Maryland Avenue, Largo, Florida\",\r\n        \"address_fuzzy_match\":\"1\",\r\n        \"issue_date\"        : \"1990-09-07\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/ThirdpartyService/shufti",
								"description": "- The json body structure need to like that which is described in the payload.\n- The **reference** id is a unique value that should be updated in the payload before the request is sent."
							},
							"response": []
						},
						{
							"name": "Background check",
							"id": "9f29d158-49ea-4bf4-8662-f65e0911e709",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reference\": \"963254\",\r\n  \"callback_url\": \"https://dev.mobilefirstfinance.com:5055/ThirdpartyService/callback/shufti\",\r\n  \"country\": \"IN\",\r\n  \"language\": \"EN\",\r\n  \"redirect_url\": \"https://customer.mobilefirstfinance.com/#/Pages/Login?verification=document&reference=3020215498\",\r\n   \"background_checks\": {\r\n        \"name\"             : {\r\n             \"first_name\"   : \"John\",\r\n             \"middle_name\"  : \"Middleman\",\r\n             \"last_name\"    : \"Doe\"\r\n        },\r\n        \"dob\"             : \"1980-11-12\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{customerURL}}:5055/ThirdpartyService/shufti",
								"description": "- The json body structure need to like that which is described in the payload.\n- The **reference** id is a unique value that should be updated in the payload before the request is sent."
							},
							"response": []
						}
					],
					"id": "bae2038c-1c48-440f-ae8f-693a47f770b9",
					"description": "Consist of services which is used to perform ID verification."
				},
				{
					"name": "Axis UPI",
					"item": [
						{
							"name": "To validate Axis UPI",
							"id": "0b5179db-7052-46e6-8efd-7608846b4b0d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{axisURL}}:5055/axis/upi/validateVPA?customerVpa=9966130709@axis",
									"host": [
										"{{axisURL}}"
									],
									"port": "5055",
									"path": [
										"axis",
										"upi",
										"validateVPA"
									],
									"query": [
										{
											"key": "customerVpa",
											"value": "9966130709@axis"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To disburse the amount",
							"id": "e79221e0-029b-4167-9a40-757b932b16ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{axisURL}}:5055/axis/upi/disburse?customerVpa=jinal.haran@axis&amount=100&remarks=rent&custMobileNumber=9966130709",
									"host": [
										"{{axisURL}}"
									],
									"port": "5055",
									"path": [
										"axis",
										"upi",
										"disburse"
									],
									"query": [
										{
											"key": "customerVpa",
											"value": "jinal.haran@axis"
										},
										{
											"key": "amount",
											"value": "100"
										},
										{
											"key": "remarks",
											"value": "rent"
										},
										{
											"key": "custMobileNumber",
											"value": "9966130709"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To check the disbursed amount status",
							"id": "5c144d59-f718-4b16-a925-cc2b119d670f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{axisURL}}:5055/axis/upi/disburseStatus?txsId=MF1246d2f2f2b14cf2b5af23e8785d9b3e",
									"host": [
										"{{axisURL}}"
									],
									"port": "5055",
									"path": [
										"axis",
										"upi",
										"disburseStatus"
									],
									"query": [
										{
											"key": "txsId",
											"value": "MF1246d2f2f2b14cf2b5af23e8785d9b3e"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To receive the payment",
							"id": "a80d0572-1d92-4401-beef-2efeb9c3b765",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{axisURL}}:5055/axis/upi/collectRequest?customerVpa=jinal.haran@axis&amount=100&unqcustid=MF123456789&unqtxnid=AXI23254323232&txndtl=test",
									"host": [
										"{{axisURL}}"
									],
									"port": "5055",
									"path": [
										"axis",
										"upi",
										"collectRequest"
									],
									"query": [
										{
											"key": "customerVpa",
											"value": "jinal.haran@axis"
										},
										{
											"key": "amount",
											"value": "100"
										},
										{
											"key": "unqcustid",
											"value": "MF123456789"
										},
										{
											"key": "unqtxnid",
											"value": "AXI23254323232"
										},
										{
											"key": "txndtl",
											"value": "test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To check the repayment amount status",
							"id": "b18b0a56-cc93-4520-8dde-102010248414",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{axisURL}}:5055/axis/upi/collectRequestStatus?txsId=AXI23254323232&merchMobileNumber=9966130709",
									"host": [
										"{{axisURL}}"
									],
									"port": "5055",
									"path": [
										"axis",
										"upi",
										"collectRequestStatus"
									],
									"query": [
										{
											"key": "txsId",
											"value": "AXI23254323232"
										},
										{
											"key": "merchMobileNumber",
											"value": "9966130709"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "c1217e84-c156-4815-8920-d8de17507d62",
					"description": "This folder contains Axis UPI, which is used to send and receive payments."
				},
				{
					"name": "SolitX corebanking integration",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60ead33d-2871-421b-a6d8-f8edf100e6ff",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"console.log(jsonData.access_token);",
											"pm.environment.set(\"at\",jsonData.access_token);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8219ed29-7415-48ec-a8c9-f906358dd506",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "web-app"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "grant_type",
										"type": "text",
										"value": "password"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"rootUser\": \"enter sandbox rootuser\",\n    \"userName\": \"enter sandbox username\",\n    \"password\": \"enter sandbox password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:6055/login",
									"host": [
										"{{solitxURL}}"
									],
									"port": "6055",
									"path": [
										"login"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "- The Authorization Service has a single endpoint that requires the user to provide login credentials. When you are authenticated, you will get a JSON Web Token (JWT) that is your authorization key to access every other endpoint."
							},
							"response": []
						},
						{
							"name": "Create profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19455c44-a804-4c4a-bc1c-f97f13a277ec",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"console.log(jsonData.profileID);",
											"pm.environment.set(\"profileID\",jsonData.profileID);",
											"pm.environment.set(\"identifier\",jsonData.identifier);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4ca22635-653b-48d2-97ca-bc56ced7a0eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"FormID\": \"1\",\n    \"Identifier\": \"Leone\",\n    \"Date of birth\": \"1990-02-01\",\n    \"Name\": \"Nathan Harvey\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ProfilesService/profiles?access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ProfilesService",
										"profiles"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "- The endpoint is used for creating a profile ,In general it represents client and other counterparties."
							},
							"response": []
						},
						{
							"name": "Get profile with identifier",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a266368-0f64-441e-9489-cc07792ff49a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c2729681-9f73-4ecf-9b86-a0e17cbcc561",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{solitxURL}}:5050/ProfilesService/profiles?identifier={{identifier}}&access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ProfilesService",
										"profiles"
									],
									"query": [
										{
											"key": "identifier",
											"value": "{{identifier}}"
										},
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "- The endpoint returns data based on the profile identifier provided as a parameter."
							},
							"response": []
						},
						{
							"name": "Create rootuser payment-channel",
							"id": "8c7f6f94-4f5e-445d-81aa-fe82caf52ff6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Identifier\": \"Organization A\",\n    \"Label\": \"Org A/C\",\n    \"Units\": \"INR\",\n    \"AccountCharacteristic\": \"isBank\",\n    \"Type\": \"new\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/PaymentServices/payments/channel/new?access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"PaymentServices",
										"payments",
										"channel",
										"new"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "- The end point allows us to create a payment channel for the root user."
							},
							"response": []
						},
						{
							"name": "Create profile payment-channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a72e385-e25b-4fa0-8ea2-88e5d4a4bc1f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"console.log(jsonData.paymentChannelID);",
											"pm.environment.set(\"paymentChannelID\",jsonData.paymentChannelID);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "660764af-e50e-4d8a-a712-c564687c30be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Identifier\": \"Harvey\",\n  \"Label\": \"Indian rupee\",\n  \"Units\": \"INR\",\n  \"Type\": \"new\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/PaymentServices/payments/channel/profiles/{{profileID}}/new?access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"PaymentServices",
										"payments",
										"channel",
										"profiles",
										"{{profileID}}",
										"new"
									],
									"query": [
										{
											"key": "ProfileID",
											"value": "",
											"disabled": true
										},
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "- The endpoint allows adding new and managing existing payments to profile."
							},
							"response": []
						},
						{
							"name": "Get profile payment-channel",
							"id": "2674dcea-749a-4c16-bf5f-50a2bf347ec5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{solitxURL}}:5050/PaymentServices/payments/channel/profiles/{{profileID}}?access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"PaymentServices",
										"payments",
										"channel",
										"profiles",
										"{{profileID}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "- The endpoint returns all payments linked to a profile ,here profile ID is provided as a parameter."
							},
							"response": []
						},
						{
							"name": "Create product",
							"id": "a828fc37-e70a-4108-b797-ca8ec8b308ee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Selection\": {\n    \"Department\": \"DeptB\",\n    \"ProfitCenter\": \"A\"\n  },\n  \"ProductIdentifier\": \"StraightBond\",\n  \"Terms\": [\n    {\n      \"DayCountConvention\": \"30E/360\",\n      \"CycleOfInterestPayment\": \"(value:Varchar)\",\n      \"StatusDate\": \"(value:TimeStamp)\",\n      \"InitialExchangeDate\": \"(value:TimeStamp)\",\n      \"NominalInterestRate\": \"(value:Real)\",\n      \"NotionalPrincipal\": \"(value:Real)\",\n      \"PremiumDiscountAtIED\": \"(value:Real)\",\n      \"InitialIssueSize\": \"(value:Real)\",\n      \"MaxIssueSize\": \"(value:Real)\",\n      \"ContractDealDate\": \"(value='ACTUS.InitialExchangeDate'- 'Period.1D')\",\n      \"ContractID\": \"(value='System.UUID')\",\n      \"MaturityDate\": \"(value:TimeStamp)\",\n      \"redemptionFixingDate\": \"(value='ACTUS.MaturityDate')\",\n      \"redemptionPaymentDate\": \"(value='ACTUS.MaturityDate'+'Period.5D')\",\n      \"endDate\": \"(value='ACTUS.MaturityDate')\",\n      \"LegalEntityIDRecordCreator\": \"(value='System.RootUserProfileID')\",\n      \"LegalEntityIDCounterparty\": \"(value:ProfileID)\",\n      \"CycleAnchorDateOfInterestPayment\": \"(value:TimeStamp)\",\n      \"RoundingConvention\": \"1\",\n      \"Calender\": \"MondayToFriday\",\n      \"BusinessDayConvention\": \"CSMF\",\n      \"Currency\": \"EUR\",\n      \"ContractType\": \"PAM\",\n      \"ContractRole\": \"RPA\"\n    }\n  ],\n  \"PaymentDetails\": {\n    \"RecordCreatorPaymentChannelID\": \"39f16465-ab89-4fc6-b50b-50413b8e0193\",\n    \"PaymentMethod\": \"billing\",\n    \"CounterpartyPaymentChannelID\": \"(value:PaymentChannelID)\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ProductService/products?access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ProductService",
										"products"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "- A product is a “typed” or “named” template of an ACTUS contract. The product name  \n    is an identifier which is unique within every company. The contract is  \n    described in terms of one or multiple ACTUS contract templates. For each  \n    attribute of a template, according to the ACTUS data dictionary, a template  \n    defines a fixed value or leaves the value open to be entered (possibly with  \n    restrictions) by the contract creator.\n- A product is a JSON data structure with four fields:\n- ProductIdentifier\n- PaymentDetails\n- Terms\n- Selection, where ProductIdentifier defines a unique identifier of the product, PaymentDetails contains mandatory parameters on the payment channels of the two parties involved and the payment method used for settling payments, Terms is a set of ACTUS contract templates constituting the terms of the contracts (including amendments such as custom fee schedules or collaterals, etc.) and Selection possibly containing additional parameters used for querying contracts in analytical or accounting functions (not contractual terms)."
							},
							"response": []
						},
						{
							"name": "Get product with id",
							"id": "75391e64-00be-4586-9245-ffffb3a5eccd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{solitxURL}}:5050/ProductService/products?productID={{productID}}&access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ProductService",
										"products"
									],
									"query": [
										{
											"key": "productID",
											"value": "{{productID}}"
										},
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "- The endpoint returns data based on the product ID provided as a parameter."
							},
							"response": []
						},
						{
							"name": "Create contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e1b08b7f-81c4-43cc-9792-2711275b080e",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"console.log(jsonData.contractUUID);",
											"pm.environment.set(\"contractUUID\",jsonData[0].contractUUID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "72a7a95a-ae36-4a2b-83da-e67da29bd69f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ProductID\": \"1\",\n        \"Terms\": [\n            {\n                \"ProductIdentifier\": \"1\",\n                \"InitialExchangeDate\": \"2023-05-02T06:30:00.000Z\",\n                \"LegalEntityIDCounterparty\": \"{{profileID}}\",\n                \"ContractStatus\": \"PreDeal\"\n            }\n        ],\n        \"PaymentDetails\": {\n            \"CounterpartyPaymentChannelID\": \"{{paymentChannelID}}\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ContractService/contracts?access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ContractService",
										"contracts"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "Creates a new contract based on the product JSON.Contract will be created only if valid data is provided in terms and payment details.\n\nUpon creation of new contract the initial contract schedule is computed according to the contract logic, respective events are stored in the BusinessEvents table. For newly created contract ContractStatus gets updated with 'PreDeal'. ContractStatus which describes the status of executed and \"running\" contracts during their lifecycle.\n\nBelow are the ContractStatus used based on the contract lifecycle:\n\n• **performant** : The contract is active and execution of terms proceeds as agreed.\n\n• **Delinquent** : The contract is active and execution of certain terms is delayed by more than the ACTUS GracePeriod.\n\n• **Default** : The contract is active and execution of certain terms is delayed by more than the ACTUS DelinquencyPeriod."
							},
							"response": []
						},
						{
							"name": "Get contracts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f406da37-5d8e-4373-9830-3af5ed4e69c6",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"console.log(\"ContractID is \" + jsonData[0].terms.Terms[0].ContractID);",
											"pm.environment.set(\"contractID\",jsonData[0].terms.Terms[0].ContractID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d074be59-d354-421e-8d8b-24fc9e83a1dd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ContractService/contracts/?access_token={{at}}&contractUUID={{contractUUID}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ContractService",
										"contracts",
										""
									],
									"query": [
										{
											"key": "contractUUID",
											"value": "77c9c714-291f-4daf-b1bd-c24f21c29e50",
											"disabled": true
										},
										{
											"key": "access_token",
											"value": "{{at}}"
										},
										{
											"key": "contractUUID",
											"value": "{{contractUUID}}"
										}
									]
								},
								"description": "- The endpoint returns contract information based on the contractUUID provided as a parameter.\n- Here we can filter with any terms in the contract ex : contractType=\"PAM\" or StatusDate=\"2022-12-31T23:59:59\""
							},
							"response": []
						},
						{
							"name": "Update contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80aefec4-582a-4959-89eb-ef58f2df54b7",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"console.log(jsonData.contractUUID);",
											"//pm.globals.set(\"contractUUID\",jsonData[0].contractUUID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d262c240-9059-4989-9f4a-534eaeda236e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"ContractUUID\": \"{{contractUUID}}\",\n    \"ProductID\": \"1\",\n    \"Terms\": [\n      {\n        \"LegalEntityIDCounterparty\": \"{{profileID}}\",\n        \"ContractStatus\": \"PreDeal\",\n        \"ContractID\": \"{{contractID}}\"\n      }\n    ],\n    \"PaymentDetails\": {\n      \"CounterpartyPaymentChannelID\": \"{{paymentChannelID}}\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ContractService/contracts?access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ContractService",
										"contracts"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "- The endpoint update the existing contract.Contract will be updated only if valid data is provided in terms and payment details.\n- Only contract with status='PreDeal' can be updated."
							},
							"response": []
						},
						{
							"name": "Compute contract",
							"id": "2195f7b3-73f5-473b-a542-d8fc39f8b1b3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ContractService/contracts/compute?access_token={{at}}&contractUUID={{contractUUID}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ContractService",
										"contracts",
										"compute"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{at}}"
										},
										{
											"key": "contractUUID",
											"value": "{{contractUUID}}"
										}
									]
								},
								"description": "- The endpoint returns expected cashflows based on the contractUUID provided as a parameter. If expected cashflows are matching with the requirement then user can execute contract or else user can update the contract again."
							},
							"response": []
						},
						{
							"name": "Execute contract",
							"id": "e229b0de-e027-4fbc-9b74-71ee14544468",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/ContractService/contracts/execute?access_token={{at}}&contractUUID={{contractUUID}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"ContractService",
										"contracts",
										"execute"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{at}}"
										},
										{
											"key": "contractUUID",
											"value": "{{contractUUID}}"
										}
									]
								},
								"description": "The endpoint returns cashflows based on the contractUUID provided as a parameter. When a contract gets executed the ContractStatus will change from ''PreDeal' to 'performant'.\n\nEach cashflow or event JSON consists of\n\n- event time\n- execution type  \n    - Transaction: events that trigger a transaction\n    - ContractUpdate: events that trigger a (contract) state update\n- status  \n    - A business event can be in status \"scheduled\", \"pending\", or \"processed\"\n- event type  \n    - IP\n    - PR\n    - IED\n    - MD etc\n- event body (JSON)  \n    \n    - For ContractUpdate-type events, the following EventBody is created:  \n        {  \n        ContractID: \\[ Varchar \\],  \n        Terms: \\[ To update specific contract attribute in terms\\]  \n        }\n    - For transaction-type events, the following EventBody is created  \n        {  \n        \"Value\": \\[ event value \\],  \n        \"Units\": \\[ event currency \\],  \n        \"DebitPaymentMethodID\":\\[ payment channel Id of used for debit-side transaction \\]  \n        \"CreditPaymentMethodID\":\\[ payment channel Id of used for credit-side transaction \\]\n\n}"
							},
							"response": []
						},
						{
							"name": "Get events of contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b6b96f0-f251-4fe6-8880-6cf82ca9649e",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"console.log(\"eventID is \" + jsonData[0].eventID);",
											"console.log(\"date is \" + jsonData[0].date);",
											"",
											"console.log(\"Value is \" + jsonData[0].eventBody.Transaction.NominalValue);",
											"",
											"pm.environment.set(\"eventID\",jsonData[0].eventID);",
											"pm.environment.set(\"processTime\",jsonData[0].date);",
											"",
											"pm.environment.set(\"value\",jsonData[0].eventBody.Transaction.NominalValue);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c1bbdd85-b55b-48c0-a088-647101ea79ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{solitxURL}}:5050/BusinessEventService/events?contractUUID={{contractUUID}}&access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"BusinessEventService",
										"events"
									],
									"query": [
										{
											"key": "contractUUID",
											"value": "{{contractUUID}}"
										},
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "- The endpoint returns cashflows based on the contractUUID provided as a parameter."
							},
							"response": []
						},
						{
							"name": "Process event",
							"id": "292653b7-f8aa-499b-a6ed-acafd37426fb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"EventID\": \"{{eventID}}\",\n    \"Value\": {{value}},\n    \"ProcessTime\": \"{{processTime}}\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{solitxURL}}:5050/TransactionsService/process?access_token={{at}}",
									"host": [
										"{{solitxURL}}"
									],
									"port": "5050",
									"path": [
										"TransactionsService",
										"process"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{at}}"
										}
									]
								},
								"description": "- The endpoints will process the events only after all validations are passed , if passed event status get updated with \"processed\" and a new transaction event is stored in transaction table and also update the contract accordingly.\n- EventID,Value and ProcessTime are mandatory fields required for processing the event."
							},
							"response": []
						}
					],
					"id": "4eca449c-433f-4116-aa77-3d1bd5aaca3d"
				},
				{
					"name": "Metaco",
					"item": [
						{
							"name": "Create metaco account",
							"id": "e0bbfa8a-9ed8-4db9-9453-ccdbd8f38e62",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alias\":\"1862c304-22a6-4ea4-bf34-dd0f00292b64\",\n    \"accountId\":\"f9877c17-001d-438c-8f7b-69b110b9d72c\",\n    \"ledgerId\":\"polygon-testnet-mumbai\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://uat.mobilefirstfinance.com:5055/ThirdpartyService/metaco/createAccount?access_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw",
									"protocol": "https",
									"host": [
										"uat",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"metaco",
										"createAccount"
									],
									"query": [
										{
											"key": "access_token",
											"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all accounts",
							"id": "67deee4b-b91d-4271-9971-1e81ec264488",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://uat.mobilefirstfinance.com:5055/ThirdpartyService/metaco/accounts?access_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw",
									"protocol": "https",
									"host": [
										"uat",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"metaco",
										"accounts"
									],
									"query": [
										{
											"key": "access_token",
											"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get account details and balance",
							"id": "591d1ffa-a91f-4565-9b05-d78992bf192b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://uat.mobilefirstfinance.com:5055/ThirdpartyService/metaco/account/balance/123a368c-e185-477c-a182-9e3264fdc6f4?access_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ4MjcwNTgsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiUFJPVklERV9VU0VSUyIsIkdFVF9XT1JLRkxPVyIsIlBST1ZJREVfUFJPRklMRSIsIkVESVRfQVBQUk9WQUxfUFJPRklMRVMiLCJQUk9WSURFX1ZJU0lCTEVfUk9PVFVTRVJTIiwiUFJPVklERV9WRVJJRklFRF9URU1QQVRFX0RFVEFJTFNfQllfV09SS0ZMT1ciLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkdFVF9NRU5VX1JPTEUiLCJBUFBST1ZFRF9QUk9GSUxFUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiVVBEQVRFSU5HX1BST0ZJTEUiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiVVBEQVRFX0NPTlRSQUNUX0ZMQUciLCJPTkJPQVJEX0ZJTFRFUiIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJBVFRBQ0hfV09SS0ZMT1dfVE9fUFJPRklMRSIsIlBST1ZJREVfUFJPRklMRV9CWV9JRCIsIlBST1ZJREVfVVNFUl9ERVRBSUxTIiwiSElFUkFSQ0hZX1NFQVJDSCIsIlZFUklGWV9TQVZFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJTVFJJUEUiLCJET0NVX1NJR04iLCJGT1JHT1RfVVNFUl9QQVNTV09SRCIsIldPUktGTE9XX0NPVU5UIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiR0VUX1dPUktGTE9XX1RFTVBMQVRFX0JZX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIlVQREFURV9URU1QTEFURV9GTEFHIiwiR0VUX1dPUktGTE9XX1RFTVBMQVRFUyIsIkdFVF9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTX0JZX1dPUktGTE9XX1BST0ZJTEVfSUQiLCJVUExPQURfTVVMVElQTEVfRklMRVMiLCJTRVRVIiwiTU9CSUxFX0FQUCIsIlBST1ZJREVfUFJPRklMRV9GT1JNX0JZX0lEIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiWk9PUCIsIlBST1ZJREVfQlJBTkNIX0JZX0JSQU5DSF9MRVZFTCJdLCJqdGkiOiJjNjNkMDZiMC0yZmQ5LTQ3NjctOGVlYy1jODg5NWViMmFiYzkiLCJjbGllbnRfaWQiOiJ3ZWItYXBwIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl19.VEs0XTFj1ZTkmdzuPiUU-9nb_6maIk-ybcEeRFkhIrHujQZXrmq5phAUf77L2dR6tcNQkCN0X_yPdcaJXpDYuLOASJmDr3YYLSUy-jmx0zTlCkZLzGK33xJ9nqPJEdk5y6zfrlplxK55oFB4zagMcidx11y263Z2qIrMhDqB_zKgfGbTxowug__irkbL6574t2BUS_1qNJWUnluYZ4RpGNLlu3MQAMV-ruf1qDCu6uS8oQcEXHNzoDlHOz2LRj344eii4Jh7HrhmH2d-7Z5MDDa0gI37t3s8LAz6ct5O4D8OWXcKNFOWrhqTSnNlqmdNdkH-pBoZxVkkmXYTmKsJQw",
									"protocol": "https",
									"host": [
										"uat",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"metaco",
										"account",
										"balance",
										"123a368c-e185-477c-a182-9e3264fdc6f4"
									],
									"query": [
										{
											"key": "access_token",
											"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ4MjcwNTgsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiUFJPVklERV9VU0VSUyIsIkdFVF9XT1JLRkxPVyIsIlBST1ZJREVfUFJPRklMRSIsIkVESVRfQVBQUk9WQUxfUFJPRklMRVMiLCJQUk9WSURFX1ZJU0lCTEVfUk9PVFVTRVJTIiwiUFJPVklERV9WRVJJRklFRF9URU1QQVRFX0RFVEFJTFNfQllfV09SS0ZMT1ciLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkdFVF9NRU5VX1JPTEUiLCJBUFBST1ZFRF9QUk9GSUxFUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiVVBEQVRFSU5HX1BST0ZJTEUiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiVVBEQVRFX0NPTlRSQUNUX0ZMQUciLCJPTkJPQVJEX0ZJTFRFUiIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJBVFRBQ0hfV09SS0ZMT1dfVE9fUFJPRklMRSIsIlBST1ZJREVfUFJPRklMRV9CWV9JRCIsIlBST1ZJREVfVVNFUl9ERVRBSUxTIiwiSElFUkFSQ0hZX1NFQVJDSCIsIlZFUklGWV9TQVZFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJTVFJJUEUiLCJET0NVX1NJR04iLCJGT1JHT1RfVVNFUl9QQVNTV09SRCIsIldPUktGTE9XX0NPVU5UIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiR0VUX1dPUktGTE9XX1RFTVBMQVRFX0JZX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIlVQREFURV9URU1QTEFURV9GTEFHIiwiR0VUX1dPUktGTE9XX1RFTVBMQVRFUyIsIkdFVF9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTX0JZX1dPUktGTE9XX1BST0ZJTEVfSUQiLCJVUExPQURfTVVMVElQTEVfRklMRVMiLCJTRVRVIiwiTU9CSUxFX0FQUCIsIlBST1ZJREVfUFJPRklMRV9GT1JNX0JZX0lEIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiWk9PUCIsIlBST1ZJREVfQlJBTkNIX0JZX0JSQU5DSF9MRVZFTCJdLCJqdGkiOiJjNjNkMDZiMC0yZmQ5LTQ3NjctOGVlYy1jODg5NWViMmFiYzkiLCJjbGllbnRfaWQiOiJ3ZWItYXBwIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl19.VEs0XTFj1ZTkmdzuPiUU-9nb_6maIk-ybcEeRFkhIrHujQZXrmq5phAUf77L2dR6tcNQkCN0X_yPdcaJXpDYuLOASJmDr3YYLSUy-jmx0zTlCkZLzGK33xJ9nqPJEdk5y6zfrlplxK55oFB4zagMcidx11y263Z2qIrMhDqB_zKgfGbTxowug__irkbL6574t2BUS_1qNJWUnluYZ4RpGNLlu3MQAMV-ruf1qDCu6uS8oQcEXHNzoDlHOz2LRj344eii4Jh7HrhmH2d-7Z5MDDa0gI37t3s8LAz6ct5O4D8OWXcKNFOWrhqTSnNlqmdNdkH-pBoZxVkkmXYTmKsJQw"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve account address",
							"id": "1e835ef4-fcb2-47e9-9982-5bb924081929",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://uat.mobilefirstfinance.com:5055/ThirdpartyService/metaco/accounts/123a368c-e185-477c-a182-9e3264fdc6f4/addresses?access_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ4MjcwNTgsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiUFJPVklERV9VU0VSUyIsIkdFVF9XT1JLRkxPVyIsIlBST1ZJREVfUFJPRklMRSIsIkVESVRfQVBQUk9WQUxfUFJPRklMRVMiLCJQUk9WSURFX1ZJU0lCTEVfUk9PVFVTRVJTIiwiUFJPVklERV9WRVJJRklFRF9URU1QQVRFX0RFVEFJTFNfQllfV09SS0ZMT1ciLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkdFVF9NRU5VX1JPTEUiLCJBUFBST1ZFRF9QUk9GSUxFUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiVVBEQVRFSU5HX1BST0ZJTEUiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiVVBEQVRFX0NPTlRSQUNUX0ZMQUciLCJPTkJPQVJEX0ZJTFRFUiIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJBVFRBQ0hfV09SS0ZMT1dfVE9fUFJPRklMRSIsIlBST1ZJREVfUFJPRklMRV9CWV9JRCIsIlBST1ZJREVfVVNFUl9ERVRBSUxTIiwiSElFUkFSQ0hZX1NFQVJDSCIsIlZFUklGWV9TQVZFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJTVFJJUEUiLCJET0NVX1NJR04iLCJGT1JHT1RfVVNFUl9QQVNTV09SRCIsIldPUktGTE9XX0NPVU5UIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiR0VUX1dPUktGTE9XX1RFTVBMQVRFX0JZX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIlVQREFURV9URU1QTEFURV9GTEFHIiwiR0VUX1dPUktGTE9XX1RFTVBMQVRFUyIsIkdFVF9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTX0JZX1dPUktGTE9XX1BST0ZJTEVfSUQiLCJVUExPQURfTVVMVElQTEVfRklMRVMiLCJTRVRVIiwiTU9CSUxFX0FQUCIsIlBST1ZJREVfUFJPRklMRV9GT1JNX0JZX0lEIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiWk9PUCIsIlBST1ZJREVfQlJBTkNIX0JZX0JSQU5DSF9MRVZFTCJdLCJqdGkiOiJjNjNkMDZiMC0yZmQ5LTQ3NjctOGVlYy1jODg5NWViMmFiYzkiLCJjbGllbnRfaWQiOiJ3ZWItYXBwIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl19.VEs0XTFj1ZTkmdzuPiUU-9nb_6maIk-ybcEeRFkhIrHujQZXrmq5phAUf77L2dR6tcNQkCN0X_yPdcaJXpDYuLOASJmDr3YYLSUy-jmx0zTlCkZLzGK33xJ9nqPJEdk5y6zfrlplxK55oFB4zagMcidx11y263Z2qIrMhDqB_zKgfGbTxowug__irkbL6574t2BUS_1qNJWUnluYZ4RpGNLlu3MQAMV-ruf1qDCu6uS8oQcEXHNzoDlHOz2LRj344eii4Jh7HrhmH2d-7Z5MDDa0gI37t3s8LAz6ct5O4D8OWXcKNFOWrhqTSnNlqmdNdkH-pBoZxVkkmXYTmKsJQw",
									"protocol": "https",
									"host": [
										"uat",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"metaco",
										"accounts",
										"123a368c-e185-477c-a182-9e3264fdc6f4",
										"addresses"
									],
									"query": [
										{
											"key": "access_token",
											"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ4MjcwNTgsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiUFJPVklERV9VU0VSUyIsIkdFVF9XT1JLRkxPVyIsIlBST1ZJREVfUFJPRklMRSIsIkVESVRfQVBQUk9WQUxfUFJPRklMRVMiLCJQUk9WSURFX1ZJU0lCTEVfUk9PVFVTRVJTIiwiUFJPVklERV9WRVJJRklFRF9URU1QQVRFX0RFVEFJTFNfQllfV09SS0ZMT1ciLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkdFVF9NRU5VX1JPTEUiLCJBUFBST1ZFRF9QUk9GSUxFUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiVVBEQVRFSU5HX1BST0ZJTEUiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiVVBEQVRFX0NPTlRSQUNUX0ZMQUciLCJPTkJPQVJEX0ZJTFRFUiIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJBVFRBQ0hfV09SS0ZMT1dfVE9fUFJPRklMRSIsIlBST1ZJREVfUFJPRklMRV9CWV9JRCIsIlBST1ZJREVfVVNFUl9ERVRBSUxTIiwiSElFUkFSQ0hZX1NFQVJDSCIsIlZFUklGWV9TQVZFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJTVFJJUEUiLCJET0NVX1NJR04iLCJGT1JHT1RfVVNFUl9QQVNTV09SRCIsIldPUktGTE9XX0NPVU5UIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiR0VUX1dPUktGTE9XX1RFTVBMQVRFX0JZX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIlVQREFURV9URU1QTEFURV9GTEFHIiwiR0VUX1dPUktGTE9XX1RFTVBMQVRFUyIsIkdFVF9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTX0JZX1dPUktGTE9XX1BST0ZJTEVfSUQiLCJVUExPQURfTVVMVElQTEVfRklMRVMiLCJTRVRVIiwiTU9CSUxFX0FQUCIsIlBST1ZJREVfUFJPRklMRV9GT1JNX0JZX0lEIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiWk9PUCIsIlBST1ZJREVfQlJBTkNIX0JZX0JSQU5DSF9MRVZFTCJdLCJqdGkiOiJjNjNkMDZiMC0yZmQ5LTQ3NjctOGVlYy1jODg5NWViMmFiYzkiLCJjbGllbnRfaWQiOiJ3ZWItYXBwIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl19.VEs0XTFj1ZTkmdzuPiUU-9nb_6maIk-ybcEeRFkhIrHujQZXrmq5phAUf77L2dR6tcNQkCN0X_yPdcaJXpDYuLOASJmDr3YYLSUy-jmx0zTlCkZLzGK33xJ9nqPJEdk5y6zfrlplxK55oFB4zagMcidx11y263Z2qIrMhDqB_zKgfGbTxowug__irkbL6574t2BUS_1qNJWUnluYZ4RpGNLlu3MQAMV-ruf1qDCu6uS8oQcEXHNzoDlHOz2LRj344eii4Jh7HrhmH2d-7Z5MDDa0gI37t3s8LAz6ct5O4D8OWXcKNFOWrhqTSnNlqmdNdkH-pBoZxVkkmXYTmKsJQw"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Transfer funds to accountId",
							"id": "779bc22e-cd37-4000-abd3-c7a91ed68850",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"source\": \"872b7a35-3c1f-485e-b7cf-729b356ac4ef\", // Account ID\n  \"destination\": \"f9877c17-001d-438c-8f7b-69b110b9d72c\", // Account ID\n  \"destinationType\": \"Account\",\n  \"amount\": \"0.01\",\n  \"fees\": \"0.0002\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://uat.mobilefirstfinance.com:5055/ThirdpartyService/metaco/transaction?access_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw",
									"protocol": "https",
									"host": [
										"uat",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"metaco",
										"transaction"
									],
									"query": [
										{
											"key": "access_token",
											"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Transer funds to address",
							"id": "dbc06e28-61b4-424e-8e8f-55d244deb32f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"source\": \"872b7a35-3c1f-485e-b7cf-729b356ac4ef\", // Account ID\n  \"destination\": \"0x8a4f4fc1a89f53ba985477fafb1ec14dfa40c789\", //Wallet ID \n  \"destinationType\": \"Address\",\n  \"amount\": \"0.01\",\n  \"fees\": \"0.0002\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://uat.mobilefirstfinance.com:5055/ThirdpartyService/metaco/transaction?access_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw",
									"protocol": "https",
									"host": [
										"uat",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"metaco",
										"transaction"
									],
									"query": [
										{
											"key": "access_token",
											"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Transfer funds to endpoint",
							"id": "1e750d3a-c759-4f27-a84e-f7e0320cda95",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"source\" : \"872b7a35-3c1f-485e-b7cf-729b356ac4ef\",  // Account ID\n  \"destination\" : \"6b4d29bb-d17b-4ba9-beb7-be3b2411316c\", // Get the end point form harmonize\n  \"destinationType\": \"Endpoint\",\n  \"amount\": \"0.01\",\n  \"fees\": \"0.0002\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://backoffice.mobilefirstfinance.com:5055/ThirdpartyService/metaco/transaction?access_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODUwMDc4NDMsInVzZXJfbmFtZSI6ImY1NWFkMTEzLTFhMWItNDc1Yy05YTYxLTQ0YjdjOTBkMDVkZSxVU0VSLDU2YmYzZTNkLWRlY2MtNDFkOC04ODc3LWUxMDE2YzBhZjM4ZSw1MDU1LGJhY2tvZmZpY2UubW9iaWxlZmlyc3RmaW5hbmNlLmNvbSIsImF1dGhvcml0aWVzIjpbIlVQREFURV9DQVJEX1NUQVRVUyIsIkdFVF9XT1JLRkxPVyIsIlNBVkVfUE9SVEZPTElPX1JFUEFZTUVOVF9ERVRBSUxTIiwiUFJPVklERV9CUkFOQ0hFU19CWV9ISUVSQVJDSFkiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDSEFOR0VfVVNFUl9QQVNTV09SRCIsIkFQUFJPVkVEX1BST0ZJTEVTIiwiR0VUX1VOX0xJTktFRF9QUk9GSUxFUyIsIkFQUExZX0NBUkQiLCJVUExPQURfQUdSRUVNRU5UX1RFTVBMQVRFIiwiVVBEQVRFX0NPTlRSQUNUX0ZMQUciLCJHRVRfRVZFTlRTX0JZX0NPTlRSQUNUVVVJRCIsIlBST1ZJREVfQlJBTkNIX0JZX0JSQU5DSF9JRCIsIkFUVEFDSF9XT1JLRkxPV19UT19QUk9GSUxFIiwiUFJPVklERV9BVURJVF9EQVRBIiwiUFJPVklERV9QUk9GSUxFX0JZX0lEIiwiUFJPVklERV9VU0VSX0RFVEFJTFMiLCJTVFJJUEUiLCJET0NVX1NJR04iLCJGT1JHT1RfVVNFUl9QQVNTV09SRCIsIldPUktGTE9XX0NPVU5UIiwiU1BFTkRfQU5BTFlTRVIiLCJQUk9WSURFX1RSRUVfTEVWRUxfQlJBTkNIX0JZX0JSQU5DSF9JRCIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiR0VUX1dPUktGTE9XX1RFTVBMQVRFX0JZX0lEIiwiR0VUX0NPTlRSQUNUU19CWV9DT05UUkFDVFVVSUQiLCJQUk9WSURFX1VQTE9BREVEX0ZJTEVTIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJQUk9WSURFX1RSRUVfSElSQVJDSFlfTEVWRUwiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiT05CT0FSRF9DT1VOVCIsIlBST1ZJREVfQlJBTkNIX0JZX0JSQU5DSF9MRVZFTCIsIlBST1ZJREVfVVNFUlMiLCJQUk9WSURFX1ZJU0lCTEVfUk9PVFVTRVJTIiwiUFJPVklERV9WRVJJRklFRF9URU1QQVRFX0RFVEFJTFNfQllfV09SS0ZMT1ciLCJQUk9WSURFX0JSQU5DSCIsIlBST1ZJREVfQlJBTkNIRVNfQllfVFJFRV9ISUVSQVJDSFkiLCJHRVRfTUVOVV9ST0xFIiwiREVMSU5RVUVOQ1lfUkVQT1JUIiwiVVBEQVRFSU5HX1BST0ZJTEUiLCJHRVRfQ0FSRFMiLCJPTkJPQVJEX0ZJTFRFUiIsIlVQREFURV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiTk9USUZJQ0FUSU9OUyIsIlRSQU5TQUNUSU9OX0hJU1RPUlkiLCJISUVSQVJDSFlfU0VBUkNIIiwiVkVSSUZZX1NBVkVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIlBST1ZJREVfUFJPRklMRV9GT1JNIiwiR0VUX1dPUktGTE9XX0JZX0lEIiwiUFJPVklERV9MSU5LRURfVVNFUl9UT19CUkFOQ0giLCJVUERBVEVfVEVNUExBVEVfRkxBRyIsIkdFVF9XT1JLRkxPV19URU1QTEFURVMiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiWk9PUCIsIkFUVEFDSF9MSU5LRURfVVNFUl9UT19QT1JURk9MSU8iXSwianRpIjoiZTEzZWE1ODItMThmNC00ODg4LWE4MjYtOWM4MWMxOGRlNjM0IiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.Fqyy8TvPBD4uuvfb35oIz-sBeSImwUBGOATrPpTP8pnO2LCNu0BngR1x__EzDxarDVN_N0D6BbFoLrGAgXTl-xAh5yaoA4cdoI9PyQSVn81_FPZPFNnn6I7Y5IuF1Q9YUVEh3Jtg9dsPx4sg3nk4-wEH_OiW3d2KpcViu72EC3sIMmAOwb2p9ektC0U6YnveWyevnm7Lzr4HpAE7LsmVaNJaq5GXOw4qO8Dgjs2hvmLT8LCwwPttSda79EKlJC2phdjFhWNvtBksQc4XUxjyGInVjvj2KN4xYiJq6aEKvQRVP6UGkLJnUVtkflqun5Qi0pqu3hjC9ap4EjenFO2-8A",
									"protocol": "https",
									"host": [
										"backoffice",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"metaco",
										"transaction"
									],
									"query": [
										{
											"key": "access_token",
											"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODUwMDc4NDMsInVzZXJfbmFtZSI6ImY1NWFkMTEzLTFhMWItNDc1Yy05YTYxLTQ0YjdjOTBkMDVkZSxVU0VSLDU2YmYzZTNkLWRlY2MtNDFkOC04ODc3LWUxMDE2YzBhZjM4ZSw1MDU1LGJhY2tvZmZpY2UubW9iaWxlZmlyc3RmaW5hbmNlLmNvbSIsImF1dGhvcml0aWVzIjpbIlVQREFURV9DQVJEX1NUQVRVUyIsIkdFVF9XT1JLRkxPVyIsIlNBVkVfUE9SVEZPTElPX1JFUEFZTUVOVF9ERVRBSUxTIiwiUFJPVklERV9CUkFOQ0hFU19CWV9ISUVSQVJDSFkiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDSEFOR0VfVVNFUl9QQVNTV09SRCIsIkFQUFJPVkVEX1BST0ZJTEVTIiwiR0VUX1VOX0xJTktFRF9QUk9GSUxFUyIsIkFQUExZX0NBUkQiLCJVUExPQURfQUdSRUVNRU5UX1RFTVBMQVRFIiwiVVBEQVRFX0NPTlRSQUNUX0ZMQUciLCJHRVRfRVZFTlRTX0JZX0NPTlRSQUNUVVVJRCIsIlBST1ZJREVfQlJBTkNIX0JZX0JSQU5DSF9JRCIsIkFUVEFDSF9XT1JLRkxPV19UT19QUk9GSUxFIiwiUFJPVklERV9BVURJVF9EQVRBIiwiUFJPVklERV9QUk9GSUxFX0JZX0lEIiwiUFJPVklERV9VU0VSX0RFVEFJTFMiLCJTVFJJUEUiLCJET0NVX1NJR04iLCJGT1JHT1RfVVNFUl9QQVNTV09SRCIsIldPUktGTE9XX0NPVU5UIiwiU1BFTkRfQU5BTFlTRVIiLCJQUk9WSURFX1RSRUVfTEVWRUxfQlJBTkNIX0JZX0JSQU5DSF9JRCIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiR0VUX1dPUktGTE9XX1RFTVBMQVRFX0JZX0lEIiwiR0VUX0NPTlRSQUNUU19CWV9DT05UUkFDVFVVSUQiLCJQUk9WSURFX1VQTE9BREVEX0ZJTEVTIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJQUk9WSURFX1RSRUVfSElSQVJDSFlfTEVWRUwiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiT05CT0FSRF9DT1VOVCIsIlBST1ZJREVfQlJBTkNIX0JZX0JSQU5DSF9MRVZFTCIsIlBST1ZJREVfVVNFUlMiLCJQUk9WSURFX1ZJU0lCTEVfUk9PVFVTRVJTIiwiUFJPVklERV9WRVJJRklFRF9URU1QQVRFX0RFVEFJTFNfQllfV09SS0ZMT1ciLCJQUk9WSURFX0JSQU5DSCIsIlBST1ZJREVfQlJBTkNIRVNfQllfVFJFRV9ISUVSQVJDSFkiLCJHRVRfTUVOVV9ST0xFIiwiREVMSU5RVUVOQ1lfUkVQT1JUIiwiVVBEQVRFSU5HX1BST0ZJTEUiLCJHRVRfQ0FSRFMiLCJPTkJPQVJEX0ZJTFRFUiIsIlVQREFURV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiTk9USUZJQ0FUSU9OUyIsIlRSQU5TQUNUSU9OX0hJU1RPUlkiLCJISUVSQVJDSFlfU0VBUkNIIiwiVkVSSUZZX1NBVkVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIlBST1ZJREVfUFJPRklMRV9GT1JNIiwiR0VUX1dPUktGTE9XX0JZX0lEIiwiUFJPVklERV9MSU5LRURfVVNFUl9UT19CUkFOQ0giLCJVUERBVEVfVEVNUExBVEVfRkxBRyIsIkdFVF9XT1JLRkxPV19URU1QTEFURVMiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiWk9PUCIsIkFUVEFDSF9MSU5LRURfVVNFUl9UT19QT1JURk9MSU8iXSwianRpIjoiZTEzZWE1ODItMThmNC00ODg4LWE4MjYtOWM4MWMxOGRlNjM0IiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.Fqyy8TvPBD4uuvfb35oIz-sBeSImwUBGOATrPpTP8pnO2LCNu0BngR1x__EzDxarDVN_N0D6BbFoLrGAgXTl-xAh5yaoA4cdoI9PyQSVn81_FPZPFNnn6I7Y5IuF1Q9YUVEh3Jtg9dsPx4sg3nk4-wEH_OiW3d2KpcViu72EC3sIMmAOwb2p9ektC0U6YnveWyevnm7Lzr4HpAE7LsmVaNJaq5GXOw4qO8Dgjs2hvmLT8LCwwPttSda79EKlJC2phdjFhWNvtBksQc4XUxjyGInVjvj2KN4xYiJq6aEKvQRVP6UGkLJnUVtkflqun5Qi0pqu3hjC9ap4EjenFO2-8A"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Release quarantine funds",
							"id": "9ba5cad3-a78f-4371-9171-500281e571c3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountId\" : \"f9877c17-001d-438c-8f7b-69b110b9d72c\",\n    \"transferIds\" : [\"5d069269-fcbe-4712-a970-5d5f159065d3\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://uat.mobilefirstfinance.com:5055/ThirdpartyService/releaseFunds?access_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw",
									"protocol": "https",
									"host": [
										"uat",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"releaseFunds"
									],
									"query": [
										{
											"key": "access_token",
											"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get estimated fees",
							"id": "cca80406-fe87-487e-a3ec-8a0a8d9f3272",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"source\": \"872b7a35-3c1f-485e-b7cf-729b356ac4ef\", // Account ID\n  \"destination\": \"f9877c17-001d-438c-8f7b-69b110b9d72c\", // Account ID\n  \"destinationType\": \"Account\",\n  \"amount\": \"0.002\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://uat.mobilefirstfinance.com:5055/ThirdpartyService/metaco/estimatedFee?access_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw",
									"protocol": "https",
									"host": [
										"uat",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"metaco",
										"estimatedFee"
									],
									"query": [
										{
											"key": "access_token",
											"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get transactions statement of account",
							"id": "a728657c-3ff1-4b8f-a8e3-fa58c9fafcf0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://uat.mobilefirstfinance.com:5055/ThirdpartyService/metaco/transactions/872b7a35-3c1f-485e-b7cf-729b356ac4ef/statement?access_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw&limit=20",
									"protocol": "https",
									"host": [
										"uat",
										"mobilefirstfinance",
										"com"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"metaco",
										"transactions",
										"872b7a35-3c1f-485e-b7cf-729b356ac4ef",
										"statement"
									],
									"query": [
										{
											"key": "access_token",
											"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ5Mzk4MDEsInVzZXJfbmFtZSI6ImMwNGJjMGUzLTRjMGUtNDhjMS05ZDVlLTg4OTkzOTZjMzg0NyxVU0VSLDQ4MTBmZGQwLTA2YjctNDE3Yy1iOWE5LTlkZWJhYzNhZWY4Yiw1MDU1LHVhdC5tb2JpbGVmaXJzdGZpbmFuY2UuY29tIiwiYXV0aG9yaXRpZXMiOlsiR0VUX1dPUktGTE9XIiwiU0FWRV9QT1JURk9MSU9fUkVQQVlNRU5UX0RFVEFJTFMiLCJVUERBVEVfQ0FSRF9TVEFUVVMiLCJQUk9WSURFX1BST0ZJTEUiLCJFRElUX0FQUFJPVkFMX1BST0ZJTEVTIiwiR0VUX1NBVklOR19DT05UUkFDVFMiLCJMSU5LX1BST0ZJTEUiLCJDUkVBVEVfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMUyIsIkNIQU5HRV9VU0VSX1BBU1NXT1JEIiwiQVBQUk9WRURfUFJPRklMRVMiLCJHRVRfVU5fTElOS0VEX1BST0ZJTEVTIiwiQVBQTFlfQ0FSRCIsIlVQREFURV9DT05UUkFDVF9GTEFHIiwiVVBMT0FEX0FHUkVFTUVOVF9URU1QTEFURSIsIkdFVF9FVkVOVFNfQllfQ09OVFJBQ1RVVUlEIiwiQVRUQUNIX1dPUktGTE9XX1RPX1BST0ZJTEUiLCJQUk9WSURFX1BST0ZJTEVfQllfSUQiLCJQUk9WSURFX1VTRVJfREVUQUlMUyIsIlNUUklQRSIsIkRPQ1VfU0lHTiIsIldPUktGTE9XX0NPVU5UIiwiRk9SR09UX1VTRVJfUEFTU1dPUkQiLCJTUEVORF9BTkFMWVNFUiIsIkNIRUNLX0JBTEFOQ0UiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9URU1QTEFURV9ERVRBSUxTX0lEIiwiUFJPVklERV9VUExPQURFRF9GSUxFUyIsIkdFVF9DT05UUkFDVFNfQllfQ09OVFJBQ1RVVUlEIiwiR0VUX0FHUkVFTUVOVF9URU1QTEFURVMiLCJMSU5LX0NBUkQiLCJQUk9WSURFX1BST0ZJTEVfRk9STV9CWV9JRCIsIkRPV05MT0FEX1VQTE9BRF9GSUxFIiwiUFJPVklERV9CUkFOQ0hfQllfQlJBTkNIX0xFVkVMIiwiUFJPVklERV9VU0VSUyIsIlBST1ZJREVfVklTSUJMRV9ST09UVVNFUlMiLCJQUk9WSURFX1ZFUklGSUVEX1RFTVBBVEVfREVUQUlMU19CWV9XT1JLRkxPVyIsIkdFVF9NRU5VX1JPTEUiLCJVUERBVEVJTkdfUFJPRklMRSIsIkdFVF9DQVJEUyIsIk9OQk9BUkRfRklMVEVSIiwiVVBEQVRFX1dPUktGTE9XX1RFTVBMQVRFX0RFVEFJTFMiLCJOT1RJRklDQVRJT05TIiwiVFJBTlNBQ1RJT05fSElTVE9SWSIsIkhJRVJBUkNIWV9TRUFSQ0giLCJWRVJJRllfU0FWRV9XT1JLRkxPV19URU1QTEFURV9ERVRBSUxTIiwiUFJPVklERV9QUk9GSUxFX0ZPUk0iLCJHRVRfV09SS0ZMT1dfQllfSUQiLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVTIiwiVVBEQVRFX1RFTVBMQVRFX0ZMQUciLCJHRVRfV09SS0ZMT1dfVEVNUExBVEVfREVUQUlMU19CWV9XT1JLRkxPV19QUk9GSUxFX0lEIiwiU0NPUkVNRSIsIlVQTE9BRF9NVUxUSVBMRV9GSUxFUyIsIlNFVFUiLCJNT0JJTEVfQVBQIiwiQVRUQUNIX0xJTktFRF9VU0VSX1RPX1BPUlRGT0xJTyIsIlpPT1AiXSwianRpIjoiNjMzYWMzZjctMDQ0ZC00MmFjLThkYjMtNDViMmZlMjMzMGUxIiwiY2xpZW50X2lkIjoid2ViLWFwcCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.FUslJrnDkpFtL3m2MmxlAEmCMkmd4EWEPZYfwJobr7W7aAYltOpJi6uA8jy3O0X0Ia90JAACNpVhb04jCc_i9S_w8q14xNPCX1mlYT62pA4-WpsjNixrz0zWJagki8brkithuX1fvfn7aIbj2tU1ATUfcCKOrUtaLYFq8lWeOncWlJK8lDn5Xx9rJn7JKI-k_N8IjjT_zdZgpPzGdNggC6l0s2EywtUjABbjogGYYsgr7PwWxKr4Ot_wBZbd6YrVALONAWE5BXrUi2IugR4rqoQg581pdSi3CgjpWLgK2DhPNWs_FJxyFCCHrE55p765J0R_4Du2otQ_bkmsoEsZkw"
										},
										{
											"key": "limit",
											"value": "20"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "44b4b7da-dc14-4748-bf32-6c940ec70a0c"
				}
			],
			"id": "437f7d30-09df-4e3f-ae64-247883eedab7",
			"description": "Secure 3rd party API integrations enable communication between the core system and capabilities with external eco-system partners."
		},
		{
			"name": "Client mobile app",
			"item": [
				{
					"name": "Client sign up",
					"item": [
						{
							"name": "Mobile number and Email Id validation",
							"item": [
								{
									"name": "Mobile number validation",
									"id": "32174deb-7122-4ae9-bd1a-f619f69be05a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Mobile Number\": \"Enter a valid mobile number with country code\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{clientmobileappURL}}:7190/mff/api/userValidation",
										"description": "- Using this service, we can validate a mobile number, whether it is an existing one or a new one."
									},
									"response": []
								},
								{
									"name": "Email Id validation",
									"id": "9a3479b2-e4f0-405d-a338-4630d1be3d10",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Email\": \"provide a valid email id\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{clientmobileappURL}}:7190/mff/api/userValidation",
										"description": "- Using this service, we can validate an email ID, whether it is an existing one or a new one."
									},
									"response": []
								}
							],
							"id": "73a8ba35-160e-4dd9-be33-bad070e6df4b"
						},
						{
							"name": "Get client sign up form",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df429049-5cbc-4899-b391-b4e0cd1d9cbd",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var userFormTemplateID = jsonResponse.userFormTemplateID;",
											"console.log(\"userformtemplateID...\"+jsonResponse.userFormTemplateID)",
											"pm.environment.set(\"userformtemplateID\",jsonResponse.userFormTemplateID );",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b02e8aed-ba8f-4411-801d-615fe297a6da",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{clientmobileappURL}}:7190/mff/api/clientUserform/Customer",
								"description": "- Using this service, we can fetch the client sign-up form."
							},
							"response": []
						},
						{
							"name": "Signing up a new client",
							"id": "f3d6ad0a-2791-4afe-bdff-d1b68f9a3373",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Domicile\": \"enter domicile\",\r\n  \"Identifier\": \"enter a unique identifier\",\r\n  \"User Password\": \"enter a 6 digit pin\",\r\n  \"National ID\": \"enter a valid national id\",\r\n  \"First Name\": \"enter first name\",\r\n  \"Last Name\": \"enter last name\",\r\n  \"Date of Birth\": \"yyyy-mm-dd\",\r\n  \"Mobile Number\": \"enter a valid mobile number\",\r\n  \"Email\": \"enter a valid email id\",\r\n  \"FormID\": {{userformtemplateID}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{clientmobileappURL}}:7190/mff/api/createClientUser",
								"description": "- To complete the customer sign-up process, use the default customer sign-up form below.\n- All of the keys mentioned are required, and most of them are unique.\n- The **FormID** mentioned in the payload belongs to the default user form for customer signup, and it is mandatory to mention.\n- **Identifier** - **enter a unique identifier and the data should be in varchar.**\n- **User Password - user password should be a 6 digit pin number.**\n- **Date of Birth - enter date of birth in yyyy-mm-dd format.**"
							},
							"response": []
						}
					],
					"id": "8571d921-aef9-4995-ac87-fed070a7c910",
					"description": "- This service is used to register a new client.\n- Firstly define a new environment variable for the mobile app URL and make it active.\n- Check out the Defining environment variables section for how to define a new environment.\n- Set the environment to the mobile app URL, and then proceed to the signup step."
				},
				{
					"name": "Authorization",
					"item": [
						{
							"name": "Login with mobile number",
							"item": [
								{
									"name": "Send OTP",
									"id": "c05bb72d-9233-4449-bbd4-6090792e470c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{clientmobileappURL}}:5055/LoginService/verify/phoneNumber?phoneNumber=+919392256334",
											"host": [
												"{{clientmobileappURL}}"
											],
											"port": "5055",
											"path": [
												"LoginService",
												"verify",
												"phoneNumber"
											],
											"query": [
												{
													"key": "phoneNumber",
													"value": "+919392256334"
												}
											]
										},
										"description": "- Using this service, we can send an OTP to a specific mobile number to perform 2FA."
									},
									"response": []
								},
								{
									"name": "Verify OTP",
									"id": "ba9da0d2-36b7-4ca5-94be-15c740822079",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mobileNumber\": \"Enter mobile number with country code.\",\n  \"otp\": \"Enter 6-digit OTP sent to mobile number.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{clientmobileappURL}}:5055/LoginService/login",
										"description": "- Using this service, we can perform OTP verification that is received on a mobile number."
									},
									"response": []
								}
							],
							"id": "0ef87a63-e8f1-4dee-aa8d-869688a6b5dc",
							"description": "This folder consists of services that used to perform 2FA via mobile number."
						},
						{
							"name": "Login with username and password",
							"item": [
								{
									"name": "Login with username and password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "910c4114-43ad-4437-a45d-01e406bb3e3e",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"var jsonValue = jsonData.body;",
													"pm.globals.set(\"clientmobiletoken\", jsonValue.access_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "82e87cbf-9cc1-4754-89fc-54130b891620",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rootUser\": \"enter sandbox rootuser\",\n  \"userName\": \"enter sandbox username\",\n  \"password\": \"enter sandbox password\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{clientmobileappURL}}:5055/LoginService/login",
										"description": "- Using this service, we can get access to the application with a user name and password."
									},
									"response": []
								}
							],
							"id": "0ac09714-0d15-46c5-8939-c12dc740aae5",
							"description": "- Using this service, we can gain access to the customer application. Include in the payload the freshly created customer credentials.\n- Note : The Identifier that we provide in the signup form will act as the userName in the login form."
						}
					],
					"id": "f1e94e9e-80dd-4b6d-af9c-4ccbb1ac8269",
					"description": "This service is used to perform customer authentication."
				},
				{
					"name": "Client onboarding",
					"item": [
						{
							"name": "Fetch all the available workflows",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bfd76119-a562-4fd8-9013-abd20bee4aeb",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.workflow)",
											"var workflow=jsonData.workflow",
											"console.log(\"mobileappworkflowid...\"+workflow[13].workFlowID)",
											"pm.globals.set(\"mobileappworkflowid\", workflow[13].workFlowID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3c1978b5-d640-4697-9834-4c36b0c8b74b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/workflows?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflows"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the list of available workflows.\n- Run this service just once since it has a test script defined to fetch a specific workflow and turn the workflow id into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Fetch all the workflow templates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7da9760f-cb50-4435-b6d5-4c5cdeddb587",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var workflow=jsonData.workflow",
											"console.log(\"workflow...\"+jsonData.workflow)",
											"var templateid=workflow[39].templateID",
											"console.log(\"mobileappworkflowtemplateid...\"+workflow[39].templateID)",
											"pm.globals.set(\"mobileappworkflowtemplateid\",workflow[39].templateID );",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "79dbecf1-4f9f-4dfa-960e-22c53603abc4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/workflowTemplates?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowTemplates"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the list of available workflow templates.\n- Using this service we can fetch the template id which is necessary to verify the workflow template details.\n- Run this service just once since it has a test script defined to fetch a specific workflow template id and turn the template id into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Fetch the profile details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2ff35e6-fb62-432e-8021-9a2dd50ce2fc",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"console.log(\"jsonData...\"+jsonData.profiles)",
											"var profiles=jsonData.profiles",
											"console.log(\"mobileappprofileid...\"+profiles[0].profileID)",
											"pm.globals.set(\"mobileappprofileid\", profiles[0].profileID);",
											"console.log(\"mobileapplinkedprofileid...\"+profiles[0].linkedProfileID)",
											"pm.globals.set(\"mobileapplinkedprofileid\", profiles[0].linkedProfileID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "753608d5-b529-41ad-935a-94816fa1f4c6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/ProfileService/profiles?pageNumber=0&numberOfRecords=10&access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"ProfileService",
										"profiles"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service, we can fetch the logged-in user's profile details.\n- Run this service just once since it has a test script defined to turn the profile id into a global variable so that other necessary services can utilize it."
							},
							"response": []
						},
						{
							"name": "Link client to a workflow",
							"id": "310e8072-2102-4c4e-9281-6edd97ff3b62",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"profileDetails\": [\n    {\n      \"profileID\": \"e8ce3778-5b9c-4bfb-ab06-44c08330c76a\"\n   \n    }\n  ],\n  \"workFlowID\": 1537895\n}\n//Look for the \"profileid\" & \"workflowid\" in the \"Globals\" under the \"Environment quick look.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/workflowToProfiles?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowToProfiles"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can link a profile to the workflow.\n- For linking the profile to a specific workflow we have to mention both the profileID and the workFlowID in the payload. Check the below json payload for detail.\n- Click on the Environment quick look in the right top corner and navigate to Globals to find the generated **mobileappprofileid** and **mobileappworkflowid**.\n- Note : To fetch the **mobileappprofileid**, run the service **Fetch the profile details** and to fetch the **mobileappworkflowid**, run the service **Fetch all the available workflows**."
							},
							"response": []
						},
						{
							"name": "To fetch the onboarded workflow details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a173fd87-be4a-4299-a6b7-cdc5df2cf385",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var workflow=jsonData.workflow",
											"console.log(\"workflow...\"+jsonData.workflow)",
											"",
											"var workFlowTemplateDetails=workflow.workFlowTemplateDetails",
											"console.log(\"workFlowTemplateDetails...\"+workflow.workFlowTemplateDetails)",
											"",
											"",
											"",
											"",
											"",
											"var workflowProfileID=workflow.workflowProfileID",
											"console.log(\"mobileworkflowprofileid...\"+workflow.workflowProfileID)",
											"pm.globals.set(\"mobileworkflowprofileid\",workflow.workflowProfileID );"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "98409784-2e4c-4e81-adc0-1eb2d5dfb9ea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/mobileApp/{{mobileappprofileid}}?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"mobileApp",
										"{{mobileappprofileid}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can fetch the onboarded workflow details.\n- **Note** : Run this service once before proceeding to the next service."
							},
							"response": []
						},
						{
							"name": "Get workflow templates based on workflow id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02a36253-01ff-46fb-885d-5cea45404ebd",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);\r",
											"console.log(\"jsonResponse...\"+jsonResponse)\r",
											"var jsonData = jsonResponse.data;\r",
											"\r",
											"var workflow=jsonData.workflow\r",
											"console.log(\"workflow...\"+jsonData.workflow)\r",
											"\r",
											"var num=workflow[\"1595354\"]\r",
											"console.log(\"num...\"+workflow[\"1595354\"])\r",
											"\r",
											"var numdata = num[0].detailsID\r",
											"console.log(\"clientmobiletemplatedetailsid...\"+num[0].detailsID)\r",
											"pm.globals.set(\"clientmobiletemplatedetailsid\",num[0].detailsID );\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"// var templateid=workflow[39].templateID\r",
											"// console.log(\"templateid...\"+workflow[39].templateID)\r",
											"// pm.globals.set(\"templateid\",workflow[39].templateID );\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "736e314b-b457-42f2-bf97-8dec6236fc75",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/workflow/workflowTemplateDetails/{{mobileappworkflowid}}/No?&numberOfRecords=10&pageNumber=0&access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflow",
										"workflowTemplateDetails",
										"{{mobileappworkflowid}}",
										"No"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										},
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can fetch the workflow template details.\n- Note : Run this service once before proceeding to the next service."
							},
							"response": []
						},
						{
							"name": "To save the details in the workflow template",
							"id": "6794939e-b4d1-4050-86a1-5aca648e6488",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"I Agree the terms and conditions\": \"Yes\"\r\n}\r\n\r\n// Mention the value as \"Yes\" or \"No.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientmobileappURL}}:5055/WorkflowService/workflowTemplateDetails/{{clientmobiletemplatedetailsid}}?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"WorkflowService",
										"workflowTemplateDetails",
										"{{clientmobiletemplatedetailsid}}"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service, we can update workflow template details based on workflow template details id.\n- Mention the payload according to the workflow template and provide the necessary value.\n- The workflow template details id will be retrieved and applied to the service from **Get workflow templates based on workflow id.**"
							},
							"response": []
						}
					],
					"id": "3dacd57c-073f-4ee1-9bc7-d16e7cce6ed8",
					"description": "Consist of a list of services which are used for the customer onboarding."
				},
				{
					"name": "Accounts",
					"item": [
						{
							"name": "To view the contracts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2173295-b2f0-401e-bfd2-d85372c17aad",
										"exec": [
											"var jsonResponse = JSON.parse(responseBody);",
											"console.log(\"jsonResponse...\"+jsonResponse)",
											"var jsonData = jsonResponse.data;",
											"var portfolio=jsonData.portfolio",
											"console.log(\"portfolio...\"+jsonData.portfolio)",
											"var contractuuid=portfolio[0].contractUUID",
											"console.log(\"mobilecontractuuid...\"+portfolio[0].contractUUID)",
											"pm.globals.set(\"mobilecontractuuid\", portfolio[0].contractUUID);",
											"console.log(\"mobileproductname...\"+portfolio[0].productName)",
											"console.log(\"mobilecontractid...\"+portfolio[0].contractID)",
											"pm.globals.set(\"mobileproductname\", portfolio[0].productName);",
											"pm.globals.set(\"mobilecontractid\", portfolio[0].contractID);",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b78dff09-6a0b-4461-bbee-7d18b4237ffd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/PortfolioService/Contracts?linkedProfileId={{mobileapplinkedprofileid}}&access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"Contracts"
									],
									"query": [
										{
											"key": "linkedProfileId",
											"value": "{{mobileapplinkedprofileid}}"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can fetch the list of contracts for a profile.\n- Note : Only approved profiles will have a linkedprofileid generated.\n- Re run the service **Fetch the profile details** again to obtain the linked profile id and get it automatically applied to the service."
							},
							"response": []
						},
						{
							"name": "To perform the transaction",
							"id": "1138ffa7-db41-4029-9a21-06e471ddf755",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contractUUID\": \"118270d6-70f4-4038-9fab-ac8c9895b662\",\n  \"type\": \"PI\",\n  \"value\": 5000,\n  \"paymentType\": \"stripe\",\n  \"triggerType\": \"deposit\"\n}\n\n// Look for the generated contractuuid in the \"Globals\" under the \"Environment quick look\" and mention it in the \"contractUUID\" value.\n// Mention the \"type\" as \"PI\" and the \"paymentType\" as \"stripe.\"\n// Mention the amount in the \"value.\"\n// Mention the \"triggerType\" as either \"deposit\" or \"withdraw.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientmobileappURL}}:5055/SolitxService/payment/link?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"SolitxService",
										"payment",
										"link"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can perform a transaction."
							},
							"response": []
						},
						{
							"name": "To view the transaction history",
							"id": "27c905b7-e1ef-4097-b399-e5ddf56f8d83",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/PortfolioService/transactionHistory?contractUUID={{mobilecontractuuid}}&access_token={{clientmobiletoken}}&repaymentType=Yes",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"transactionHistory"
									],
									"query": [
										{
											"key": "contractUUID",
											"value": "{{mobilecontractuuid}}"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										},
										{
											"key": "repaymentType",
											"value": "Yes"
										}
									]
								},
								"description": "- Using this service we can view the transaction history."
							},
							"response": []
						},
						{
							"name": "To view the pending events of contract",
							"id": "1a9899ad-9cf7-41d8-ac71-d5c482c88d50",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/PortfolioService/geteventsBycontractUUID?access_token={{clientmobiletoken}}&contractUUID={{mobilecontractuuid}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"geteventsBycontractUUID"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										},
										{
											"key": "contractUUID",
											"value": "{{mobilecontractuuid}}"
										}
									]
								},
								"description": "- Using this service we can view the pending repayments of contract."
							},
							"response": []
						},
						{
							"name": "To view the contract terms",
							"id": "f44d067d-2f2a-4da0-819e-81796967adac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/PortfolioService/getcontractsBycontractUUID?contractUUID={{mobilecontractuuid}}&access_token={{clientmobiletoken}}&pageNumber=0&numberOfRecords=10",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"getcontractsBycontractUUID"
									],
									"query": [
										{
											"key": "contractUUID",
											"value": "{{mobilecontractuuid}}"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										},
										{
											"key": "pageNumber",
											"value": "0"
										},
										{
											"key": "numberOfRecords",
											"value": "10"
										}
									]
								},
								"description": "- Using this service we can view the terms of a contract."
							},
							"response": []
						}
					],
					"id": "4722b014-b557-432a-80f2-38496dccc229",
					"description": "This folder consists of services that are used to view the contracts and their transaction histories."
				},
				{
					"name": "Cards",
					"item": [
						{
							"name": "Apply for a card",
							"id": "a8afdc0d-e9b6-4323-a7fa-c6be3402fff6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cardDetails\": [\n    {\n      \"contractID\": \"GMF/165479-1\",\n      \"contractUUID\": \"6aacb8f5-ec6e-4144-9fe8-cc150f3496b5\",\n      \"linkedProfileId\": \"05597611-2dc9-41ee-ac9f-30111317ec58\",\n      \"productName\": \"Go savings\",\n      \"status\": \"apply\"\n    }\n  ]\n}\n\n// Look for the \"contractid,\" \"contractuuid,\" and \"productname\" in the \"Globals\" section of the \"Environment quick look\" and paste them in their respective values.\n// For once run the service \"Fetch the profile details\" under \"Customer onboarding\" to fetch the \"linkedprofileid\" from the \"Globals\" section of the \"Environment quick look.\"\n// Mention the \"status\" as \"apply.\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientmobileappURL}}:5055/ThirdpartyService/applyCard?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"applyCard"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- This service is used to apply for a new card..\n- All the keys mentioned in the json are mandatory.\n- To find the contractID, contractUUID and productName use the service **To view the contracts**.\n- To find the linkedProfileId use the service **Fetch the profile details**.\n- Mention the status key as apply."
							},
							"response": []
						},
						{
							"name": "To view the cards associated with profile",
							"id": "4e623912-54a3-46b7-9780-dbaeb9ad489b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/ThirdpartyService/cards?access_token={{clientmobiletoken}}&status=active",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"cards"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										},
										{
											"key": "status",
											"value": "active"
										}
									]
								},
								"description": "- This service is to view the list of active cards which are associated to a profile."
							},
							"response": []
						},
						{
							"name": "Block a card",
							"id": "1528b4a4-4ea3-4de8-8b96-03fb39f69fe4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cardDetails\": [\n    {\n      \"contractUUID\": \"6aacb8f5-ec6e-4144-9fe8-cc150f3496b5\",\n      \"status\": \"block\"\n    }\n  ]\n}\n\n// Look for the contractuuid in \"Globals,\" which is under the Environment quick look.\n// Mention the status as \"block\".",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientmobileappURL}}:5055/ThirdpartyService/cardStatus?access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"ThirdpartyService",
										"cardStatus"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- This service is used to block the active cards.\n- In the payload, mention the contractUUID of a contract for which the active card is associated and mention the status as **block**.\n- Use **To view the contracts** for fetching the contractUUID.\n- **Note** : The contract should consist an active card in order to use this service."
							},
							"response": []
						}
					],
					"id": "bd19b024-5ca5-4ba3-950c-a30a8ec30e07",
					"description": "Consist of services which are used to\n\ni) Apply for a card\n\nii) To view the cards which are associated to a profile\n\niii) To block an active card"
				},
				{
					"name": "Check balance",
					"item": [
						{
							"name": "To check the balance",
							"id": "fc1b8a0b-deb4-4eb6-aae1-fa3701566eb9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{clientmobileappURL}}:5055/PortfolioService/Contracts?linkedProfileId={{mobileapplinkedprofileid}}&access_token={{clientmobiletoken}}",
									"host": [
										"{{clientmobileappURL}}"
									],
									"port": "5055",
									"path": [
										"PortfolioService",
										"Contracts"
									],
									"query": [
										{
											"key": "linkedProfileId",
											"value": "{{mobileapplinkedprofileid}}"
										},
										{
											"key": "access_token",
											"value": "{{clientmobiletoken}}"
										}
									]
								},
								"description": "- Using this service we can check the balance of a contract."
							},
							"response": []
						}
					],
					"id": "1017dd8d-4d66-4203-8122-a6ab3b696755",
					"description": "This folder consist of the service which is used to check the balance."
				}
			],
			"id": "75dff1e7-c925-4adb-a916-1b492df7844e",
			"description": "Mobile APIs support customer/external interaction of the banking entity layer."
		}
	]
}